{"version":3,"file":"Avatar-a49f7e71.js","sources":["../../src/services/fromEntries.ts","../../src/types/Appearance.ts","../../src/types/Size.ts","../../src/components/Avatar/Avatar.styles.ts","../../src/components/Avatar/stylesBuilder/stylesBuilder.ts","../../src/components/Avatar/Avatar.tsx"],"sourcesContent":["export const fromEntries = <TKey extends PropertyKey, const TValue>(\n  entries: [TKey, TValue][],\n): Record<TKey, TValue> => Object.fromEntries(entries) as Record<TKey, TValue>;\n","export const appearances = [\n  'blue',\n  'green',\n  'grey',\n  'red',\n  'orange',\n  'raspberry',\n  'magenta',\n  'purple',\n  'grape',\n  'violet',\n  'cyan',\n  'teal',\n  'aquamarine',\n  'emerald',\n] as const;\n\nexport type Appearance = (typeof appearances)[number];\n","export const sizes = ['large', 'medium', 'small', 'xSmall', '2xSmall'] as const;\n\nexport type Size = (typeof sizes)[number];\n","import { AvatarShape } from './AvatarShape.type';\n\nimport { fromEntries } from '@/services/fromEntries';\nimport { Appearance, appearances } from '@/types/Appearance';\nimport { BaseProps } from '@/types/BaseProps';\nimport { Emphasis } from '@/types/Emphasis';\nimport { Size, sizes } from '@/types/Size';\n\nexport type AvatarConfig = {\n  nestedImage: BaseProps;\n  shape: Record<AvatarShape, BaseProps>;\n  size: Record<Size, BaseProps>;\n  appearance: Record<\n    Appearance | 'image',\n    {\n      emphasis: Record<Emphasis, BaseProps>;\n    }\n  >;\n} & BaseProps;\n\nexport const defaultConfig = {\n  nestedImage: {\n    w: '100%',\n    h: '100%',\n  },\n  overflow: 'hidden',\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  shape: {\n    rounded: {\n      borderRadius: 'full',\n    },\n    square: {\n      borderRadius: 'large',\n    },\n  },\n  size: sizes.reduce(\n    (acc, size) => ({\n      ...acc,\n      [size]: {\n        w: size,\n        h: size,\n        text: `body-${size.includes('xSmall') ? 'strong-xSmall' : size}`,\n      },\n    }),\n    {} as Record<Size, BaseProps>,\n  ),\n\n  appearance: {\n    image: {\n      emphasis: {\n        high: {},\n        low: {},\n      },\n    },\n    ...fromEntries(\n      appearances.map((appearance) => [\n        appearance,\n        {\n          emphasis: {\n            high: {\n              color: 'nonSemantic-white-content-primary',\n              backgroundColor: `nonSemantic-${appearance}-background-strong`,\n            },\n            low: {\n              color: `nonSemantic-${appearance}-content-primary`,\n              backgroundColor: `nonSemantic-${appearance}-background-muted`,\n            },\n          },\n        },\n      ]),\n    ),\n  },\n} satisfies AvatarConfig;\n","import { AvatarProps } from '../Avatar.props';\nimport { defaultConfig } from '../Avatar.styles';\n\nimport { mergeConfigWithCustom } from '@/services';\n\nexport const stylesBuilder = ({\n  custom,\n  variant,\n}: {\n  custom: AvatarProps['custom'];\n  variant: Required<\n    Pick<AvatarProps, 'appearance' | 'emphasis' | 'shape' | 'size'>\n  >;\n}) => {\n  const {\n    appearance: appearanceStyles,\n    shape: shapeStyles,\n    size: sizeStyles,\n    ...base\n  } = mergeConfigWithCustom({ defaultConfig, custom });\n  const { appearance, emphasis, shape, size } = variant;\n\n  return {\n    ...base,\n    ...appearanceStyles[appearance].emphasis[emphasis],\n    ...shapeStyles[shape],\n    ...sizeStyles[size],\n  };\n};\n","import { FC, ImgHTMLAttributes, useMemo } from 'react';\n\nimport { AvatarProps } from './Avatar.props';\nimport { stylesBuilder } from './stylesBuilder';\n\nimport { tet } from '@/tetrisly';\nimport { MarginProps } from '@/types/MarginProps';\n\nexport const Avatar: FC<AvatarProps> = ({\n  appearance = 'blue',\n  emphasis = 'low',\n  shape = 'rounded',\n  size = 'medium',\n  custom = {},\n  initials,\n  ...rest\n}) => {\n  const { nestedImage, ...styles } = useMemo(\n    () =>\n      stylesBuilder({\n        custom,\n        variant: { appearance, emphasis, shape, size },\n      }),\n    [custom, appearance, emphasis, shape, size],\n  );\n\n  const [img, marginProps] = extractImage(rest);\n\n  return (\n    <tet.div {...{ ...styles, ...marginProps }}>\n      {img !== null ? <tet.img {...nestedImage} {...img} /> : initials}\n    </tet.div>\n  );\n};\n\nfunction extractImage<T extends object>(obj: T) {\n  if ('img' in obj) {\n    const { img, ...marginProps } = obj as {\n      img: Omit<ImgHTMLAttributes<HTMLImageElement>, 'color'>;\n    } & MarginProps;\n    return [img, marginProps] as const;\n  }\n  return [null, obj] as const;\n}\n"],"names":["fromEntries","entries","appearances","sizes","defaultConfig","acc","size","appearance","stylesBuilder","custom","variant","appearanceStyles","shapeStyles","sizeStyles","base","mergeConfigWithCustom","emphasis","shape","Avatar","initials","rest","nestedImage","styles","useMemo","img","marginProps","extractImage","jsx","tet","obj"],"mappings":"yJAAO,MAAMA,EACXC,GACyB,OAAO,YAAYA,CAAO,ECFxCC,EAAc,CACzB,OACA,QACA,OACA,MACA,SACA,YACA,UACA,SACA,QACA,SACA,OACA,OACA,aACA,SACF,ECfaC,EAAQ,CAAC,QAAS,SAAU,QAAS,SAAU,SAAS,ECoBxDC,EAAgB,CAC3B,YAAa,CACX,EAAG,OACH,EAAG,MACL,EACA,SAAU,SACV,SAAU,WACV,QAAS,OACT,WAAY,SACZ,eAAgB,SAChB,MAAO,CACL,QAAS,CACP,aAAc,MAChB,EACA,OAAQ,CACN,aAAc,OAChB,CACF,EACA,KAAMD,EAAM,OACV,CAACE,EAAKC,KAAU,CACd,GAAGD,EACH,CAACC,CAAI,EAAG,CACN,EAAGA,EACH,EAAGA,EACH,KAAM,QAAQA,EAAK,SAAS,QAAQ,EAAI,gBAAkBA,CAAI,EAChE,CAAA,GAEF,CAAC,CACH,EAEA,WAAY,CACV,MAAO,CACL,SAAU,CACR,KAAM,CAAC,EACP,IAAK,CAAC,CACR,CACF,EACA,GAAGN,EACDE,EAAY,IAAKK,GAAe,CAC9BA,EACA,CACE,SAAU,CACR,KAAM,CACJ,MAAO,oCACP,gBAAiB,eAAeA,CAAU,oBAC5C,EACA,IAAK,CACH,MAAO,eAAeA,CAAU,mBAChC,gBAAiB,eAAeA,CAAU,mBAC5C,CACF,CACF,CAAA,CACD,CACH,CACF,CACF,ECtEaC,EAAgB,CAAC,CAC5B,OAAAC,EACA,QAAAC,CACF,IAKM,CACE,KAAA,CACJ,WAAYC,EACZ,MAAOC,EACP,KAAMC,EACN,GAAGC,CACD,EAAAC,EAAsB,CAAE,cAAAX,EAAe,OAAAK,CAAQ,CAAA,EAC7C,CAAE,WAAAF,EAAY,SAAAS,EAAU,MAAAC,EAAO,KAAAX,GAASI,EAEvC,MAAA,CACL,GAAGI,EACH,GAAGH,EAAiBJ,CAAU,EAAE,SAASS,CAAQ,EACjD,GAAGJ,EAAYK,CAAK,EACpB,GAAGJ,EAAWP,CAAI,CAAA,CAEtB,ECpBOY,EAAA,CAAA,CAAiC,WAAAX,EAAA,OACzB,SAAAS,EAAA,MACF,MAAAC,EAAA,UACH,KAAAX,EAAA,SACD,OAAAG,EAAA,CAAA,EACG,SAAAU,EACV,GAAAC,CAEF,IAAA,CACE,KAAA,CAAA,YAAAC,EAAA,GAAAC,CAAA,EAAAC,EAAA,QAAmC,IAAAf,EAAA,CAEjB,OAAAC,EACZ,QAAA,CAAA,WAAAF,EAAA,SAAAS,EAAA,MAAAC,EAAA,KAAAX,CAAA,CAC6C,CAAA,EAC9C,CAAAG,EAAAF,EAAAS,EAAAC,EAAAX,CAAA,CACuC,EAG5C,CAAAkB,EAAAC,CAAA,EAAAC,EAAAN,CAAA,EAEA,OAAAO,EAAA,IAAAC,EAAA,IAAA,CAAA,GAAAN,EAAA,GAAAG,EAAA,SAAAD,IAAA,KAAAG,EAAA,IAAAC,EAAA,IAAA,CAAA,GAAAP,EAAA,GAAAG,CAAA,CAAA,EAAAL,CAAA,CAAA,CAKF,EAEA,SAAAO,EAAAG,EAAA,CACE,GAAA,QAAAA,EAAA,CACE,KAAA,CAAA,IAAAL,EAAA,GAAAC,CAAA,EAAAI,EAGA,MAAA,CAAAL,EAAAC,CAAA,CAAwB,CAE1B,MAAA,CAAA,KAAAI,CAAA,CACF"}