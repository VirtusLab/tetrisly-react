import{j as e}from"./jsx-runtime-ffb262ed.js";import{r as j}from"./index-76fb7be0.js";import{I as n}from"./InlineSearchInput-c4097aba.js";import{S as y}from"./States-c70e8d91.js";import{t as a}from"./TetrislyProvider-679426f7.js";import{T as b}from"./TetDocs-56670fe7.js";import"./_commonjsHelpers-de833af9.js";import"./SearchInput-6206a11d.js";import"./TextInput-5639db37.js";import"./tetrisly-icons.es-12549e88.js";import"./useTextInput-ecd5f9a6.js";import"./mergeConfigWithCustom-aec35d44.js";import"./extractInputProps-08fc967a.js";import"./Avatar-aeb94954.js";import"./Button-62f4c63b.js";import"./index-52c2b68d.js";import"./IconButton-9e77b08a.js";import"./index-52388870.js";import"./iframe-643bd67a.js";import"../sb-preview/runtime.js";import"./index-d3ea75b5.js";import"./index-11d98b33.js";import"./index-8fd8397b.js";import"./index-356e4a49.js";const i=["normal","disabled"],C=()=>e.jsxs(a.section,{px:"$dimension-1000",children:[e.jsx(y,{states:i,gap:"$dimension-500"}),e.jsx(a.div,{display:"flex",gap:"$dimension-500",children:i.map(o=>e.jsx(a.div,{display:"flex",flexBasis:"96px",flexShrink:"0",flexGrow:"1",children:e.jsx(n,{state:o==="normal"?void 0:"disabled"})},o))})]}),U={title:"InlineSearchInput",component:n,tags:["autodocs"],argTypes:{state:{control:{type:"select",options:["normal","disabled"]}}},parameters:{docs:{description:{component:"A distinctive text input field that allows users to search for content on a website or application, by entering keywords, phrases, or other search terms. Search Inputs often include a search icon and may provide autocomplete suggestions or filters to refine results."},page:()=>e.jsx(b,{docs:"https://docs.tetrisly.com/components/in-progress/searchinput",children:e.jsx(C,{})})}}},t={},r={render:function(){const[x,S]=j.useState("Tetrisly.com"),I=v=>{S(v.target.value)};return e.jsx(n,{value:x,onChange:I})}},s={args:{state:"disabled"}};var p,c,l;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:"{}",...(l=(c=t.parameters)==null?void 0:c.docs)==null?void 0:l.source}}};var m,d,u;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  render: function ControlledSearchInput() {
    const [value, setValue] = useState('Tetrisly.com');
    const handleOnChange: ChangeEventHandler<HTMLInputElement> = e => {
      setValue(e.target.value);
    };
    return <InlineSearchInput value={value} onChange={handleOnChange} />;
  }
}`,...(u=(d=r.parameters)==null?void 0:d.docs)==null?void 0:u.source}}};var h,g,f;s.parameters={...s.parameters,docs:{...(h=s.parameters)==null?void 0:h.docs,source:{originalSource:`{
  args: {
    state: 'disabled'
  }
}`,...(f=(g=s.parameters)==null?void 0:g.docs)==null?void 0:f.source}}};const W=["Default","Filled","Disabled"];export{t as Default,s as Disabled,r as Filled,W as __namedExportsOrder,U as default};
