import{j as e}from"./jsx-runtime-ffb262ed.js";import{R as k}from"./tetrisly-icons.es-12549e88.js";import{s as I,t as u}from"./TetrislyProvider-679426f7.js";import{r as d}from"./index-76fb7be0.js";import{m as j}from"./mergeConfigWithCustom-aec35d44.js";import{H as q}from"./HelperText-56e11054.js";import{u as T}from"./useIndeterminate-f02e4f88.js";import{e as V}from"./extractInputProps-08fc967a.js";const S={display:"flex",flexDirection:"column",alignItems:"flex-start",gap:"$space-component-gap-xSmall",minWidth:"$size-3xSmall",minHeight:"$size-3xSmall",color:"$color-content-primary",opacity:{disabled:"$opacity-disabled"},pointerEvents:{disabled:"none"},innerElements:{checkboxContainer:{position:"relative",cursor:"pointer"},input:{appearance:"none",display:"block",w:"$size-3xSmall",h:"$size-3xSmall",pointerEvents:"none",backgroundColor:{_:"$color-interaction-background-formField",checked:{_:"$color-interaction-default-normal",hover:"$color-interaction-default-hover"},indeterminate:{_:"$color-interaction-default-normal",hover:"$color-interaction-default-hover"}},borderRadius:"$border-radius-medium",boxShadow:"0 0 #0000",ring:"$border-width-focus",ringInset:!0,ringColor:{_:"$color-interaction-border-neutral-normal",hover:"$color-interaction-border-hover",checked:{_:"$color-interaction-ghost-normal",hover:"$color-interaction-ghost-normal"},alert:{_:"$color-interaction-border-alert",hover:"$color-interaction-border-alert",checked:"$color-interaction-ghost-normal"},indeterminate:"transparent"},outlineStyle:{focusWithin:"solid"},outlineColor:{focusWithin:"$color-interaction-focus-default"},outlineWidth:{focusWithin:"$border-width-focus"},outlineOffset:{focusWithin:"$border-width-small"},transition:!0,transitionDuration:200},checkboxIcon:{position:"absolute",color:"$color-interaction-inverted-normal",w:"$size-3xSmall",h:"$size-3xSmall",left:0,top:0},label:{display:"flex",justifyContent:"center",alignItems:"center",gap:"$space-component-gap-small",cursor:"pointer",color:"$color-content-primary",text:"$typo-body-medium"},helperText:{paddingLeft:"$space-component-padding-2xLarge"}}},E=t=>{const{innerElements:{input:a,checkboxContainer:o,checkboxIcon:n,label:p,helperText:m},...l}=j({defaultConfig:S,custom:t});return{container:l,input:a,checkboxContainer:o,checkboxIcon:n,label:p,helperText:m}},h=I(u.div)`
  input + div > #checkmark {
    display: none;
    pointer-events: none;
  }

  input:checked + div > #checkmark {
    display: block;
  }
`,y=d.forwardRef(({isChecked:t,isIndeterminate:a=!1,state:o,label:n,helperText:p,custom:m,onChange:l,...v},c)=>{const r=d.useMemo(()=>E(m),[m]),f=d.useId(),s=T(a),[$,C]=V(v),g=d.useCallback(i=>{s.current=i,typeof c=="function"?c(i):c&&(c.current=i)},[c,s]),_=d.useCallback(()=>{var i,b;n||((i=s.current)==null||i.click(),(b=s.current)==null||b.focus())},[s,n]);(l===void 0&&t!==void 0||l!==void 0&&t===void 0)&&console.warn("Checkbox: onChange and isChecked have to be either both provided or both not provided");const x=e.jsxs(h,{...r.checkboxContainer,"data-testid":"checkbox-checkboxContainer",children:[e.jsx(u.input,{...r.input,type:"checkbox",ref:g,checked:t&&!a,onChange:l,disabled:o==="disabled","data-state":o,id:f,"data-testid":"checkbox-input",...$}),e.jsxs(u.div,{...r.checkboxIcon,onClick:_,"data-testid":"checkbox-checkboxIcon",children:[a&&e.jsx(k,{name:"16-minus"}),e.jsx(k,{name:"16-check",id:"checkmark"})]})]});return e.jsxs(u.div,{...r.container,"data-state":o,"data-testid":"checkbox",...C,children:[n?e.jsxs(u.label,{...r.label,htmlFor:f,"data-testid":"checkbox-label",children:[x,n]}):x,!!p&&e.jsx(q,{custom:r.helperText,intent:o==="alert"?"alert":"none",...p,"data-testid":"checkbox-helperText"})]})});try{h.displayName="CheckboxContainer",h.__docgenInfo={description:"",displayName:"CheckboxContainer",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null"}},theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"Theme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"undefined"}}}}}catch{}try{y.displayName="Checkbox",y.__docgenInfo={description:"",displayName:"Checkbox",props:{isChecked:{defaultValue:null,description:"",name:"isChecked",required:!1,type:{name:"boolean"}},isIndeterminate:{defaultValue:{value:"false"},description:"",name:"isIndeterminate",required:!1,type:{name:"boolean"}},state:{defaultValue:null,description:"",name:"state",required:!1,type:{name:"enum",value:[{value:'"disabled"'},{value:'"alert"'}]}},custom:{defaultValue:null,description:"",name:"custom",required:!1,type:{name:"CheckboxConfig"}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},helperText:{defaultValue:null,description:"",name:"helperText",required:!1,type:{name:'Pick<HelperTextProps, "text" | "counter" | "hasBeforeIcon">'}}}}}catch{}export{y as C};
