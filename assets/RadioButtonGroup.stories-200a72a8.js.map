{"version":3,"file":"RadioButtonGroup.stories-200a72a8.js","sources":["../../src/components/RadioButtonGroup/RadioButtonGroup.styles.ts","../../src/components/RadioButtonGroup/RadioButtonGroup.tsx"],"sourcesContent":["import { BaseProps } from '@/types/BaseProps';\n\nexport type RadioButtonGroupConfig = {\n  innerElements: {\n    radioButtonContainer: BaseProps;\n  };\n} & BaseProps;\n\nexport const defaultConfig = {\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 'component-gap-small',\n  innerElements: {\n    radioButtonContainer: {\n      display: 'grid',\n      gap: 'component-gap-small component-gap-large',\n    },\n  },\n} satisfies RadioButtonGroupConfig;\n","import {\n  Children,\n  cloneElement,\n  FC,\n  isValidElement,\n  PropsWithChildren,\n  ReactElement,\n} from 'react';\n\nimport type {\n  RadioButtonGroupProps,\n  RadioButtonGroupItemProps,\n} from './RadioButtonGroup.props';\nimport { defaultConfig } from './RadioButtonGroup.styles';\nimport { HelperText } from '../HelperText';\nimport { Label } from '../Label';\nimport { RadioButton } from '../RadioButton';\n\nimport { mergeConfigWithCustom } from '@/services';\nimport { tet } from '@/tetrisly';\nimport { MarginProps } from '@/types';\n\ntype Props = FC<PropsWithChildren<RadioButtonGroupProps & MarginProps>> & {\n  Item: React.FC<RadioButtonGroupItemProps>;\n};\n\nexport const RadioButtonGroup: Props = ({\n  name,\n  column = 1,\n  label,\n  helperText,\n  custom,\n  children,\n  ...restProps\n}) => {\n  const {\n    innerElements: { radioButtonContainer: radioButtonContainerStyles },\n    ...restStyles\n  } = mergeConfigWithCustom({ defaultConfig, custom });\n\n  const radioButtons = Children.map(children, (child) => {\n    if (isValidElement(child) && child?.type !== RadioButtonGroup.Item) {\n      console.error(\n        'You should use only RadioButtonGroup.Item as a child of a RadioButtonGroup component.',\n      );\n    }\n    if (isValidElement(child)) {\n      return cloneElement(child as ReactElement<RadioButtonGroupItemProps>, {\n        name,\n      });\n    }\n    return child;\n  });\n\n  return (\n    <tet.div {...restStyles} {...restProps} data-testid=\"radio-button-group\">\n      {!!label &&\n        (typeof label === 'string' ? (\n          <Label label={label} />\n        ) : (\n          <Label {...label} />\n        ))}\n      <tet.div\n        {...radioButtonContainerStyles}\n        gridTemplateColumns={`repeat(${column}, 1fr)`}\n        data-testid=\"radio-button-group-container\"\n      >\n        {radioButtons}\n      </tet.div>\n      {!!helperText &&\n        (typeof helperText === 'string' ? (\n          <HelperText text={helperText} />\n        ) : (\n          <HelperText {...helperText} />\n        ))}\n    </tet.div>\n  );\n};\n\nconst Item: FC<RadioButtonGroupItemProps> = (props) => (\n  <RadioButton {...props} />\n);\n\nRadioButtonGroup.Item = Item;\n"],"names":["defaultConfig","RadioButtonGroup","name","column","label","helperText","custom","children","restProps","radioButtonContainerStyles","restStyles","mergeConfigWithCustom","radioButtons","Children","child","isValidElement","cloneElement","jsxs","tet","jsx","Label","HelperText","Item","props","RadioButton"],"mappings":"oZAQO,MAAMA,EAAgB,CAC3B,QAAS,OACT,cAAe,SACf,IAAK,sBACL,cAAe,CACb,qBAAsB,CACpB,QAAS,OACT,IAAK,yCACP,CACF,CACF,ECQOC,EAAA,CAAA,CAAiC,KAAAC,EACtC,OAAAC,EAAA,EACS,MAAAC,EACT,WAAAC,EACA,OAAAC,EACA,SAAAC,EACA,GAAAC,CAEF,IAAA,CACE,KAAA,CAAM,cAAA,CAAA,qBAAAC,CAAA,EAC8D,GAAAC,CAC/D,EAAAC,EAAA,CAAA,cAAAX,EAAA,OAAAM,CAAA,CAAA,EAGLM,EAAAC,EAAA,SAAA,IAAAN,EAAAO,IACEC,EAAAA,eAAAD,CAAA,IAAAA,GAAA,YAAAA,EAAA,QAAAb,EAAA,MACE,QAAA,MAAQ,uFACN,EAGJc,EAAAA,eAAAD,CAAA,EACEE,EAAAA,aAAAF,EAAA,CAAsE,KAAAZ,CACpE,CAAA,EAGJY,EAAO,EAGT,OAAAG,EAAA,KAAAC,EAAA,IAAA,CAAA,GAAAR,EAAA,GAAAF,EAAA,cAAA,qBAAA,SAAA,CAEK,CAAA,CAAAJ,IAAA,OAAAA,GAAA,SAAAe,EAAA,IAAAC,EAAA,CAAA,MAAAhB,CAAA,CAAA,EAAAe,EAAAA,IAAAC,EAAA,CAAA,GAAAhB,CAAA,CAAA,GAIqBe,EAAA,IAEtBD,EAAA,IAAK,CAAJ,GAAAT,EACK,oBAAA,UAAAN,CAAA,SACiC,cAAA,+BACzB,SAAAS,CAEX,CAAA,EACH,CAAA,CAAAP,IAAA,OAAAA,GAAA,SAAAc,EAAAA,IAAAE,EAAA,CAAA,KAAAhB,CAAA,CAAA,EAAAc,EAAA,IAAAE,EAAA,CAAA,GAAAhB,CAAA,CAAA,EAKgC,CAAA,CAAA,CAItC,EAEAiB,EAAAC,GAAAJ,EAAA,IAAAK,EAAA,CAAA,GAAAD,CAAA,CAAA,EAIAtB,EAAA,KAAAqB;;;;;;;;"}