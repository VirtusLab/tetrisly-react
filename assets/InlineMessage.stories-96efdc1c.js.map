{"version":3,"file":"InlineMessage.stories-96efdc1c.js","sources":["../../src/components/InlineMessage/InlineMessage.styles.ts","../../src/components/InlineMessage/stylesBuilder/stylesBuilder.ts","../../src/components/InlineMessage/InlineMessage.tsx"],"sourcesContent":["import { InlineMessageIntent } from './InlineMessageIntent.type';\n\nimport { BaseProps } from '@/types/BaseProps';\nimport { IconName } from '@/utility-types/IconName';\n\nexport type InlineMessageConfig = {\n  title: {\n    intent: Record<InlineMessageIntent, BaseProps>;\n  } & BaseProps;\n  icon: {\n    intent: Record<InlineMessageIntent, { name: IconName<20> }>;\n  };\n  iconContainer: {\n    intent: Record<InlineMessageIntent, BaseProps>;\n  } & BaseProps;\n  description: BaseProps;\n} & BaseProps;\n\nexport const config = {\n  display: 'flex',\n  alignItems: 'flex-start',\n  flexWrap: 'wrap',\n  gap: 'component-gap-small',\n  text: 'medium-175',\n  title: {\n    intent: {\n      informative: {\n        color: 'content-informative-primary',\n      },\n      success: {\n        color: 'content-positive-primary',\n      },\n      warning: {\n        color: 'content-warning-primary',\n      },\n      negative: {\n        color: 'content-negative-primary',\n      },\n    },\n  },\n  icon: {\n    intent: {\n      informative: {\n        name: '20-info-fill',\n      },\n      success: {\n        name: '20-check-circle-fill',\n      },\n      warning: {\n        name: '20-warning-fill',\n      },\n      negative: {\n        name: '20-alert-fill',\n      },\n    },\n  },\n  iconContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    minHeight: 'xSmall',\n    intent: {\n      informative: {\n        color: 'content-informative-secondary',\n      },\n      success: {\n        color: 'content-positive-secondary',\n      },\n      warning: {\n        color: 'content-warning-secondary',\n      },\n      negative: {\n        color: 'content-negative-secondary',\n      },\n    },\n  },\n  description: {\n    color: 'content-secondary',\n  },\n} as const satisfies InlineMessageConfig;\n","import { merge } from 'lodash';\n\nimport { InlineMessageProps } from '../InlineMessage.props';\nimport { config as defaultConfig } from '../InlineMessage.styles';\nimport { InlineMessageIntent } from '../InlineMessageIntent.type';\n\nexport const stylesBuilder = (\n  intent: InlineMessageIntent,\n  custom: InlineMessageProps['custom'],\n) => {\n  const styles = merge(defaultConfig, custom);\n\n  const { intent: titleIntent, ...restTitle } = styles.title;\n  const { intent: iconIntent, ...restIcon } = styles.icon;\n  const { intent: iconContainerIntent, ...restIconContainer } =\n    styles.iconContainer;\n\n  return {\n    ...styles,\n    title: {\n      ...restTitle,\n      ...titleIntent[intent],\n    },\n    icon: {\n      ...restIcon,\n      ...iconIntent[intent],\n    },\n    iconContainer: {\n      ...restIconContainer,\n      ...iconContainerIntent[intent],\n    },\n  };\n};\n","import { Icon } from '@virtuslab/tetrisly-icons';\nimport { FC, useMemo } from 'react';\n\nimport { InlineMessageProps } from './InlineMessage.props';\nimport { stylesBuilder } from './stylesBuilder';\nimport { tet } from '../../tetrisly';\n\nimport { MarginProps } from '@/types/MarginProps';\n\nexport const InlineMessage: FC<InlineMessageProps & MarginProps> = ({\n  intent = 'informative',\n  title,\n  description,\n  custom,\n  ...restProps\n}) => {\n  const {\n    iconContainer: iconContainerStyles,\n    icon: iconStyles,\n    title: titleStyles,\n    description: descriptionStyles,\n    ...containerStyles\n  } = useMemo(() => stylesBuilder(intent, custom), [intent, custom]);\n\n  return (\n    <tet.div {...containerStyles} {...restProps} data-testid=\"inline-message\">\n      <tet.span {...iconContainerStyles}>\n        <Icon {...iconStyles} data-testid=\"inline-message-icon\" />\n      </tet.span>\n      <tet.span {...titleStyles} data-testid=\"inline-message-title\">\n        {title}\n      </tet.span>\n      {description && (\n        <tet.span\n          {...descriptionStyles}\n          data-testid=\"inline-message-description\"\n        >\n          {description}\n        </tet.span>\n      )}\n    </tet.div>\n  );\n};\n"],"names":["config","stylesBuilder","intent","custom","styles","merge","defaultConfig","titleIntent","restTitle","iconIntent","restIcon","iconContainerIntent","restIconContainer","InlineMessage","title","description","restProps","iconContainerStyles","iconStyles","titleStyles","descriptionStyles","containerStyles","useMemo","jsxs","tet","jsx","Icon"],"mappings":"sOAkBO,MAAMA,EAAS,CACpB,QAAS,OACT,WAAY,aACZ,SAAU,OACV,IAAK,sBACL,KAAM,aACN,MAAO,CACL,OAAQ,CACN,YAAa,CACX,MAAO,6BACT,EACA,QAAS,CACP,MAAO,0BACT,EACA,QAAS,CACP,MAAO,yBACT,EACA,SAAU,CACR,MAAO,0BACT,CACF,CACF,EACA,KAAM,CACJ,OAAQ,CACN,YAAa,CACX,KAAM,cACR,EACA,QAAS,CACP,KAAM,sBACR,EACA,QAAS,CACP,KAAM,iBACR,EACA,SAAU,CACR,KAAM,eACR,CACF,CACF,EACA,cAAe,CACb,QAAS,OACT,WAAY,SACZ,UAAW,SACX,OAAQ,CACN,YAAa,CACX,MAAO,+BACT,EACA,QAAS,CACP,MAAO,4BACT,EACA,QAAS,CACP,MAAO,2BACT,EACA,SAAU,CACR,MAAO,4BACT,CACF,CACF,EACA,YAAa,CACX,MAAO,mBACT,CACF,ECxEaC,EAAgB,CAC3BC,EACAC,IACG,CACG,MAAAC,EAASC,EAAAA,MAAMC,EAAeH,CAAM,EAEpC,CAAE,OAAQI,EAAa,GAAGC,GAAcJ,EAAO,MAC/C,CAAE,OAAQK,EAAY,GAAGC,GAAaN,EAAO,KAC7C,CAAE,OAAQO,EAAqB,GAAGC,GACtCR,EAAO,cAEF,MAAA,CACL,GAAGA,EACH,MAAO,CACL,GAAGI,EACH,GAAGD,EAAYL,CAAM,CACvB,EACA,KAAM,CACJ,GAAGQ,EACH,GAAGD,EAAWP,CAAM,CACtB,EACA,cAAe,CACb,GAAGU,EACH,GAAGD,EAAoBT,CAAM,CAC/B,CAAA,CAEJ,ECvBOW,EAAA,CAAA,CAA6D,OAAAX,EAAA,cACzD,MAAAY,EACT,YAAAC,EACA,OAAAZ,EACA,GAAAa,CAEF,IAAA,CACE,KAAA,CAAM,cAAAC,EACW,KAAAC,EACT,MAAAC,EACC,YAAAC,EACM,GAAAC,CACV,EAAAC,EAAA,QAAA,IAAArB,EAAAC,EAAAC,CAAA,EAAA,CAAAD,EAAAC,CAAA,CAAA,EAGL,OAAAoB,EAAA,KAAAC,EAAA,IAAA,CAAA,GAAAH,EAAA,GAAAL,EAAA,cAAA,iBAAA,SAAA,CAEIS,EAAAA,IAAAD,EAAA,KAAA,CAAA,GAAAP,EAAA,SAAAQ,EAAAA,IAAAC,EAAA,CAAA,GAAAR,EAAA,cAAA,qBAAA,CAAA,CAAA,CAAA,EAEAO,MAAAD,EAAA,KAAA,CAAA,GAAAL,EAAA,cAAA,uBAAA,SAAAL,EAAA,EAGAC,GAAAU,EAAA,IAEED,EAAA,KAAK,CAAJ,GAAAJ,EACK,cAAA,6BACQ,SAAAL,CAEX,CAAA,CACH,CAAA,CAAA,CAIR;;;;;;;;;;;;;;;;"}