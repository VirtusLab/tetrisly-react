{"version":3,"file":"Checkbox.stories-5f12d865.js","sources":["../../src/docs-components/CheckboxDocs.tsx"],"sourcesContent":["import { FC } from 'react';\n\nimport { SectionHeader } from './common/SectionHeader';\nimport { States } from './common/States';\n\nimport { Checkbox, CheckboxProps } from '@/components/Checkbox';\nimport { tet } from '@/tetrisly';\n\nconst getYesNo = (yes: boolean) => (yes ? 'Yes' : 'No');\n\nconst getLabels = (label: boolean, helperText: boolean) => [\n  `Label: ${getYesNo(label)}`,\n  `Helper Text: ${getYesNo(helperText)}`,\n];\n\nexport const CheckboxDocs: FC = () => (\n  <tet.div>\n    {['Unchecked', 'Checked', 'Indeterminate'].map((state) => (\n      <tet.section key={state} py=\"500\">\n        <SectionHeader variant=\"H1\" as=\"h2\" px=\"1000\" py=\"500\">\n          {state}\n        </SectionHeader>\n\n        {[\n          { label: false, helperText: false },\n          { label: true, helperText: false },\n          { label: true, helperText: true },\n        ].map(({ label, helperText }) => (\n          <tet.div px=\"1000\" pb=\"500\" key={`${label}${helperText}`}>\n            <SectionHeader\n              variant=\"H2\"\n              as=\"h3\"\n              py=\"500\"\n              labels={getLabels(label, helperText)}\n            />\n            <States\n              states={['normal', 'disabled', 'alert']}\n              flexBasis=\"130px\"\n              gap=\"500\"\n            />\n            <tet.div\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              gap=\"500\"\n            >\n              <tet.div flexBasis=\"130px\" flexGrow=\"1\" flexShrink=\"0\">\n                <Checkbox\n                  isChecked={state === 'Checked'}\n                  isIndeterminate={state === 'Indeterminate'}\n                  mt=\"500\"\n                  {...({\n                    label: label ? 'Checkbox Label' : undefined,\n                    helperText: helperText ? 'Helper Text' : undefined,\n                  } as CheckboxProps)}\n                />\n              </tet.div>\n              <tet.div flexBasis=\"130px\" flexGrow=\"1\" flexShrink=\"0\">\n                <Checkbox\n                  isChecked={state === 'Checked'}\n                  isIndeterminate={state === 'Indeterminate'}\n                  state=\"disabled\"\n                  mt=\"500\"\n                  {...({\n                    label: label ? 'Checkbox Label' : undefined,\n                    helperText: helperText ? 'Helper Text' : undefined,\n                  } as CheckboxProps)}\n                />\n              </tet.div>\n              <tet.div flexBasis=\"130px\" flexGrow=\"1\" flexShrink=\"0\">\n                <Checkbox\n                  isChecked={state === 'Checked'}\n                  isIndeterminate={state === 'Indeterminate'}\n                  state=\"alert\"\n                  mt=\"500\"\n                  {...({\n                    label: label ? 'Checkbox Label' : undefined,\n                    helperText: helperText ? 'Helper Text' : undefined,\n                  } as CheckboxProps)}\n                />\n              </tet.div>\n            </tet.div>\n          </tet.div>\n        ))}\n      </tet.section>\n    ))}\n  </tet.div>\n);\n"],"names":["getYesNo","yes","getLabels","label","helperText","CheckboxDocs","jsx","tet","state","jsxs","SectionHeader","States","Checkbox"],"mappings":"slBAQA,MAAAA,EAAAC,GAAAA,EAAA,MAAA,KAEAC,EAAA,CAAAC,EAAAC,IAAA,CAA2D,UAAAJ,EAAAG,CAAA,CAAA,GAChC,gBAAAH,EAAAI,CAAA,CAAA,EAE3B,EAEOC,EAAA,IAAAC,EAAA,IAAAC,EAAA,IAAA,CAAA,SAAA,CAAA,YAAA,UAAA,eAAA,EAAA,IAAAC,GAAAC,OAAAF,EAAA,QAAA,CAAA,GAAA,MAAA,SAAA,CAICD,EAAAA,IAAAI,EAAA,CAAA,QAAA,KAAA,GAAA,KAAA,GAAA,OAAA,GAAA,MAAA,SAAAF,CAAA,CAAA,EAEA,CAEC,CAAA,MAAA,GAAA,WAAA,EAAA,EACmC,CAAA,MAAA,GAAA,WAAA,EAAA,EACD,CAAA,MAAA,GAAA,WAAA,EAAA,CACD,EAAA,IAAA,CAAA,CAAA,MAAAL,EAAA,WAAAC,CAAA,IAAAK,EAAAA,KAAAF,EAAA,IAAA,CAAA,GAAA,OAAA,GAAA,MAAA,SAAA,CAG9BD,EAAA,IAAAI,EAAC,CAAA,QAAA,KACS,GAAA,KACL,GAAA,MACA,OAAAR,EAAAC,EAAAC,CAAA,CACgC,CAAA,EACrCE,EAAA,IACAK,EAAC,CAAA,OAAA,CAAA,SAAA,WAAA,OAAA,EACuC,UAAA,QAC5B,IAAA,KACN,CAAA,EACNF,EAAA,KACAF,EAAA,IAAK,CAAJ,QAAA,OACS,WAAA,SACG,eAAA,SACI,IAAA,MACX,SAAA,CAEJD,EAAAA,IAAAC,EAAA,IAAA,CAAA,UAAA,QAAA,SAAA,IAAA,WAAA,IAAA,SAAAD,EAAA,IACEM,EAAC,CAAA,UAAAJ,IAAA,UACsB,gBAAAA,IAAA,gBACM,GAAA,MAEtB,MAAAL,EAAA,iBAAA,OAC+B,WAAAC,EAAA,cAAA,MAEpC,CAAA,EAAA,EAEJE,EAAAA,IAAAC,EAAA,IAAA,CAAA,UAAA,QAAA,SAAA,IAAA,WAAA,IAAA,SAAAD,EAAA,IAEEM,EAAC,CAAA,UAAAJ,IAAA,UACsB,gBAAAA,IAAA,gBACM,MAAA,WACrB,GAAA,MAED,MAAAL,EAAA,iBAAA,OAC+B,WAAAC,EAAA,cAAA,MAEpC,CAAA,EAAA,EAEJE,EAAAA,IAAAC,EAAA,IAAA,CAAA,UAAA,QAAA,SAAA,IAAA,WAAA,IAAA,SAAAD,EAAA,IAEEM,EAAC,CAAA,UAAAJ,IAAA,UACsB,gBAAAA,IAAA,gBACM,MAAA,QACrB,GAAA,MAED,MAAAL,EAAA,iBAAA,OAC+B,WAAAC,EAAA,cAAA,MAEpC,CAAA,EAAA,CAEJ,CAAA,CAAA,CACF,CAAA,EAAA,GAAAD,CAAA,GAAAC,CAAA,EAAA,CAAA,CAEH,GAAAI,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}