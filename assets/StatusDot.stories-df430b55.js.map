{"version":3,"file":"StatusDot.stories-df430b55.js","sources":["../../src/components/StatusDot/StatusDot.styles.ts","../../src/components/StatusDot/stylesBuilder/stylesBuilder.ts","../../src/components/StatusDot/StatusDot.tsx","../../src/docs-components/StatusDotDocs.tsx"],"sourcesContent":["import type { StatusDotAppearance } from './types';\n\nimport type { BaseProps } from '@/types/BaseProps';\n\nexport type StatusDotConfig = {\n  appearance?: Partial<Record<StatusDotAppearance, BaseProps>>;\n  stroked?: BaseProps;\n} & BaseProps;\n\nexport const defaultConfig = {\n  w: '12px',\n  h: '12px',\n  borderRadius: 'full',\n  appearance: {\n    red: {\n      backgroundColor: 'nonSemantic-red-background-strong',\n    },\n    green: {\n      backgroundColor: 'nonSemantic-green-background-strong',\n    },\n    orange: {\n      backgroundColor: 'nonSemantic-orange-background-strong',\n    },\n  },\n  stroked: {\n    ring: 'medium',\n    ringColor: 'border-inverted',\n  },\n} satisfies StatusDotConfig;\n","import type { StatusDotProps } from '../StatusDot.props';\nimport { defaultConfig } from '../StatusDot.styles';\nimport { StatusDotAppearance } from '../types';\n\nimport { mergeConfigWithCustom } from '@/services';\nimport { BaseProps } from '@/types/BaseProps';\n\ntype StylesBuilderParams = {\n  appearance: StatusDotAppearance;\n  stroked: StatusDotProps['stroked'];\n  custom: StatusDotProps['custom'];\n};\n\ntype StatusDotStylesBuilder = {\n  container: BaseProps;\n};\n\nexport const stylesBuilder = ({\n  appearance,\n  stroked,\n  custom,\n}: StylesBuilderParams): StatusDotStylesBuilder => {\n  const config = mergeConfigWithCustom({ defaultConfig, custom });\n\n  const {\n    appearance: appearanceStyles,\n    stroked: strokedStyles,\n    ...restStyles\n  } = config;\n\n  return {\n    container: {\n      ...restStyles,\n      ...appearanceStyles[appearance],\n      ...(stroked && strokedStyles),\n    },\n  };\n};\n","import { FC, useMemo } from 'react';\n\nimport type { StatusDotProps } from './StatusDot.props';\nimport { stylesBuilder } from './stylesBuilder';\n\nimport { tet } from '@/tetrisly';\nimport type { MarginProps } from '@/types';\n\nexport const StatusDot: FC<StatusDotProps & MarginProps> = ({\n  appearance = 'red',\n  stroked = false,\n  custom,\n  ...restProps\n}) => {\n  const styles = useMemo(\n    () => stylesBuilder({ appearance, stroked, custom }),\n    [appearance, stroked, custom],\n  );\n\n  return (\n    <tet.div {...styles.container} data-testid=\"status-dot\" {...restProps} />\n  );\n};\n","import { SectionHeader } from './common/SectionHeader';\nimport { States } from './common/States';\n\nimport { StatusDot } from '@/components/StatusDot';\nimport { tet } from '@/tetrisly';\n\nconst appearances = ['red', 'green', 'orange'] as const;\n\nexport const StatusDotDocs = () => (\n  <>\n    <tet.section py=\"component-padding-4xLarge\">\n      <SectionHeader variant=\"H1\" as=\"h2\">\n        Stroked: No\n      </SectionHeader>\n      <tet.div px=\"1000\" py=\"500\">\n        <States states={appearances} flexBasis=\"300px\" />\n        <tet.div display=\"flex\">\n          {appearances.map((appearance) => (\n            <tet.div\n              key={appearance}\n              display=\"flex\"\n              flexBasis=\"300px\"\n              flexShrink=\"0\"\n              flexGrow=\"1\"\n            >\n              <StatusDot appearance={appearance} />\n            </tet.div>\n          ))}\n        </tet.div>\n      </tet.div>\n    </tet.section>\n    <tet.section bg=\"background-neutral-subtle\" py=\"component-padding-4xLarge\">\n      <SectionHeader variant=\"H1\" as=\"h2\" py=\"500\">\n        Stroked: Yes\n      </SectionHeader>\n      <tet.div px=\"1000\" py=\"500\">\n        <States states={appearances} flexBasis=\"300px\" />\n        <tet.div display=\"flex\">\n          {appearances.map((appearance) => (\n            <tet.div\n              key={appearance}\n              display=\"flex\"\n              flexBasis=\"300px\"\n              flexShrink=\"0\"\n              flexGrow=\"1\"\n            >\n              <StatusDot appearance={appearance} stroked />\n            </tet.div>\n          ))}\n        </tet.div>\n      </tet.div>\n    </tet.section>\n  </>\n);\n"],"names":["defaultConfig","stylesBuilder","appearance","stroked","custom","config","mergeConfigWithCustom","appearanceStyles","strokedStyles","restStyles","StatusDot","restProps","styles","useMemo","jsx","tet","appearances","StatusDotDocs","jsxs","Fragment","SectionHeader","States"],"mappings":"icASO,MAAMA,EAAgB,CAC3B,EAAG,OACH,EAAG,OACH,aAAc,OACd,WAAY,CACV,IAAK,CACH,gBAAiB,mCACnB,EACA,MAAO,CACL,gBAAiB,qCACnB,EACA,OAAQ,CACN,gBAAiB,sCACnB,CACF,EACA,QAAS,CACP,KAAM,SACN,UAAW,iBACb,CACF,ECXaC,EAAgB,CAAC,CAC5B,WAAAC,EACA,QAAAC,EACA,OAAAC,CACF,IAAmD,CACjD,MAAMC,EAASC,EAAsB,CAAE,cAAAN,EAAe,OAAAI,CAAQ,CAAA,EAExD,CACJ,WAAYG,EACZ,QAASC,EACT,GAAGC,CACD,EAAAJ,EAEG,MAAA,CACL,UAAW,CACT,GAAGI,EACH,GAAGF,EAAiBL,CAAU,EAC9B,GAAIC,GAAWK,CACjB,CAAA,CAEJ,EC7BOE,EAAA,CAAA,CAAqD,WAAAR,EAAA,MAC7C,QAAAC,EAAA,GACH,OAAAC,EACV,GAAAO,CAEF,IAAA,CACE,MAAAC,EAAAC,EAAA,QAAe,IAAAZ,EAAA,CAAA,WAAAC,EAAA,QAAAC,EAAA,OAAAC,CAAA,CAAA,EACsC,CAAAF,EAAAC,EAAAC,CAAA,CACvB,EAG9B,OAAAU,MAAAC,EAAA,IAAA,CAAA,GAAAH,EAAA,UAAA,cAAA,aAAA,GAAAD,CAAA,CAAA,CAGF,qdChBA,MAAMK,EAAc,CAAC,MAAO,QAAS,QAAQ,EAEhCC,EAAgB,IAEzBC,EAAAA,KAAAC,EAAA,SAAA,CAAA,SAAA,CAAAD,EAAA,KAACH,EAAI,QAAJ,CAAY,GAAG,4BACd,SAAA,CAAAD,MAACM,EAAc,CAAA,QAAQ,KAAK,GAAG,KAAK,SAEpC,cAAA,SACCL,EAAI,IAAJ,CAAQ,GAAG,OAAO,GAAG,MACpB,SAAA,CAAAD,EAAA,IAACO,EAAO,CAAA,OAAQL,EAAa,UAAU,QAAQ,EAC/CF,EAAAA,IAACC,EAAI,IAAJ,CAAQ,QAAQ,OACd,SAAAC,EAAY,IAAKd,GAChBY,EAAA,IAACC,EAAI,IAAJ,CAEC,QAAQ,OACR,UAAU,QACV,WAAW,IACX,SAAS,IAET,SAAAD,EAAA,IAACJ,GAAU,WAAAR,CAAwB,CAAA,CAAA,EAN9BA,CAQR,CAAA,EACH,CAAA,EACF,CAAA,EACF,SACCa,EAAI,QAAJ,CAAY,GAAG,4BAA4B,GAAG,4BAC7C,SAAA,CAAAD,EAAAA,IAACM,GAAc,QAAQ,KAAK,GAAG,KAAK,GAAG,MAAM,SAE7C,cAAA,CAAA,SACCL,EAAI,IAAJ,CAAQ,GAAG,OAAO,GAAG,MACpB,SAAA,CAAAD,EAAA,IAACO,EAAO,CAAA,OAAQL,EAAa,UAAU,QAAQ,EAC/CF,EAAAA,IAACC,EAAI,IAAJ,CAAQ,QAAQ,OACd,SAAAC,EAAY,IAAKd,GAChBY,EAAA,IAACC,EAAI,IAAJ,CAEC,QAAQ,OACR,UAAU,QACV,WAAW,IACX,SAAS,IAET,SAACD,EAAA,IAAAJ,EAAA,CAAU,WAAAR,EAAwB,QAAO,GAAC,CAAA,EANtCA,CAQR,CAAA,EACH,CAAA,EACF,CAAA,EACF,CAAA,EACF;;;;;;;;;;;;;;"}