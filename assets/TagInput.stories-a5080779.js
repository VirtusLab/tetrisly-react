import{j as t}from"./jsx-runtime-ffb262ed.js";import{r as a}from"./index-76fb7be0.js";import{m as O}from"./mergeConfigWithCustom-aec35d44.js";import{e as B}from"./extractInputProps-08fc967a.js";import{H as W}from"./HelperText-1a30dfa9.js";import{L as F}from"./Label-f847d4cc.js";import{T as m}from"./Tag-b97f395a.js";import{t as h}from"./TetrislyProvider-fe6220a9.js";import{S as H}from"./SectionHeader-0e90dab1.js";import"./AlertBanner-7664c47f.js";import"./Avatar-cbae65d6.js";import"./Badge-a8eb4951.js";import"./BooleanPill-6a0c7ceb.js";import"./Button-2de68136.js";import"./Checkbox-8140fa93.js";import"./CheckboxGroup-cd3838a3.js";import"./CornerDialog-78942334.js";import"./Counter-4f1586f2.js";import"./Divider-742bb07d.js";import"./FileItem-0544480c.js";import"./Icon-d73ae0b2.js";import"./IconButton-d23d9973.js";import"./InlineBanner-5ba2ecba.js";import"./InlineMessage-731e69f8.js";import"./InlineSearchInput-11dd6ef2.js";import"./index-516c723e.js";import"./NewItemButton-c3b9d909.js";import"./Popover-982c1c1a.js";import"./RadioButton-b0a0001b.js";import"./RadioButtonGroup-4d2826d2.js";import"./SearchInput-2717e6b7.js";import"./Select-f98de5ce.js";import"./SelectablePill-7fddae97.js";import"./SocialButton-51f3d8f3.js";import"./Status-65f10c50.js";import"./StatusDot-d6060ad8.js";import"./TextInput-d4e99ac0.js";import"./Toast-76240d4a.js";import{T as Y}from"./TetDocs-45582a01.js";import"./_commonjsHelpers-de833af9.js";import"./tetrisly-icons.es-12549e88.js";import"./useAction-275346b1.js";import"./useTextInput-ecd5f9a6.js";import"./index-576ce100.js";import"./iframe-e1b27985.js";import"../sb-preview/runtime.js";import"./index-d3ea75b5.js";import"./index-11d98b33.js";import"./index-8fd8397b.js";import"./index-356e4a49.js";const z={display:"flex",flexDirection:"column",gap:"$space-component-gap-small",w:"320px",padding:"$space-component-padding-small $space-component-padding-large $space-component-padding-small $space-component-padding-small",flexShrink:0,innerElements:{inputContainer:{w:"100%",h:"$size-medium",borderRadius:"$border-radius-large",border:"1px solid $color-interaction-border-neutral-normal",display:"flex",gap:"$space-component-gap-small",alignItems:"center",bg:"$color-interaction-background-formField",borderColor:"$color-interaction-border-neutral-normal",p:"$space-component-padding-small $space-component-padding-large $space-component-padding-small $space-component-padding-small",flexShrink:"0",ringInset:!0,ring:"$border-width-small",ringColor:{_:"$color-interaction-border-neutral-normal",hoverWithoutButton:"$color-interaction-border-hover",alert:"$color-interaction-border-alert",focusWithin:"$color-interaction-neutral-subtle-normal"},outlineStyle:{"&:has(input:focus)":"$border-style-solid"},outlineColor:{focusWithin:"$color-interaction-focus-default"},outlineWidth:{"&:has(input:focus)":"$border-width-focus"},outlineOffset:{_:"1px",alert:"$border-width-focus"},transition:"true",transitionDuration:"50",cursor:"text",overflow:"hidden",isValidationError:{ringColor:"$color-interaction-border-alert"}},input:{h:"100%",w:"100%",p:"0",flex:"1 1 auto",outline:"none",text:"$typo-body-medium",color:{placeholder:"$color-content-tertiary"},backgroundColor:"transparent",opacity:{placeholder:1}}}},M=(e,o)=>{const{innerElements:{input:d,inputContainer:l},...i}=O({defaultConfig:z,custom:e}),{isValidationError:s,...r}=l,n=o&&{...r,...s}||r;return{container:i,input:d,inputContainer:n}},G=({custom:e,onChange:o,defaultValue:d,state:l,isValidationError:i,...s})=>{const r=l==="alert",[n,g]=a.useState(d??""),p=r||i,k=a.useMemo(()=>M(e,p),[e,p]),[v,T]=B(s),u=a.useRef(null),C=f=>{var y;if(f.target===u.current){const c=(y=u.current)==null?void 0:y.querySelector("input");c==null||c.focus()}},b=a.useCallback(C,[u]),I=a.useCallback(C,[u]),j=a.useCallback(f=>{g(f.target.value),o==null||o(f)},[o]);return{innerValue:n,styles:k,tagInputProps:v,containerProps:T,containerRef:u,handleContainerClick:b,handleContainerFocus:I,handleOnChange:j}},x=a.forwardRef(({children:e,label:o,custom:d,helperText:l,value:i,defaultValue:s,state:r,isValidationError:n,onChange:g,...p},k)=>{const T=(!!n||r==="alert")&&!!l,{containerRef:u,handleContainerClick:C,styles:b,containerProps:I,innerValue:j,handleOnChange:f,tagInputProps:y}=G({custom:d,isValidationError:n,state:r,defaultValue:s,...p});return a.Children.forEach(e,c=>{a.isValidElement(c)&&(c==null?void 0:c.type)!==N.Item&&console.error("You should use only TagInput.Item as a child of a TagInput component.")}),t.jsxs(h.div,{ref:u,onClick:C,...b.container,"data-testid":"tag-input","data-state":r,...I,children:[o&&t.jsx(F,{...o}),t.jsxs(h.div,{"data-testid":"tag-input-input-container",...b.inputContainer,children:[e,t.jsx(h.input,{...b.input,"data-testid":"tag-input-input",type:"text",value:i||j,onChange:f,disabled:r==="disabled",ref:k,...y})]}),l&&t.jsx(W,{...l,intent:T?"alert":"none",hasBeforeIcon:T})]})}),N=x;N.Item=m;try{x.displayName="TagInput",x.__docgenInfo={description:"",displayName:"TagInput",props:{custom:{defaultValue:null,description:"",name:"custom",required:!1,type:{name:"TagInputConfig"}},state:{defaultValue:null,description:"",name:"state",required:!1,type:{name:"enum",value:[{value:'"disabled"'},{value:'"alert"'}]}},isValidationError:{defaultValue:null,description:"",name:"isValidationError",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:'Pick<LabelProps, "action" | "label" | "optional">'}},helperText:{defaultValue:null,description:"",name:"helperText",required:!1,type:{name:'Pick<HelperTextProps, "text" | "intent" | "hasBeforeIcon">'}}}}}catch{}const J=()=>{const[e,o]=a.useState(["Tag1","Tag2"]),[d,l]=a.useState(["Tag1","Tag2"]),i={label:"Label"},s={text:"Helper text"};return t.jsxs(t.Fragment,{children:[t.jsxs(h.section,{px:"$dimension-1000",children:[t.jsx(H,{variant:"H1",as:"h2",py:"$dimension-400",children:"Validation Error: No"}),t.jsx(x,{label:i,helperText:s,children:e.map(r=>t.jsx(m,{label:r,onCloseClick:n=>{o(g=>g.filter(p=>p!==r)),n.preventDefault()}},r))})]},"noValidationError"),t.jsxs(h.section,{px:"$dimension-1000",py:"$dimension-800",children:[t.jsx(H,{variant:"H1",as:"h2",py:"$dimension-400",children:"Validation Error: Yes"}),t.jsx(x,{isValidationError:!0,label:i,helperText:s,children:d.map(r=>t.jsx(m,{label:r,onCloseClick:n=>{l(g=>g.filter(p=>p!==r)),n.preventDefault()}},r))})]},"validationError")]})},ze={title:"Tag Input",component:x,tags:["autodocs"],args:{helperText:{text:"Helper text"},label:{label:"label"},isValidationError:!1,children:["Tag 1","Tag 2"].map(e=>t.jsx(m,{label:"elo"},e))},argTypes:{isValidationError:{options:[!0,!1],defaultValue:!1,control:{type:"radio"}}},parameters:{docs:{description:{component:"A text input field designed for entering multiple tags or keywords, allowing users to create, edit, or remove tags as needed. Tag inputs often provide suggestions or autocomplete functionality to enhance the user experience."},page:()=>t.jsx(Y,{docs:"https://docs.tetrisly.com/components/list/taginput",children:t.jsx(J,{})})}}},E={args:{helperText:{text:"Helper text"},label:{label:"label"},isValidationError:!1,children:["Tag1","Tag2"].map(e=>t.jsx(m,{label:e,onCloseClick:()=>null},e))}},V={args:{helperText:{text:"Helper text"},label:{label:"label"},isValidationError:!1,children:["Tag1","Tag2"].map(e=>t.jsx(m,{label:e,onCloseClick:()=>null},e))}},$={args:{helperText:{text:"Helper text"},label:{label:"label"},isValidationError:!0,children:["Tag1","Tag2"].map(e=>t.jsx(m,{label:e,onCloseClick:()=>null},e))}};var S,_,w;E.parameters={...E.parameters,docs:{...(S=E.parameters)==null?void 0:S.docs,source:{originalSource:`{
  args: {
    helperText: {
      text: 'Helper text'
    },
    label: {
      label: 'label'
    },
    isValidationError: false,
    children: ['Tag1', 'Tag2'].map(tagLabel => <Tag label={tagLabel} key={tagLabel} onCloseClick={() => null} />)
  }
}`,...(w=(_=E.parameters)==null?void 0:_.docs)==null?void 0:w.source}}};var P,D,R;V.parameters={...V.parameters,docs:{...(P=V.parameters)==null?void 0:P.docs,source:{originalSource:`{
  args: {
    helperText: {
      text: 'Helper text'
    },
    label: {
      label: 'label'
    },
    isValidationError: false,
    children: ['Tag1', 'Tag2'].map(tagLabel => <Tag label={tagLabel} key={tagLabel} onCloseClick={() => null} />)
  }
}`,...(R=(D=V.parameters)==null?void 0:D.docs)==null?void 0:R.source}}};var q,A,L;$.parameters={...$.parameters,docs:{...(q=$.parameters)==null?void 0:q.docs,source:{originalSource:`{
  args: {
    helperText: {
      text: 'Helper text'
    },
    label: {
      label: 'label'
    },
    isValidationError: true,
    children: ['Tag1', 'Tag2'].map(tagLabel => <Tag label={tagLabel} key={tagLabel} onCloseClick={() => null} />)
  }
}`,...(L=(A=$.parameters)==null?void 0:A.docs)==null?void 0:L.source}}};const Me=["Default","ValidationErrorNo","ValidationErrorYes"];export{E as Default,V as ValidationErrorNo,$ as ValidationErrorYes,Me as __namedExportsOrder,ze as default};
