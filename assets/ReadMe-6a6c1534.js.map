{"version":3,"file":"ReadMe-6a6c1534.js","sources":["../../README.md?raw","../../src/docs-pages/ReadMe.mdx"],"sourcesContent":["export default \"<img src=\\\"https://storybook.tetrisly.com/header.svg\\\" width=\\\"100%\\\" alt=\\\"css-in-readme\\\">\\n\\n# Tetrisly React\\n\\nðŸ§© Tetrisly offers user-friendly components designed for effortless integration. Plus, it's fully compatible with Tetrisly for Figma with a seamless design and development experience in mind.\\n\\nIf you want to know more about Tetrisly, check out our website: [tetrisly.com](https://tetrisly.com/)\\n\\n## Tech Stack\\n\\n- [React 18](https://react.dev/)\\n- [xstyled](https://xstyled.dev/)\\n\\nWe've decided to use `xstyled` for styling our components. If you are interested in our reasoning, check out our article on this topic: [Style Wars: Tailwind vs. CSS-in-JS in Design Systems Implementation](https://medium.com/tetrisly/style-wars-tailwind-vs-css-in-js-in-design-systems-implementation-de6015ee2695)\\n\\n## Installation\\n\\nInstall `tetrisly-react`` with npm (you can do the same with yarn, pnpm or any other package manager)\\n\\n```bash\\n  npm install @virtuslab/tetrisly-react\\n```\\n\\nand dependencies:\\n\\n```bash\\n  npm install styled-components @xstyled/styled-components\\n```\\n\\n## Setup\\n\\n### TetrislyProvider\\n\\nAfter installing the package, you need to wrap your application in the `TetrislyProvider` component. This will provide the theme and other context to your application.\\n\\n```jsx\\nimport { TetrislyProvider } from '@virtuslab/tetrisly-react';\\n\\nfunction App() {\\n  return (\\n    <TetrislyProvider>\\n      <YourApp />\\n    </TetrislyProvider>\\n  );\\n}\\n```\\n\\nTetrislyProvider accepts optional prop `theme` which can be used to override default theme.\\n\\n```jsx\\nimport { TetrislyProvider } from '@virtuslab/tetrisly-react';\\n\\nfunction App() {\\n  return (\\n    <TetrislyProvider\\n      theme={{\\n        colors: {\\n          '$color-semantic-brand--4': th.color('$color-raspberry--4'),\\n          '$color-semantic-brand--3': th.color('$color-raspberry--3'),\\n          '$color-semantic-brand--2': th.color('$color-raspberry--2'),\\n          '$color-semantic-brand--1': th.color('$color-raspberry--1'),\\n          '$color-semantic-brand-0': th.color('$color-raspberry-0'),\\n          '$color-semantic-brand-+1': th.color('$color-raspberry-+1'),\\n          '$color-semantic-brand-+2': th.color('$color-raspberry-+2'),\\n          '$color-semantic-brand-+3': th.color('$color-raspberry-+3'),\\n          '$color-semantic-brand-+4': th.color('$color-raspberry-+4'),\\n          '$color-semantic-brand-+5': th.color('$color-raspberry-+5'),\\n          '$color-semantic-brand-+6': th.color('$color-raspberry-+6'),\\n          '$color-semantic-brand-+7': th.color('$color-raspberry-+7'),\\n          '$color-semantic-brand-+8': th.color('$color-raspberry-+8'),\\n        },\\n      }}\\n    >\\n      <YourApp />\\n    </TetrislyProvider>\\n  );\\n}\\n```\\n\\n### Default theme\\n\\nOur default theme contains all of fundamental Tetrisly Design Tokens, you can use it with `xstyled` props to easy set up\\nyour design. See `tet.*` utility [example of use](#tet-utility).\\n\\nHere you can see the\\n[default theme](https://github.com/VirtusLab/@tetrisly/react/blob/development/src/theme/defaultTheme.ts) or a complete\\nlist of theme options.\\n\\n### Default font\\n\\nTetrisly uses [Inter](https://fonts.google.com/specimen/Inter) font as default. To add it to your app you should link it\\nin your root `.html` file:\\n\\n```html\\n<link rel=\\\"preconnect\\\" href=\\\"https://fonts.googleapis.com\\\" />\\n<link rel=\\\"preconnect\\\" href=\\\"https://fonts.gstatic.com\\\" crossorigin />\\n<link\\n  href=\\\"https://fonts.googleapis.com/css2?family=Inter:wght@400;450;600&display=swap\\\"\\n  rel=\\\"stylesheet\\\"\\n/>\\n```\\n\\n## `tet.*` utility\\n\\n`tet` function is our extension of xstyled `x.*` utility. Both has the same API, but we will add some extra features in\\nnear future. You can read more [here](https://xstyled.dev/docs/utility-props/).\\n\\n### Example of use\\n\\n```jsx\\nimport {\\n  TetrislyProvider,\\n  Button,\\n  theme,\\n  tet,\\n} from '@virtuslab/tetrisly-react';\\n\\nconst App = () => (\\n  <TetrislyProvider>\\n    <tet.div\\n      display=\\\"flex\\\"\\n      justifyContent=\\\"center\\\"\\n      alignItems=\\\"center\\\"\\n      h=\\\"100vh\\\"\\n    >\\n      <tet.div>\\n        <tet.h1\\n          textAlign=\\\"center\\\"\\n          mb=\\\"$dimension-200\\\"\\n          text=\\\"$typo-header-4xLarge\\\"\\n          color=\\\"$color-content-primary\\\"\\n        >\\n          Hello world!\\n        </tet.h1>\\n        <tet.div display=\\\"flex\\\" justifyContent=\\\"center\\\" alignItems=\\\"center\\\">\\n          <a\\n            href=\\\"https://storybook.tetrisly.com\\\"\\n            target=\\\"_blank\\\"\\n            rel=\\\"noreferrer\\\"\\n          >\\n            <Button label=\\\"Go to Storybook\\\" appearance=\\\"primary\\\" />\\n          </a>\\n        </tet.div>\\n      </tet.div>\\n    </tet.div>\\n  </TetrislyProvider>\\n);\\n\\nexport default App;\\n```\\n\\n## Run Locally\\n\\nClone the project\\n\\n```bash\\n  git clone https://github.com/VirtusLab/tetrisly-react\\n```\\n\\nGo to the project directory\\n\\n```bash\\n  cd tetrisly-react\\n```\\n\\nInstall dependencies\\n\\n```bash\\n  yarn install\\n```\\n\\nStart the storybook server\\n\\n```bash\\n  yarn storybook\\n```\\n\\n## Running Tests\\n\\nTo run tests, run the following command\\n\\n```bash\\n  yarn test\\n```\\n\\n## Documentation\\n\\n<img src=\\\"https://storybook.tetrisly.com/logo-docs.svg\\\" />\\n\\nIf you want to dive deeper into the components Tetrisly offers, check out our official documentation: [Tetrisly Docs](https://docs.tetrisly.com/)\\n\\nYou can also check out our Storybook, which is our Documentation for React components (now in progress): [Tetrisly Storybook](https://virtuslab.github.io/tetrisly-react/?path=/docs/alertbanner--docs)\\n\\n## Customization\\n\\nAll Tetrisly components have a `custom` prop. It makes it possible to customize the component without the need to create a new one. Below you can see an example of Button customization\\n\\n### Button\\n\\nIf you want to change any of button styles, you can make it by passing custom props with object based on\\nspecific component config.\\n\\nFor instance, to change background-color of appereance=\\\"primary\\\" intent=\\\"secondary\\\" variant to pink, just pass\\nrefferenced object structure:\\n\\n```jsx\\n<Button\\n  label=\\\"Button label\\\"\\n  appearance=\\\"primary\\\"\\n  intent=\\\"success\\\"\\n  custom={{\\n    variants: {\\n      appearance: {\\n        primary: {\\n          intent: {\\n            success: {\\n              backgroundColor: 'raspberry-0', // you can also pass any color value not included in default theme\\n            },\\n          },\\n        },\\n      },\\n    },\\n  }}\\n/>\\n```\\n\\nwe are still working on it, thanks for your feedback here!\\n\\n### Useful links\\n\\n- [Tetrisly Storybook](https://storybook.tetrisly.com/)\\n- [Tetrisly Figma Docs](https://docs.tetrisly.com/)\\n- [Tetrisly Figma Preview](https://tetrisly.com/preview)\\n- [xstyled Docs](https://xstyled.dev/)\\n\\n## Getting Help\\n\\nIf at any point you need help, feel lost, or have some feedback for us, you can create issues on our GitHub repository, or reach out to us on out Discord Server: [Tetrisly Discord](https://discord.gg/MPefZwUZUu)\\n\\n## Testimonials\\n\\nIf you want to share with us your thoughts on Tetrisly, or showcase what you have built with it (it could be any aspect of our product, not only the React library), you can do it here: [Tetrisly Testimonials Form](https://senja.io/p/tetrisly/r/NfsRmn)\\n\\n## License\\n\\nWe are using the [Apache License 2.0](https://choosealicense.com/licenses/apache-2.0/) for our library of components\\n\\n## VirtusLab\\n\\n<img src=\\\"https://storybook.tetrisly.com/logo-virtuslab.svg\\\" />\\n\\nMeet [VirtusLab](https://virtuslab.com/), the visionary team behind Tetrisly for React and the Tetrisly design system. Trusted by clients, they excel in product design, design systems and front-end engineering, creating mission-critical solutions across the product lifecycle.\\n\"","import { Meta, Markdown } from '@storybook/addon-docs';\nimport readme from '@/../README.md?raw';\n\n<Meta title=\"Docs/ReadMe\" />\n<Markdown>{readme}</Markdown>\n"],"names":["readme","_createMdxContent","props","_jsxs","_Fragment","_jsx","Meta","Markdown","MDXContent","MDXLayout","_provideComponents"],"mappings":"8ZAAA,MAAef,SAASC,EAAkBC,EAAO,CAChC,OAAOC,EAAAA,KAAMC,EAAAA,SAAW,CACtB,SAAU,CAACC,EAAI,IAACC,EAAM,CACpB,MAAO,aACb,CAAK,EAAG;AAAA,EAAMD,EAAI,IAACE,EAAU,CACvB,SAAUP,CAChB,CAAK,CAAC,CACN,CAAG,CACH,CACA,SAASQ,EAAWN,EAAQ,GAAI,CAC9B,KAAM,CAAC,QAASO,CAAS,EAAI,OAAO,OAAO,CAAE,EAAEC,EAAoB,EAAER,EAAM,UAAU,EACrF,OAAOO,EAAYJ,EAAAA,IAAKI,EAAW,OAAO,OAAO,CAAE,EAAEP,EAAO,CAC1D,SAAUG,EAAAA,IAAKJ,EAAmBC,CAAK,CAC3C,CAAG,CAAC,EAAID,EAAuB,CAC/B"}