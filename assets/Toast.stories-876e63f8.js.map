{"version":3,"file":"Toast.stories-876e63f8.js","sources":["../../src/components/Toast/Toast.styles.ts","../../src/components/Toast/stylesBuilder/stylesBuilder.ts","../../src/components/Toast/Toast.tsx"],"sourcesContent":["import type { ToastEmphasis, ToastIntent } from './types';\nimport type { ButtonProps } from '../Button';\n\nimport type { BaseProps } from '@/types/BaseProps';\nimport type { IconName } from '@/utility-types/IconName';\n\nexport type ToastConfig = {\n  emphasis?: Partial<Record<ToastEmphasis, BaseProps>>;\n  intent?: Partial<Record<ToastIntent, BaseProps>>;\n  closeButton?: BaseProps;\n  innerElements?: {\n    iconContainer?: {\n      intent: Partial<\n        Record<\n          ToastIntent,\n          { emphasis: Partial<Record<ToastEmphasis, BaseProps>> }\n        >\n      >;\n    } & BaseProps;\n    actionContainer?: BaseProps;\n    middleDot?: {\n      emphasis: Partial<\n        Record<ToastEmphasis, BaseProps | Partial<ButtonProps<'bare'>>>\n      >;\n    } & BaseProps;\n    closeButton?: BaseProps;\n  };\n} & BaseProps;\n\nexport const defaultConfig = {\n  display: 'inline-flex',\n  alignItems: 'center',\n  p: 'component-padding-medium component-padding-large',\n  padding: 'component-padding-medium component-padding-large',\n  borderRadius: 'large',\n  emphasis: {\n    high: {},\n    low: {\n      backgroundColor: 'interaction-background-modeless',\n      color: 'content-primary',\n      ringColor: 'border-defaultA',\n      ring: 'small',\n      boxShadow: 'bottom-200',\n    },\n  },\n  intent: {\n    neutral: {\n      backgroundColor: 'background-inverted',\n      color: 'content-primary-inverted',\n    },\n    informative: {\n      backgroundColor: 'background-informative-strong',\n      color: 'content-primary-inverted',\n      pl: 'component-padding-medium',\n    },\n    success: {\n      backgroundColor: 'background-positive-strong',\n      color: 'content-primary-inverted',\n      pl: 'component-padding-medium',\n    },\n    warning: {\n      backgroundColor: 'background-warning-strong',\n      color: 'content-primary',\n      pl: 'component-padding-medium',\n    },\n    negative: {\n      backgroundColor: 'background-negative-strong',\n      color: 'content-primary-inverted',\n      pl: 'component-padding-medium',\n    },\n  },\n  closeButton: {\n    pr: 'component-padding-small',\n  },\n  innerElements: {\n    iconContainer: {\n      intent: {\n        neutral: { emphasis: { low: {}, high: {} } },\n        informative: {\n          emphasis: {\n            low: {\n              color: 'content-informative-secondary',\n            },\n            high: {\n              color: 'content-primary-inverted',\n            },\n          },\n        },\n        success: {\n          emphasis: {\n            low: {\n              color: 'content-positive-secondary',\n            },\n            high: {\n              color: 'content-primary-inverted',\n            },\n          },\n        },\n        warning: {\n          emphasis: {\n            low: {\n              color: 'content-warning-secondary',\n            },\n            high: {\n              color: 'content-primary',\n            },\n          },\n        },\n        negative: {\n          emphasis: {\n            low: {\n              color: 'content-negative-secondary',\n            },\n            high: {\n              color: 'content-primary-inverted',\n            },\n          },\n        },\n      },\n      mr: 'component-gap-small',\n    },\n    actionContainer: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      gap: 'component-gap-small',\n      ml: 'component-gap-xLarge',\n    },\n    middleDot: {\n      emphasis: {\n        high: {\n          color: 'content-secondary-inverted',\n        },\n        low: {\n          color: 'content-tertiary',\n        },\n      },\n      text: 'body-medium',\n    },\n    closeButton: {\n      ml: 'component-padding-large',\n    },\n  },\n} satisfies ToastConfig;\n\nexport const resolveIconName = (intent: ToastIntent): IconName<20> | null => {\n  const iconConfig: Record<ToastIntent, IconName<20> | null> = {\n    neutral: null,\n    informative: '20-info-fill',\n    success: '20-check-circle-fill',\n    warning: '20-warning-fill',\n    negative: '20-alert-fill',\n  };\n\n  return iconConfig[intent];\n};\n","import type { ToastProps } from '../Toast.props';\nimport { defaultConfig } from '../Toast.styles';\n\nimport { mergeConfigWithCustom } from '@/services';\nimport type { BaseProps } from '@/types/BaseProps';\n\ntype StylesBuilderProps = Required<Pick<ToastProps, 'emphasis' | 'intent'>> & {\n  onCloseClick: ToastProps['onCloseClick'];\n  custom: ToastProps['custom'];\n};\n\ntype ToastStylesBuilder = {\n  container: BaseProps;\n  actionContainer: BaseProps;\n  closeButton: BaseProps;\n  iconContainer: BaseProps;\n  middleDot: BaseProps;\n};\n\nexport const stylesBuilder = ({\n  custom,\n  ...props\n}: StylesBuilderProps): ToastStylesBuilder => {\n  const config = mergeConfigWithCustom({ defaultConfig, custom });\n\n  const {\n    emphasis: emphasisContainerStyles,\n    intent: intentContainerStyles,\n    closeButton: closeButtonContainerStyles,\n    innerElements: {\n      actionContainer,\n      closeButton,\n      iconContainer: iconContainerStyles,\n      middleDot,\n    },\n    ...restContainerStyles\n  } = config;\n\n  const container = {\n    ...intentContainerStyles[props.intent],\n    ...emphasisContainerStyles[props.emphasis],\n    ...restContainerStyles,\n    ...(!!props.onCloseClick && closeButtonContainerStyles),\n  };\n\n  const { intent: intentIconContainerStyles, ...restIconContainerStyles } =\n    iconContainerStyles;\n\n  const iconContainer = {\n    ...intentIconContainerStyles[props.intent].emphasis[props.emphasis],\n    ...restIconContainerStyles,\n  };\n\n  return {\n    container,\n    actionContainer,\n    iconContainer,\n    closeButton,\n    middleDot,\n  };\n};\n","import { Icon } from '@virtuslab/tetrisly-icons';\nimport { FC, useMemo } from 'react';\n\nimport { stylesBuilder } from './stylesBuilder';\nimport type { ToastProps } from './Toast.props';\nimport { resolveIconName } from './Toast.styles';\nimport { Button } from '../Button';\nimport { IconButton } from '../IconButton';\n\nimport { useAction } from '@/hooks';\nimport { tet } from '@/tetrisly';\nimport type { MarginProps } from '@/types';\n\nexport const Toast: FC<ToastProps & MarginProps> = ({\n  text,\n  emphasis = 'low',\n  intent = 'neutral',\n  action,\n  onCloseClick,\n  custom,\n  ...restProps\n}) => {\n  const styles = useMemo(\n    () =>\n      stylesBuilder({\n        custom,\n        emphasis,\n        intent,\n        onCloseClick,\n      }),\n    [custom, emphasis, intent, onCloseClick],\n  );\n\n  const [firstAction, secondAction] = useAction(action);\n\n  const iconName = useMemo(() => resolveIconName(intent), [intent]);\n\n  const appearance = useMemo(() => {\n    const buttonIntentAppearance =\n      intent === 'warning' ? 'reverseInverted' : 'inverted';\n    return emphasis === 'high' ? buttonIntentAppearance : 'primary';\n  }, [intent, emphasis]);\n\n  return (\n    <tet.div {...styles.container} data-testid=\"toast\" {...restProps}>\n      {!!iconName && (\n        <tet.span {...styles.iconContainer} data-testid=\"toast-iconContainer\">\n          <Icon name={iconName} />\n        </tet.span>\n      )}\n      {text}\n      {firstAction && (\n        <tet.div\n          {...styles.actionContainer}\n          data-testid=\"toast-actionContainer\"\n        >\n          <Button variant=\"bare\" appearance={appearance} {...firstAction} />\n          {secondAction && (\n            <>\n              <tet.div {...styles.middleDot} data-testid=\"toast-middleDot\">\n                &middot;\n              </tet.div>\n              <Button\n                variant=\"bare\"\n                appearance={appearance}\n                {...secondAction}\n              />\n            </>\n          )}\n        </tet.div>\n      )}\n      {!!onCloseClick && (\n        <IconButton\n          size=\"small\"\n          variant=\"ghost\"\n          intent=\"none\"\n          icon=\"20-close\"\n          onClick={onCloseClick}\n          appearance={appearance}\n          {...styles.closeButton}\n          data-testid=\"toast-closeButton\"\n        />\n      )}\n    </tet.div>\n  );\n};\n"],"names":["defaultConfig","resolveIconName","intent","stylesBuilder","custom","props","config","mergeConfigWithCustom","emphasisContainerStyles","intentContainerStyles","closeButtonContainerStyles","actionContainer","closeButton","iconContainerStyles","middleDot","restContainerStyles","container","intentIconContainerStyles","restIconContainerStyles","iconContainer","Toast","text","emphasis","action","onCloseClick","restProps","styles","useMemo","firstAction","secondAction","useAction","iconName","appearance","jsxs","tet","jsx","Icon","Button","Fragment","IconButton"],"mappings":"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"}