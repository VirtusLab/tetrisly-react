{"version":3,"file":"TextInput.stories-5c193f20.js","sources":["../../src/components/TextInput/TextInput.style.ts","../../src/components/TextInput/TextInput.tsx"],"sourcesContent":["import { SystemProps } from '@xstyled/styled-components';\n\nimport { Theme } from '@/theme';\n\ntype Config = {\n  innerComponents: Record<'input' | 'icon' | 'text', SystemProps>;\n  spacing:\n    | Record<\n        'beforeComponent',\n        Record<'Icon' | 'Avatar' | 'Prefix' | 'Dropdown', SystemProps>\n      >\n    | Record<\n        'afterComponent',\n        Record<\n          'Icon' | 'Sufix' | 'Button' | 'IconButton' | 'Dropdown',\n          SystemProps\n        >\n      >;\n};\n\nexport const config = {\n  display: 'flex',\n  alignItems: 'center',\n  h: 'medium',\n  padding: 'component-padding-small component-padding-large',\n  flexShrink: 0,\n  ring: '100',\n  ringColor: {\n    _: 'interaction-border-neutral-normal',\n    hover: 'interaction-border-hover',\n    focus: 'interaction-focus-default',\n    alert: 'interaction-border-alert',\n  },\n  borderRadius: 'medium',\n  opacity: {\n    disabled: 'disabled',\n  },\n  outlineStyle: {\n    focusWithin: 'solid',\n  },\n  outlineColor: {\n    focusWithin: 'interaction-focus-default',\n  },\n  outlineWidth: {\n    focusWithin: 'focus',\n  },\n  outlineOffset: {\n    alert: 'focus',\n  },\n  transition: true,\n  transitionDuration: 50,\n  cursor: 'text',\n  pointerEvents: {\n    disabled: 'none',\n  },\n  innerComponents: {\n    input: {\n      w: '100%',\n      h: '100%',\n      outline: 'none',\n      text: 'body-medium',\n      color: {\n        placeholder: 'content-tertiary',\n      },\n      backgroundColor: 'interaction-background-formField',\n    },\n    icon: {\n      color: 'content-secondary',\n    },\n    text: {\n      text: 'body-medium',\n      color: 'content-secondary',\n    },\n  },\n  spacing: {\n    beforeComponent: {\n      Icon: {\n        marginLeft: 'component-padding-medium',\n        marginRight: 'component-padding-small',\n      },\n      Avatar: {\n        margin: '0 component-padding-small',\n      },\n      Prefix: {\n        margin: '0 component-padding-large',\n      },\n      Dropdown: {\n        marginLeft: 'component-padding-xSmall',\n        marginRight: 'component-padding-small',\n      },\n    },\n    afterComponent: {\n      Icon: {\n        marginLeft: 'component-padding-small',\n        marginRight: 'component-padding-large',\n      },\n      Sufix: {\n        marginLeft: 'component-padding-small',\n        marginRight: 'component-padding-large',\n      },\n      Button: {\n        marginLeft: 'component-padding-small',\n        marginRight: 'component-padding-xSmall',\n      },\n      IconButton: {\n        marginLeft: 'component-padding-small',\n        marginRight: 'component-padding-xSmall',\n      },\n      Dropdown: {\n        marginLeft: 'component-padding-small',\n        marginRight: 'component-padding-xSmall',\n      },\n    },\n  },\n} as const satisfies SystemProps<Theme> & Config;\n","import { Icon } from '@virtuslab/tetrisly-icons';\nimport { merge } from 'lodash';\nimport { forwardRef, useRef, MouseEvent } from 'react';\n\nimport { TextInputProps } from './TextInput.props';\nimport { config as defaultConfig } from './TextInput.style';\nimport { Button } from '../Button';\n\nimport { extractMarginProps } from '@/services/extractMarginProps';\nimport { tet } from '@/tetrisly';\nimport { MarginProps } from '@/types/MarginProps';\n\nexport const TextInput = forwardRef<\n  HTMLInputElement,\n  TextInputProps & MarginProps\n>(\n  (\n    {\n      type = 'text',\n      beforeComponent,\n      afterComponent,\n      state,\n      custom = {},\n      ...rest\n    },\n    inputRef,\n  ) => {\n    const [marginProps, inputProps] = extractMarginProps<\n      TextInputProps & MarginProps\n    >(rest);\n\n    const config = merge(custom, defaultConfig);\n    const {\n      innerComponents: {\n        input: inputStyles,\n        icon: iconStyles,\n        text: textStyles,\n      },\n      spacing,\n      ...defaultStyles\n    } = config;\n\n    const containerRef = useRef<HTMLInputElement | null>(null);\n\n    const handleContainerClick = (e: MouseEvent) => {\n      if (e.target === containerRef.current) {\n        const input = containerRef.current?.querySelector('input');\n\n        if (input) input.focus();\n      }\n    };\n\n    return (\n      <tet.div\n        ref={containerRef}\n        onClick={handleContainerClick}\n        {...defaultStyles}\n        pl={!!beforeComponent && '0'}\n        pr={!!afterComponent && '0'}\n        {...marginProps}\n        data-state={state}\n        data-testid=\"text-input\"\n      >\n        {!!beforeComponent && (\n          <tet.span {...spacing.beforeComponent[beforeComponent.type]}>\n            {beforeComponent.type === 'Icon' && (\n              <tet.span {...iconStyles}>\n                <Icon {...beforeComponent.props} />\n              </tet.span>\n            )}\n            {beforeComponent.type === 'Prefix' && (\n              <tet.span {...textStyles}>{beforeComponent.props.text}</tet.span>\n            )}\n            {beforeComponent.type === 'Dropdown' && (\n              <Button\n                size=\"small\"\n                variant=\"ghost\"\n                label={beforeComponent.props.label}\n                dropdownIndicator\n              />\n            )}\n          </tet.span>\n        )}\n        <tet.input\n          {...inputStyles}\n          {...inputProps}\n          type={type}\n          disabled={state === 'disabled'}\n          ref={inputRef}\n        />\n        {!!afterComponent && (\n          <tet.span {...spacing.afterComponent[afterComponent.type]}>\n            {afterComponent.type === 'Icon' && (\n              <tet.span {...iconStyles}>\n                <Icon {...afterComponent.props} />\n              </tet.span>\n            )}\n            {afterComponent.type === 'Sufix' && (\n              <tet.span {...textStyles}>{afterComponent.props.text}</tet.span>\n            )}\n            {afterComponent.type === 'Button' && (\n              <Button size=\"small\" variant=\"ghost\" label=\"Label\" />\n            )}\n            {afterComponent.type === 'Dropdown' && (\n              <Button\n                size=\"small\"\n                variant=\"ghost\"\n                label={afterComponent.props.label}\n                dropdownIndicator\n              />\n            )}\n            {/* TODO render IconButton with an clear input action if hasClearButton props is passed */}\n          </tet.span>\n        )}\n      </tet.div>\n    );\n  },\n);\n"],"names":["config","TextInput","forwardRef","type","beforeComponent","afterComponent","state","custom","rest","inputRef","marginProps","inputProps","extractMarginProps","merge","defaultConfig","inputStyles","iconStyles","textStyles","spacing","defaultStyles","containerRef","useRef","handleContainerClick","e","input","_a","jsxs","tet","jsx","Icon","Button"],"mappings":"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"}