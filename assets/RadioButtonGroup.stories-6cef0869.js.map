{"version":3,"file":"RadioButtonGroup.stories-6cef0869.js","sources":["../../src/components/RadioButtonGroup/RadioButtonGroup.styles.ts","../../src/components/RadioButtonGroup/stylesBuilder/stylesBuilder.ts","../../src/components/RadioButtonGroup/RadioButtonGroup.tsx","../../src/docs-components/RadioButtonGroupDocs.tsx"],"sourcesContent":["import type { HelperTextConfig } from '../HelperText/HelperText.styles';\nimport type { LabelConfig } from '../Label/Label.styles';\n\nimport type { BaseProps } from '@/types/BaseProps';\n\nexport type RadioButtonGroupConfig = {\n  innerElements?: {\n    radioButtonContainer?: BaseProps;\n    label?: LabelConfig;\n    helperText?: HelperTextConfig;\n  };\n} & BaseProps;\n\nexport const defaultConfig = {\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '$space-component-gap-small',\n  innerElements: {\n    radioButtonContainer: {\n      display: 'grid',\n      gap: '$space-component-gap-small $space-component-gap-large',\n    },\n    label: {},\n    helperText: {},\n  },\n} satisfies RadioButtonGroupConfig;\n","import type { RadioButtonGroupProps } from '../RadioButtonGroup.props';\nimport { defaultConfig } from '../RadioButtonGroup.styles';\n\nimport { mergeConfigWithCustom } from '@/services';\nimport type { BaseProps } from '@/types/BaseProps';\n\ntype RadioButtonGroupStylesBuilder = {\n  container: BaseProps;\n  radioButtonContainer: BaseProps;\n  label: BaseProps;\n  helperText: BaseProps;\n};\n\nexport const stylesBuilder = (\n  custom: RadioButtonGroupProps['custom'],\n): RadioButtonGroupStylesBuilder => {\n  const {\n    innerElements: { radioButtonContainer, label, helperText },\n    ...container\n  } = mergeConfigWithCustom({ defaultConfig, custom });\n\n  return {\n    container,\n    radioButtonContainer,\n    label,\n    helperText,\n  };\n};\n","import {\n  Children,\n  cloneElement,\n  type FC,\n  isValidElement,\n  type PropsWithChildren,\n  type ReactElement,\n  useMemo,\n} from 'react';\n\nimport type {\n  RadioButtonGroupProps,\n  RadioButtonGroupItemProps,\n} from './RadioButtonGroup.props';\nimport { stylesBuilder } from './stylesBuilder';\nimport { HelperText } from '../HelperText';\nimport { Label } from '../Label';\nimport { RadioButton } from '../RadioButton';\n\nimport { tet } from '@/tetrisly';\nimport type { MarginProps } from '@/types';\n\ntype Props = FC<PropsWithChildren<RadioButtonGroupProps & MarginProps>> & {\n  Item: FC<RadioButtonGroupItemProps>;\n};\n\nexport const RadioButtonGroup: Props = ({\n  name,\n  column = 1,\n  label,\n  helperText,\n  custom,\n  children,\n  ...restProps\n}) => {\n  const styles = useMemo(() => stylesBuilder(custom), [custom]);\n\n  const radioButtons = Children.map(children, (child) => {\n    if (isValidElement(child) && child?.type !== RadioButtonGroup.Item) {\n      console.error(\n        'You should use only RadioButtonGroup.Item as a child of a RadioButtonGroup component.',\n      );\n    }\n    if (isValidElement(child)) {\n      return cloneElement(child as ReactElement<RadioButtonGroupItemProps>, {\n        name,\n      });\n    }\n    return child;\n  });\n\n  return (\n    <tet.div\n      {...styles.container}\n      data-testid=\"radio-button-group\"\n      {...restProps}\n    >\n      {!!label &&\n        (typeof label === 'string' ? (\n          <Label\n            label={label}\n            custom={styles.label}\n            data-testid=\"radio-button-group-label\"\n          />\n        ) : (\n          <Label\n            {...label}\n            custom={styles.label}\n            data-testid=\"radio-button-group-label\"\n          />\n        ))}\n      <tet.div\n        {...styles.radioButtonContainer}\n        gridTemplateColumns={`repeat(${column}, 1fr)`}\n        data-testid=\"radio-button-group-radioButtonContainer\"\n      >\n        {radioButtons}\n      </tet.div>\n      {!!helperText &&\n        (typeof helperText === 'string' ? (\n          <HelperText\n            text={helperText}\n            custom={styles.helperText}\n            data-testid=\"radio-button-group-helperText\"\n          />\n        ) : (\n          <HelperText\n            {...helperText}\n            custom={styles.helperText}\n            data-testid=\"radio-button-group-helperText\"\n          />\n        ))}\n    </tet.div>\n  );\n};\n\nconst Item: FC<RadioButtonGroupItemProps> = (props) => (\n  <RadioButton {...props} />\n);\n\nRadioButtonGroup.Item = Item;\n","import { SectionHeader } from './common/SectionHeader';\n\nimport { RadioButtonGroup } from '@/components/RadioButtonGroup';\nimport { tet } from '@/tetrisly';\n\nexport const RadioButtonGroupDocs = () => (\n  <>\n    <tet.section display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n      <SectionHeader\n        variant=\"H1\"\n        as=\"h2\"\n        px=\"$dimension-1000\"\n        py=\"$dimension-500\"\n      >\n        Horizontal Group\n      </SectionHeader>\n      <RadioButtonGroup\n        my=\"$dimension-500\"\n        mx=\"auto\"\n        label=\"Label\"\n        name=\"my-radio-group\"\n        helperText=\"Helper text\"\n        column={4}\n      >\n        <RadioButtonGroup.Item label=\"Checkbox Label 1\" />\n        <RadioButtonGroup.Item label=\"Checkbox Label 2\" />\n        <RadioButtonGroup.Item label=\"Checkbox Label 3\" />\n        <RadioButtonGroup.Item label=\"Checkbox Label 4\" />\n        <RadioButtonGroup.Item label=\"Checkbox Label 5\" />\n        <RadioButtonGroup.Item label=\"Checkbox Label 6\" />\n        <RadioButtonGroup.Item label=\"Checkbox Label 7\" />\n        <RadioButtonGroup.Item label=\"Checkbox Label 8\" />\n      </RadioButtonGroup>\n    </tet.section>\n\n    <tet.section display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n      <SectionHeader\n        variant=\"H1\"\n        as=\"h2\"\n        px=\"$dimension-1000\"\n        py=\"$dimension-500\"\n      >\n        Vertical Group\n      </SectionHeader>\n      <RadioButtonGroup\n        my=\"$dimension-500\"\n        mx=\"auto\"\n        label=\"Label\"\n        name=\"another-radio-group\"\n        helperText=\"Helper text\"\n        column={1}\n      >\n        <RadioButtonGroup.Item label=\"Checkbox Label 1\" />\n        <RadioButtonGroup.Item label=\"Checkbox Label 2\" />\n        <RadioButtonGroup.Item label=\"Checkbox Label 3\" />\n        <RadioButtonGroup.Item label=\"Checkbox Label 4\" />\n        <RadioButtonGroup.Item label=\"Checkbox Label 5\" />\n        <RadioButtonGroup.Item label=\"Checkbox Label 6\" />\n        <RadioButtonGroup.Item label=\"Checkbox Label 7\" />\n        <RadioButtonGroup.Item label=\"Checkbox Label 8\" />\n      </RadioButtonGroup>\n    </tet.section>\n  </>\n);\n"],"names":["defaultConfig","stylesBuilder","custom","radioButtonContainer","label","helperText","container","mergeConfigWithCustom","RadioButtonGroup","name","column","children","restProps","styles","useMemo","radioButtons","Children","child","isValidElement","cloneElement","jsxs","tet","jsx","Label","HelperText","Item","props","RadioButton","RadioButtonGroupDocs","Fragment","SectionHeader"],"mappings":"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"}