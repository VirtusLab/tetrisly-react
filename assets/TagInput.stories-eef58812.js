import{j as t}from"./jsx-runtime-ffb262ed.js";import{r as a}from"./index-76fb7be0.js";import{m as A}from"./mergeConfigWithCustom-aec35d44.js";import{e as B}from"./extractInputProps-08fc967a.js";import{H as O}from"./HelperText-56e11054.js";import{L as W}from"./Label-c4b882aa.js";import{T as m}from"./Tag-d4f476f7.js";import{t as h}from"./TetrislyProvider-679426f7.js";import{S as _}from"./SectionHeader-e7c49046.js";import"./AlertBanner-d1cf2c2e.js";import"./Avatar-aeb94954.js";import"./Badge-ea0f212c.js";import"./BooleanPill-a9ee29cc.js";import"./Button-62f4c63b.js";import"./ButtonGroup-2df34866.js";import"./Checkbox-d5b81355.js";import"./CheckboxGroup-d8217911.js";import"./CornerDialog-b5025250.js";import"./Counter-0ce5dc1d.js";import"./Divider-fd284774.js";import"./FileIcon-c1d4c539.js";import"./FileItem-4a53c2b8.js";import"./Icon-1631c5ed.js";import"./IconButton-9e77b08a.js";import"./InlineBanner-1c66edb8.js";import"./InlineMessage-aae39959.js";import"./InlineMetrics-6bec751d.js";import"./InlineSearchInput-5d7f41cf.js";import"./index-52c2b68d.js";import"./MetricsCard-5a9996c6.js";import"./NewItemButton-a50837fd.js";import"./Popover-ab710cb4.js";import"./RadioButton-7ed9e8e5.js";import"./RadioButtonGroup-b1f58e28.js";import"./SearchInput-4f2af798.js";import"./Select-fc9ddb5d.js";import"./SelectablePill-27b87150.js";import"./SocialButton-82f1930f.js";import"./Status-1ba1c282.js";import"./StatusDot-b2e63962.js";import"./TextInput-ff669e43.js";import"./Toast-8ddc3a27.js";import"./Toggle-11467eed.js";import"./Tooltip-fd59b7b9.js";import{T as Y}from"./TetDocs-b00055fe.js";import"./_commonjsHelpers-de833af9.js";import"./tetrisly-icons.es-12549e88.js";import"./useAction-275346b1.js";import"./useIndeterminate-f02e4f88.js";import"./useTextInput-ecd5f9a6.js";import"./index-d3ea75b5.js";import"./index-8e69feee.js";import"./iframe-6ef61652.js";import"../sb-preview/runtime.js";import"./index-11d98b33.js";import"./index-8fd8397b.js";import"./index-356e4a49.js";const z={display:"flex",flexDirection:"column",gap:"$space-component-gap-small",w:"320px",padding:"$space-component-padding-small $space-component-padding-large $space-component-padding-small $space-component-padding-small",flexShrink:0,innerElements:{inputContainer:{w:"100%",h:"$size-medium",borderRadius:"$border-radius-large",border:"1px solid $color-interaction-border-neutral-normal",display:"flex",gap:"$space-component-gap-small",alignItems:"center",bg:"$color-interaction-background-formField",borderColor:"$color-interaction-border-neutral-normal",p:"$space-component-padding-small $space-component-padding-large $space-component-padding-small $space-component-padding-small",flexShrink:"0",ringInset:!0,ring:"$border-width-small",ringColor:{_:"$color-interaction-border-neutral-normal",hoverWithoutButton:"$color-interaction-border-hover",alert:"$color-interaction-border-alert",focusWithin:"$color-interaction-neutral-subtle-normal"},outlineStyle:{"&:has(input:focus)":"$border-style-solid"},outlineColor:{focusWithin:"$color-interaction-focus-default"},outlineWidth:{"&:has(input:focus)":"$border-width-focus"},outlineOffset:{_:"1px",alert:"$border-width-focus"},transition:"true",transitionDuration:"50",cursor:"text",overflow:"hidden",isValidationError:{ringColor:"$color-interaction-border-alert"}},input:{h:"100%",w:"100%",p:"0",flex:"1 1 auto",outline:"none",text:"$typo-body-medium",color:{placeholder:"$color-content-tertiary"},backgroundColor:"transparent",opacity:{placeholder:1}}}},M=(e,o)=>{const{innerElements:{input:d,inputContainer:l},...i}=A({defaultConfig:z,custom:e}),{isValidationError:s,...r}=l,n=o&&{...r,...s}||r;return{container:i,input:d,inputContainer:n}},G=({custom:e,onChange:o,defaultValue:d,state:l,isValidationError:i,...s})=>{const r=l==="alert",[n,g]=a.useState(d??""),p=r||i,$=a.useMemo(()=>M(e,p),[e,p]),[j,T]=B(s),u=a.useRef(null),y=f=>{var C;if(f.target===u.current){const c=(C=u.current)==null?void 0:C.querySelector("input");c==null||c.focus()}},b=a.useCallback(y,[u]),I=a.useCallback(y,[u]),k=a.useCallback(f=>{g(f.target.value),o==null||o(f)},[o]);return{innerValue:n,styles:$,tagInputProps:j,containerProps:T,containerRef:u,handleContainerClick:b,handleContainerFocus:I,handleOnChange:k}},x=a.forwardRef(({children:e,label:o,custom:d,helperText:l,value:i,defaultValue:s,state:r,isValidationError:n,onChange:g,...p},$)=>{const T=(!!n||r==="alert")&&!!l,{containerRef:u,handleContainerClick:y,styles:b,containerProps:I,innerValue:k,handleOnChange:f,tagInputProps:C}=G({custom:d,isValidationError:n,state:r,defaultValue:s,...p});return a.Children.forEach(e,c=>{a.isValidElement(c)&&(c==null?void 0:c.type)!==R.Item&&console.error("You should use only TagInput.Item as a child of a TagInput component.")}),t.jsxs(h.div,{ref:u,onClick:y,...b.container,"data-testid":"tag-input","data-state":r,...I,children:[o&&t.jsx(W,{...o}),t.jsxs(h.div,{"data-testid":"tag-input-input-container",...b.inputContainer,children:[e,t.jsx(h.input,{...b.input,"data-testid":"tag-input-input",type:"text",value:i||k,onChange:f,disabled:r==="disabled",ref:$,...C})]}),l&&t.jsx(O,{...l,intent:T?"alert":"none",hasBeforeIcon:T})]})}),R=x;R.Item=m;try{x.displayName="TagInput",x.__docgenInfo={description:"",displayName:"TagInput",props:{custom:{defaultValue:null,description:"",name:"custom",required:!1,type:{name:"TagInputConfig"}},state:{defaultValue:null,description:"",name:"state",required:!1,type:{name:"enum",value:[{value:'"disabled"'},{value:'"alert"'}]}},isValidationError:{defaultValue:null,description:"",name:"isValidationError",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:'Pick<LabelProps, "action" | "label" | "optional">'}},helperText:{defaultValue:null,description:"",name:"helperText",required:!1,type:{name:'Pick<HelperTextProps, "text" | "intent" | "hasBeforeIcon">'}}}}}catch{}try{FileIcon.displayName="FileIcon",FileIcon.__docgenInfo={description:"",displayName:"FileIcon",props:{iconType:{defaultValue:null,description:"",name:"iconType",required:!0,type:{name:"enum",value:[{value:'"Sketch"'},{value:'"Photoshop"'},{value:'"Excel"'},{value:'"Word"'},{value:'"Pdf"'},{value:'"Spreadsheet"'},{value:'"Document"'},{value:'"File"'},{value:'"Archive"'},{value:'"Figma"'}]}},size:{defaultValue:{value:"Large"},description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"Large"'},{value:'"Medium"'}]}},custom:{defaultValue:null,description:"",name:"custom",required:!1,type:{name:"BaseProps"}}}}}catch{}const J=()=>{const[e,o]=a.useState(["Tag1","Tag2"]),[d,l]=a.useState(["Tag1","Tag2"]),i={label:"Label"},s={text:"Helper text"};return t.jsxs(t.Fragment,{children:[t.jsxs(h.section,{px:"$dimension-1000",children:[t.jsx(_,{variant:"H1",as:"h2",py:"$dimension-400",children:"Validation Error: No"}),t.jsx(x,{label:i,helperText:s,children:e.map(r=>t.jsx(m,{label:r,onCloseClick:n=>{o(g=>g.filter(p=>p!==r)),n.preventDefault()}},r))})]},"noValidationError"),t.jsxs(h.section,{px:"$dimension-1000",py:"$dimension-800",children:[t.jsx(_,{variant:"H1",as:"h2",py:"$dimension-400",children:"Validation Error: Yes"}),t.jsx(x,{isValidationError:!0,label:i,helperText:s,children:d.map(r=>t.jsx(m,{label:r,onCloseClick:n=>{l(g=>g.filter(p=>p!==r)),n.preventDefault()}},r))})]},"validationError")]})},Xe={title:"Tag Input",component:x,tags:["autodocs"],args:{helperText:{text:"Helper text"},label:{label:"label"},isValidationError:!1,children:["Tag 1","Tag 2"].map(e=>t.jsx(m,{label:"elo"},e))},argTypes:{isValidationError:{options:[!0,!1],defaultValue:!1,control:{type:"radio"}}},parameters:{docs:{description:{component:"A text input field designed for entering multiple tags or keywords, allowing users to create, edit, or remove tags as needed. Tag inputs often provide suggestions or autocomplete functionality to enhance the user experience."},page:()=>t.jsx(Y,{docs:"https://docs.tetrisly.com/components/list/taginput",children:t.jsx(J,{})})}}},V={args:{helperText:{text:"Helper text"},label:{label:"label"},isValidationError:!1,children:["Tag1","Tag2"].map(e=>t.jsx(m,{label:e,onCloseClick:()=>null},e))}},v={args:{helperText:{text:"Helper text"},label:{label:"label"},isValidationError:!1,children:["Tag1","Tag2"].map(e=>t.jsx(m,{label:e,onCloseClick:()=>null},e))}},E={args:{helperText:{text:"Helper text"},label:{label:"label"},isValidationError:!0,children:["Tag1","Tag2"].map(e=>t.jsx(m,{label:e,onCloseClick:()=>null},e))}};var S,H,P;V.parameters={...V.parameters,docs:{...(S=V.parameters)==null?void 0:S.docs,source:{originalSource:`{
  args: {
    helperText: {
      text: 'Helper text'
    },
    label: {
      label: 'label'
    },
    isValidationError: false,
    children: ['Tag1', 'Tag2'].map(tagLabel => <Tag label={tagLabel} key={tagLabel} onCloseClick={() => null} />)
  }
}`,...(P=(H=V.parameters)==null?void 0:H.docs)==null?void 0:P.source}}};var w,F,q;v.parameters={...v.parameters,docs:{...(w=v.parameters)==null?void 0:w.docs,source:{originalSource:`{
  args: {
    helperText: {
      text: 'Helper text'
    },
    label: {
      label: 'label'
    },
    isValidationError: false,
    children: ['Tag1', 'Tag2'].map(tagLabel => <Tag label={tagLabel} key={tagLabel} onCloseClick={() => null} />)
  }
}`,...(q=(F=v.parameters)==null?void 0:F.docs)==null?void 0:q.source}}};var D,L,N;E.parameters={...E.parameters,docs:{...(D=E.parameters)==null?void 0:D.docs,source:{originalSource:`{
  args: {
    helperText: {
      text: 'Helper text'
    },
    label: {
      label: 'label'
    },
    isValidationError: true,
    children: ['Tag1', 'Tag2'].map(tagLabel => <Tag label={tagLabel} key={tagLabel} onCloseClick={() => null} />)
  }
}`,...(N=(L=E.parameters)==null?void 0:L.docs)==null?void 0:N.source}}};const Ze=["Default","ValidationErrorNo","ValidationErrorYes"];export{V as Default,v as ValidationErrorNo,E as ValidationErrorYes,Ze as __namedExportsOrder,Xe as default};
