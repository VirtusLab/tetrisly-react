{"version":3,"file":"Checkbox-68871c92.js","sources":["../../src/components/Checkbox/Checkbox.styles.ts","../../src/components/Checkbox/hooks/useIndeterminate.ts","../../src/components/Checkbox/Checkbox.tsx"],"sourcesContent":["import { SystemProps } from '@xstyled/styled-components';\n\nimport { BaseProps } from '@/types/BaseProps';\n\nexport type CheckboxConfig = {\n  innerComponents: {\n    checkbox: SystemProps;\n    checkboxContainer: SystemProps;\n    checkboxIcon: SystemProps;\n    label: SystemProps;\n    helperText: SystemProps;\n  };\n} & BaseProps;\n\nexport const config = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'flex-start',\n  gap: 'component-gap-xSmall',\n  minWidth: '3xSmall',\n  minHeight: '3xSmall',\n  color: 'content-primary',\n  opacity: {\n    disabled: 'disabled',\n  },\n  pointerEvents: {\n    disabled: 'none',\n  },\n  innerComponents: {\n    checkboxContainer: {\n      position: 'relative',\n      cursor: 'pointer',\n    },\n    checkbox: {\n      appearance: 'none',\n      display: 'block',\n      w: '3xSmall',\n      h: '3xSmall',\n      pointerEvents: 'none',\n      backgroundColor: {\n        _: 'interaction-background-formField',\n        checked: {\n          _: 'interaction-default-normal',\n          hover: 'interaction-default-hover',\n        },\n        indeterminate: {\n          _: 'interaction-default-normal',\n          hover: 'interaction-default-hover',\n        },\n      },\n      color: 'white',\n      ring: 'focus',\n      borderRadius: 'medium',\n      ringInset: true,\n      ringColor: {\n        _: 'interaction-border-neutral-normal',\n        hover: 'interaction-border-hover',\n        checked: {\n          _: 'interaction-ghost-normal',\n          hover: 'interaction-ghost-normal',\n        },\n        alert: {\n          _: 'interaction-border-alert',\n          hover: 'interaction-border-alert',\n        },\n        indeterminate: 'transparent',\n      },\n      outlineStyle: {\n        focusWithin: 'solid',\n      },\n      outlineColor: {\n        focusWithin: 'interaction-focus-default',\n      },\n      outlineWidth: {\n        focusWithin: 'focus',\n      },\n      outlineOffset: {\n        focusWithin: 'small',\n      },\n      transition: true,\n      transitionDuration: 200,\n    },\n    checkboxIcon: {\n      position: 'absolute',\n      color: 'interaction-inverted-normal',\n      w: '3xSmall',\n      h: '3xSmall',\n      left: 0,\n      top: 0,\n    },\n    label: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      gap: 'component-gap-small',\n      cursor: 'pointer',\n      color: 'content-primary',\n      text: 'body-medium',\n    },\n    helperText: {\n      paddingLeft: 'component-padding-2xLarge',\n    },\n  },\n} satisfies CheckboxConfig;\n","import { useEffect, useRef } from 'react';\n\nexport const useIndeterminate = (isIndeterminate: boolean) => {\n  const checkboxRef = useRef<HTMLInputElement | null>(null);\n\n  useEffect(() => {\n    if (checkboxRef.current !== null) {\n      checkboxRef.current.indeterminate = isIndeterminate;\n    }\n  }, [checkboxRef, isIndeterminate]);\n\n  return checkboxRef;\n};\n","import { Icon } from '@virtuslab/tetrisly-icons';\nimport styled from '@xstyled/styled-components';\nimport { merge } from 'lodash';\nimport { forwardRef, useId } from 'react';\n\nimport type { CheckboxProps } from './Checkbox.props';\nimport { config as defaultConfig } from './Checkbox.styles';\nimport { useIndeterminate } from './hooks';\nimport { HelperText } from '../HelperText';\n\nimport { extractMarginProps } from '@/services';\nimport { tet } from '@/tetrisly';\nimport { MarginProps } from '@/types/MarginProps';\n\ntype Props = CheckboxProps & MarginProps;\n\nexport const CheckboxIcon = styled(tet.div)`\n  input + div > #checkmark {\n    display: none;\n    pointer-events: none;\n  }\n\n  input:checked + div > #checkmark {\n    display: block;\n  }\n`;\n\nexport const Checkbox = forwardRef<HTMLInputElement, Props>(\n  (\n    {\n      isChecked,\n      isIndeterminate = false,\n      state,\n      label,\n      helperText,\n      custom,\n      ...restProps\n    },\n    checkboxForwardRef,\n  ) => {\n    const [marginProps, checkboxProps] = extractMarginProps<Props>(restProps);\n\n    const options = custom ? merge(defaultConfig, custom) : defaultConfig;\n    const {\n      innerComponents: {\n        checkbox: checkboxStyles,\n        checkboxContainer: checkboxContainerStyles,\n        checkboxIcon: checkboxIconStyles,\n        label: labelStyles,\n        helperText: helperTextStyles,\n      },\n      ...defaultStyles\n    } = options;\n\n    const checkboxId = useId();\n\n    const checkboxInternalRef = useIndeterminate(isIndeterminate);\n\n    const checkboxRef = (instance: HTMLInputElement | null) => {\n      checkboxInternalRef.current = instance;\n      if (typeof checkboxForwardRef === 'function') {\n        checkboxForwardRef(instance);\n      } else if (checkboxForwardRef) {\n        // eslint-disable-next-line no-param-reassign\n        checkboxForwardRef.current = instance;\n      }\n    };\n\n    const handleInputChange = () => {\n      checkboxInternalRef.current?.click();\n      checkboxInternalRef.current?.focus();\n    };\n\n    const input = (\n      <CheckboxIcon {...checkboxContainerStyles}>\n        <tet.input\n          type=\"checkbox\"\n          ref={checkboxRef}\n          checked={isChecked}\n          disabled={state === 'disabled'}\n          data-state={state}\n          id={checkboxId}\n          {...checkboxProps}\n          {...checkboxStyles}\n        />\n        <tet.div\n          {...checkboxIconStyles}\n          onClick={() => !label && handleInputChange()}\n        >\n          {isIndeterminate && <Icon name=\"16-minus\" />}\n          <Icon name=\"16-check\" id=\"checkmark\" />\n        </tet.div>\n      </CheckboxIcon>\n    );\n\n    return (\n      <tet.div\n        {...defaultStyles}\n        {...marginProps}\n        data-state={state}\n        data-testid=\"checkbox\"\n      >\n        {label ? (\n          <tet.label\n            htmlFor={checkboxId}\n            {...labelStyles}\n            data-testid=\"checkbox-label\"\n          >\n            {input}\n            {label}\n          </tet.label>\n        ) : (\n          input\n        )}\n        {!!helperText && (\n          <HelperText\n            intent={state === 'alert' ? 'alert' : 'none'}\n            beforeIcon={state === 'alert'}\n            {...helperTextStyles}\n            text={helperText}\n          />\n        )}\n      </tet.div>\n    );\n  },\n);\n"],"names":["config","useIndeterminate","isIndeterminate","checkboxRef","useRef","useEffect","CheckboxIcon","styled","tet","Checkbox","forwardRef","isChecked","state","label","helperText","custom","restProps","checkboxForwardRef","marginProps","checkboxProps","extractMarginProps","options","merge","defaultConfig","checkboxStyles","checkboxContainerStyles","checkboxIconStyles","labelStyles","helperTextStyles","defaultStyles","checkboxId","useId","checkboxInternalRef","instance","handleInputChange","_a","_b","input","jsxs","jsx","Icon","HelperText"],"mappings":"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"}