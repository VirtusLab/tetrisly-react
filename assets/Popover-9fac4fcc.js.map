{"version":3,"file":"Popover-9fac4fcc.js","sources":["../../src/components/Popover/AnchorWrapper.styled.ts","../../src/components/Popover/Popover.styles.ts","../../src/components/Popover/stylesBuilder/stylesBuilder.ts","../../src/components/Popover/Popover.tsx"],"sourcesContent":["import { css, styled } from '@xstyled/styled-components';\n\nimport { PopoverProps } from './Popover.props';\n\nimport { tet } from '@/tetrisly';\n\nexport const PopoverContent = styled(tet.div)``;\n\nexport const AnchorWrapper = styled(tet.div)<Pick<PopoverProps, 'isOpen'>>`\n  ${({ isOpen }) =>\n    isOpen === undefined &&\n    css`\n      ${PopoverContent} {\n        opacity: 0;\n        pointer-events: none;\n      }\n\n      &:hover ${PopoverContent} {\n        opacity: 1;\n        pointer-events: all;\n      }\n    `}\n`;\n","import { PopoverAlign, PopoverOrigin } from './types';\n\nimport { BaseProps } from '@/types/BaseProps';\n\nexport type PopoverConfig = {\n  origin?: Partial<\n    Record<PopoverOrigin, { align: Partial<Record<PopoverAlign, BaseProps>> }>\n  >;\n  innerElements?: {\n    content?: BaseProps;\n  };\n} & BaseProps;\n\nexport const defaultConfig = {\n  position: 'relative',\n  display: 'inline-flex',\n  origin: {\n    top: {\n      align: {\n        start: {\n          transform: 'translate(0%, -100%)',\n          left: '50%',\n        },\n        center: {\n          transform: 'translate(-50%, -100%)',\n          left: '50%',\n        },\n        end: {\n          transform: 'translate(-100%, -100%)',\n          left: '50%',\n        },\n      },\n    },\n    bottom: {\n      align: {\n        start: {\n          transform: 'translate(0%, 100%)',\n          left: '50%',\n        },\n        center: {\n          transform: 'translate(-50%, 100%)',\n          left: '50%',\n        },\n        end: {\n          transform: 'translate(-100%, 100%)',\n          left: '50%',\n        },\n      },\n    },\n    left: {\n      align: {\n        start: {\n          transform: 'translate(-100%, 0%)',\n          top: '50%',\n        },\n        center: {\n          transform: 'translate(-100%, -50%)',\n          top: '50%',\n        },\n        end: {\n          transform: 'translate(-100%, -100%)',\n          top: '50%',\n        },\n      },\n    },\n    right: {\n      align: {\n        start: {\n          transform: 'translate(100%, 0%)',\n          top: '50%',\n        },\n        center: {\n          transform: 'translate(100%, -50%)',\n          top: '50%',\n        },\n        end: {\n          transform: 'translate(100%, -100%)',\n          top: '50%',\n        },\n      },\n    },\n  },\n  innerElements: {\n    content: {\n      position: 'absolute',\n      text: 'body-medium',\n      color: 'content-secondary',\n      padding: 'component-padding-large',\n      ring: 'focus',\n      ringColor: 'border-defaultA',\n      boxShadow: 'bottom-300',\n      backgroundColor: 'interaction-background-modeless',\n      borderRadius: 'large',\n      zIndex: 1000,\n      transition: true,\n      transitionDuration: 200,\n    },\n  },\n} satisfies PopoverConfig;\n","import type { PopoverProps } from '../Popover.props';\nimport { defaultConfig } from '../Popover.styles';\nimport type { PopoverAlign, PopoverOrigin } from '../types';\n\nimport { mergeConfigWithCustom } from '@/services';\nimport type { BaseProps } from '@/types/BaseProps';\n\ntype StylesBuilderParams = {\n  origin: PopoverOrigin;\n  align: PopoverAlign;\n  custom: PopoverProps['custom'];\n};\n\ntype PopoverStylesBuilder = {\n  container: BaseProps;\n  content: BaseProps;\n};\n\nexport const stylesBuilder = ({\n  origin,\n  align,\n  custom,\n}: StylesBuilderParams): PopoverStylesBuilder => {\n  const {\n    origin: originStyles,\n    innerElements: { content: contentStyles },\n    ...container\n  } = mergeConfigWithCustom({ defaultConfig, custom });\n\n  return {\n    container,\n    content: {\n      ...originStyles[origin].align[align],\n      ...contentStyles,\n    },\n  };\n};\n","import { useSpace } from '@xstyled/styled-components';\nimport { FC, PropsWithChildren, useMemo } from 'react';\n\nimport { AnchorWrapper, PopoverContent } from './AnchorWrapper.styled';\nimport type { PopoverProps } from './Popover.props';\nimport { stylesBuilder } from './stylesBuilder';\n\nimport type { MarginProps } from '@/types';\n\nexport const Popover: FC<PropsWithChildren<PopoverProps & MarginProps>> = ({\n  align = 'center',\n  origin = 'top',\n  offset = 'component-gap-large',\n  content,\n  isOpen,\n  custom,\n  children,\n  width = 'fit-content',\n  ...restProps\n}) => {\n  const styles = useMemo(\n    () => stylesBuilder({ origin, align, custom }),\n    [origin, align, custom],\n  );\n\n  const space = useSpace(offset);\n  const offsetProps = { [origin]: `-${space}` };\n\n  return (\n    <AnchorWrapper\n      isOpen={isOpen}\n      {...styles.container}\n      data-testid=\"popover\"\n      {...restProps}\n    >\n      <PopoverContent\n        {...styles.content}\n        {...offsetProps}\n        w={width}\n        opacity={isOpen === false ? '0' : '1'}\n        data-testid=\"popover-content\"\n      >\n        {content}\n      </PopoverContent>\n      {children}\n    </AnchorWrapper>\n  );\n};\n"],"names":["PopoverContent","styled","tet","AnchorWrapper","isOpen","css","defaultConfig","stylesBuilder","origin","align","custom","originStyles","contentStyles","container","mergeConfigWithCustom","Popover","offset","content","children","width","restProps","styles","useMemo","space","useSpace","offsetProps","jsxs","jsx"],"mappings":"iKAMa,MAAAA,EAAiBC,EAAOC,EAAI,GAAG,IAE/BC,EAAgBF,EAAOC,EAAI,GAAG;AAAA,IACvC,CAAC,CAAE,OAAAE,CAAO,IACVA,IAAW,QACXC;AAAA,QACIL,CAAc;AAAA;AAAA;AAAA;AAAA;AAAA,gBAKNA,CAAc;AAAA;AAAA;AAAA;AAAA,KAIzB;AAAA,ECRQM,EAAgB,CAC3B,SAAU,WACV,QAAS,cACT,OAAQ,CACN,IAAK,CACH,MAAO,CACL,MAAO,CACL,UAAW,uBACX,KAAM,KACR,EACA,OAAQ,CACN,UAAW,yBACX,KAAM,KACR,EACA,IAAK,CACH,UAAW,0BACX,KAAM,KACR,CACF,CACF,EACA,OAAQ,CACN,MAAO,CACL,MAAO,CACL,UAAW,sBACX,KAAM,KACR,EACA,OAAQ,CACN,UAAW,wBACX,KAAM,KACR,EACA,IAAK,CACH,UAAW,yBACX,KAAM,KACR,CACF,CACF,EACA,KAAM,CACJ,MAAO,CACL,MAAO,CACL,UAAW,uBACX,IAAK,KACP,EACA,OAAQ,CACN,UAAW,yBACX,IAAK,KACP,EACA,IAAK,CACH,UAAW,0BACX,IAAK,KACP,CACF,CACF,EACA,MAAO,CACL,MAAO,CACL,MAAO,CACL,UAAW,sBACX,IAAK,KACP,EACA,OAAQ,CACN,UAAW,wBACX,IAAK,KACP,EACA,IAAK,CACH,UAAW,yBACX,IAAK,KACP,CACF,CACF,CACF,EACA,cAAe,CACb,QAAS,CACP,SAAU,WACV,KAAM,cACN,MAAO,oBACP,QAAS,0BACT,KAAM,QACN,UAAW,kBACX,UAAW,aACX,gBAAiB,kCACjB,aAAc,QACd,OAAQ,IACR,WAAY,GACZ,mBAAoB,GACtB,CACF,CACF,EChFaC,EAAgB,CAAC,CAC5B,OAAAC,EACA,MAAAC,EACA,OAAAC,CACF,IAAiD,CACzC,KAAA,CACJ,OAAQC,EACR,cAAe,CAAE,QAASC,CAAc,EACxC,GAAGC,CACD,EAAAC,EAAsB,CAAE,cAAAR,EAAe,OAAAI,CAAQ,CAAA,EAE5C,MAAA,CACL,UAAAG,EACA,QAAS,CACP,GAAGF,EAAaH,CAAM,EAAE,MAAMC,CAAK,EACnC,GAAGG,CACL,CAAA,CAEJ,EC3BOG,EAAA,CAAA,CAAoE,MAAAN,EAAA,SACjE,OAAAD,EAAA,MACC,OAAAQ,EAAA,sBACA,QAAAC,EACT,OAAAb,EACA,OAAAM,EACA,SAAAQ,EACA,MAAAC,EAAA,cACQ,GAAAC,CAEV,IAAA,CACE,MAAAC,EAAAC,EAAA,QAAe,IAAAf,EAAA,CAAA,OAAAC,EAAA,MAAAC,EAAA,OAAAC,CAAA,CAAA,EACgC,CAAAF,EAAAC,EAAAC,CAAA,CACvB,EAGxBa,EAAAC,EAAAR,CAAA,EACAS,EAAA,CAAA,CAAAjB,CAAA,EAAA,IAAAe,CAAA,IAEA,OAAAG,EAAA,KACEvB,EAAC,CAAA,OAAAC,EACC,GAAAiB,EAAA,UACW,cAAA,UACC,GAAAD,EACR,SAAA,CAEJO,EAAA,IAAA3B,EAAC,CAAA,GAAAqB,EAAA,QACY,GAAAI,EACP,EAAAN,EACD,QAAAf,IAAA,GAAA,IAAA,IAC+B,cAAA,kBACtB,SAAAa,CAEX,CAAA,EACHC,CACC,CAAA,CAAA,CAGP"}