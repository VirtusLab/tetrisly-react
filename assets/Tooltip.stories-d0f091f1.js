import{j as o}from"./jsx-runtime-ffb262ed.js";import{T as u,a as g}from"./Tooltip-fd59b7b9.js";import{B as T}from"./Button-62f4c63b.js";import{T as y}from"./TetDocs-56670fe7.js";import{l as P}from"./mergeConfigWithCustom-aec35d44.js";import{a as j}from"./States-c70e8d91.js";import{S as w}from"./SectionHeader-e7c49046.js";import{t}from"./TetrislyProvider-679426f7.js";import"./index-76fb7be0.js";import"./_commonjsHelpers-de833af9.js";import"./index-d3ea75b5.js";import"./tetrisly-icons.es-12549e88.js";import"./index-52c2b68d.js";import"./index-52388870.js";import"./iframe-643bd67a.js";import"../sb-preview/runtime.js";import"./index-11d98b33.js";import"./index-8fd8397b.js";import"./index-356e4a49.js";const v=["Arrowhead Position: Start","Arrowhead Position: Middle","Arrowhead Position: End"],B=["start","middle","end"],s=["bottom","top","right","left"],a=()=>o.jsx(o.Fragment,{children:B.map((r,f)=>o.jsxs(t.section,{display:"flex",padding:"40px 0px",flexDirection:"column",children:[o.jsx(w,{px:"$dimension-1000",variant:"H1",my:"auto",children:v[f]}),o.jsx(t.div,{px:"$dimension-1000",borderBottomWidth:"1px",borderBottomColor:"$color-border-neutral-subtle",children:o.jsx(t.div,{py:"$dimension-600",display:"flex",flexWrap:"nowrap",flexDirection:"row",gap:"$dimension-500",overflowX:"scroll",children:s.map((n,p)=>o.jsxs(t.div,{display:"flex",flexDirection:"column",gap:"$dimension-400",flexBasis:"100",flexShrink:"0",flexGrow:"1",children:[o.jsx(j,{state:P.capitalize(s[p])},s[p]),o.jsx(t.div,{py:"$space-component-padding-4xLarge",position:"relative",children:o.jsx(u,{arrowheadPosition:r,tooltipPosition:n,text:"Tooltip Placeholder"})})]},n))})})]},r))});try{a.displayName="TooltipDocs",a.__docgenInfo={description:"",displayName:"TooltipDocs",props:{}}}catch{}const O={title:"Tooltip",component:u,tags:["autodocs"],args:{text:"Tooltip placeholder",arrowheadPosition:"start",tooltipPosition:"top"},argTypes:{arrowheadPosition:{options:["start","middle","end"],defaultValue:"start",control:{type:"radio"}},tooltipPosition:{options:["top","bottom","left","right"],defaultValue:"top",control:{type:"radio"}}},parameters:{docs:{Description:{component:"Brief, additional information or context that appears when the user hovers over or focuses on a particular element. Tooltips help provide explanations, hints, or tips without cluttering up the interface."},page:()=>o.jsx(y,{docs:"https://docs.tetrisly.com/components/list/tooltip",children:o.jsx(a,{})})}}},i={args:{arrowheadPosition:"middle",tooltipPosition:"top"}},e={render:()=>o.jsx(t.div,{margin:20,display:"flex",flexDirection:"column",alignItems:"start",children:o.jsx(g,{text:"Button tooltip",arrowheadPosition:"end",tooltipPosition:"top",children:o.jsx(T,{label:"Button"})})})};var l,d,c;i.parameters={...i.parameters,docs:{...(l=i.parameters)==null?void 0:l.docs,source:{originalSource:`{
  args: {
    arrowheadPosition: 'middle',
    tooltipPosition: 'top'
  }
}`,...(c=(d=i.parameters)==null?void 0:d.docs)==null?void 0:c.source}}};var m,x,h;e.parameters={...e.parameters,docs:{...(m=e.parameters)==null?void 0:m.docs,source:{originalSource:`{
  render: () => <tet.div margin={20} display="flex" flexDirection="column" alignItems="start">
      <Tooltip text="Button tooltip" arrowheadPosition="end" tooltipPosition="top">
        <Button label="Button" />
      </Tooltip>
    </tet.div>
}`,...(h=(x=e.parameters)==null?void 0:x.docs)==null?void 0:h.source}}};const R=["Default","WithButtonTootlip"];export{i as Default,e as WithButtonTootlip,R as __namedExportsOrder,O as default};
