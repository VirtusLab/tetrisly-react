{"version":3,"file":"InlineMessage.stories-55c3161f.js","sources":["../../src/components/InlineMessage/InlineMessage.styles.ts","../../src/components/InlineMessage/stylesBuilder/stylesBuilder.ts","../../src/components/InlineMessage/InlineMessage.tsx","../../src/docs-components/InlineMessageDocs.tsx"],"sourcesContent":["import { InlineMessageIntent } from './InlineMessageIntent.type';\n\nimport { BaseProps } from '@/types/BaseProps';\nimport { IconName } from '@/utility-types/IconName';\n\nexport type InlineMessageConfig = {\n  innerElements?: {\n    title?: {\n      intent?: Partial<Record<InlineMessageIntent, BaseProps>>;\n    } & BaseProps;\n    iconContainer?: {\n      intent?: Partial<Record<InlineMessageIntent, BaseProps>>;\n    } & BaseProps;\n    description?: BaseProps;\n  };\n} & BaseProps;\n\nexport const defaultConfig = {\n  display: 'flex',\n  alignItems: 'flex-start',\n  gap: '$space-component-gap-small',\n  text: '$typo-body-medium',\n  innerElements: {\n    title: {\n      marginRight: '$space-component-gap-small',\n      intent: {\n        informative: {\n          color: '$color-content-informative-primary',\n        },\n        success: {\n          color: '$color-content-positive-primary',\n        },\n        warning: {\n          color: '$color-content-warning-primary',\n        },\n        negative: {\n          color: '$color-content-negative-primary',\n        },\n      },\n    },\n    iconContainer: {\n      display: 'flex',\n      alignItems: 'center',\n      minHeight: '$size-xSmall',\n      intent: {\n        informative: {\n          color: '$color-content-informative-secondary',\n        },\n        success: {\n          color: '$color-content-positive-secondary',\n        },\n        warning: {\n          color: '$color-content-warning-secondary',\n        },\n        negative: {\n          color: '$color-content-negative-secondary',\n        },\n      },\n    },\n    description: {\n      color: '$color-content-secondary',\n      display: 'inline-block',\n    },\n  },\n} satisfies InlineMessageConfig;\n\nexport const resolveIconName = (intent: InlineMessageIntent): IconName<20> => {\n  const iconConfig: Record<InlineMessageIntent, IconName<20>> = {\n    informative: '20-info-fill',\n    success: '20-check-circle-fill',\n    warning: '20-warning-fill',\n    negative: '20-alert-fill',\n  };\n\n  return iconConfig[intent];\n};\n","import { InlineMessageProps } from '../InlineMessage.props';\nimport { defaultConfig } from '../InlineMessage.styles';\nimport { InlineMessageIntent } from '../InlineMessageIntent.type';\n\nimport { mergeConfigWithCustom } from '@/services';\nimport { BaseProps } from '@/types/BaseProps';\n\ntype InlineMessageStyleBuilder = {\n  container: BaseProps;\n  title: BaseProps;\n  iconContainer: BaseProps;\n  description: BaseProps;\n};\n\nexport const stylesBuilder = (\n  intent: InlineMessageIntent,\n  custom: InlineMessageProps['custom'],\n): InlineMessageStyleBuilder => {\n  const { innerElements, ...container } = mergeConfigWithCustom({\n    defaultConfig,\n    custom,\n  });\n\n  const { description, title, iconContainer } = innerElements;\n\n  const { intent: titleIntent, ...restTitleStyles } = title;\n  const { intent: iconContainerIntent, ...restIconContainerStyles } =\n    iconContainer;\n\n  return {\n    container,\n    description,\n    title: {\n      ...titleIntent[intent],\n      ...restTitleStyles,\n    },\n    iconContainer: {\n      ...iconContainerIntent[intent],\n      ...restIconContainerStyles,\n    },\n  };\n};\n","import { Icon } from '@virtuslab/tetrisly-icons';\nimport { FC, useMemo } from 'react';\n\nimport { InlineMessageProps } from './InlineMessage.props';\nimport { resolveIconName } from './InlineMessage.styles';\nimport { stylesBuilder } from './stylesBuilder';\nimport { tet } from '../../tetrisly';\n\nimport { MarginProps } from '@/types/MarginProps';\n\nexport const InlineMessage: FC<InlineMessageProps & MarginProps> = ({\n  intent = 'informative',\n  title,\n  description,\n  custom,\n  ...restProps\n}) => {\n  const styles = useMemo(() => stylesBuilder(intent, custom), [intent, custom]);\n  const name = resolveIconName(intent);\n\n  return (\n    <tet.div {...styles.container} data-testid=\"inline-message\" {...restProps}>\n      <tet.span\n        {...styles.iconContainer}\n        data-testid=\"inline-message-iconContainer\"\n      >\n        <Icon name={name} data-testid=\"inline-message-icon\" />\n      </tet.span>\n      <tet.span>\n        <tet.span {...styles.title} data-testid=\"inline-message-title\">\n          {title}\n        </tet.span>\n        {description && (\n          <tet.div\n            {...styles.description}\n            data-testid=\"inline-message-description\"\n          >\n            {description}\n          </tet.div>\n        )}\n      </tet.span>\n    </tet.div>\n  );\n};\n","import { capitalize } from 'lodash';\n\nimport { Cols } from './common/Cols';\nimport { SectionHeader } from './common/SectionHeader';\n\nimport { InlineMessage } from '@/components/InlineMessage';\nimport { tet } from '@/tetrisly';\n\nconst intents = ['informative', 'success', 'warning', 'negative'] as const;\n\nexport const InlineMessageDocs = () => (\n  <>\n    {intents.map((intent) => (\n      <tet.section key={intent} px=\"$dimension-1000\" py=\"$dimension-500\">\n        <SectionHeader variant=\"H1\" as=\"h2\" py=\"$dimension-500\">\n          Intent: {capitalize(intent)}\n        </SectionHeader>\n        <Cols>\n          <tet.div>\n            <SectionHeader variant=\"H2\" as=\"h3\" py=\"$dimension-500\">\n              Description: Yes\n            </SectionHeader>\n            <InlineMessage\n              intent={intent}\n              title=\"Title\"\n              description=\"Description\"\n              mt=\"$dimension-500\"\n            />\n          </tet.div>\n          <tet.div>\n            <SectionHeader variant=\"H2\" as=\"h3\" py=\"$dimension-500\">\n              Description: No\n            </SectionHeader>\n            <InlineMessage intent={intent} title=\"Title\" mt=\"$dimension-500\" />\n          </tet.div>\n        </Cols>\n      </tet.section>\n    ))}\n  </>\n);\n"],"names":["defaultConfig","resolveIconName","intent","stylesBuilder","custom","innerElements","container","mergeConfigWithCustom","description","title","iconContainer","titleIntent","restTitleStyles","iconContainerIntent","restIconContainerStyles","InlineMessage","restProps","styles","useMemo","name","jsxs","tet","jsx","Icon","intents","InlineMessageDocs","Fragment","SectionHeader","capitalize","Cols"],"mappings":"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"}