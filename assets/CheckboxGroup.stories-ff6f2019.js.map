{"version":3,"file":"CheckboxGroup.stories-ff6f2019.js","sources":["../../src/components/CheckboxGroup/CheckboxGroup.style.ts","../../src/components/CheckboxGroup/stylesBuilder/stylesBuilder.ts","../../src/components/CheckboxGroup/CheckboxGroup.tsx","../../src/docs-components/CheckboxGroupDocs.tsx"],"sourcesContent":["import { SystemProps } from '@xstyled/styled-components';\n\nimport { HelperTextConfig } from '../HelperText/HelperText.styles';\nimport { LabelConfig } from '../Label/Label.styles';\n\nimport { BaseProps } from '@/types/BaseProps';\n\nexport type CheckboxGroupConfig = {\n  innerElements?: {\n    checkboxContainer?: SystemProps;\n    label?: LabelConfig;\n    helperText?: HelperTextConfig;\n  };\n} & BaseProps;\n\nexport const defaultConfig = {\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '$space-component-gap-small',\n  innerElements: {\n    checkboxContainer: {\n      display: 'grid',\n      gap: '$space-component-gap-small $space-component-gap-large',\n    },\n    label: {},\n    helperText: {},\n  },\n} satisfies CheckboxGroupConfig;\n","import { CheckboxGroupConfig, defaultConfig } from '../CheckboxGroup.style';\n\nimport { HelperTextConfig } from '@/components/HelperText/HelperText.styles';\nimport { LabelConfig } from '@/components/Label/Label.styles';\nimport { mergeConfigWithCustom } from '@/services';\nimport { BaseProps } from '@/types/BaseProps';\n\ntype CheckboxGroupStylesBuilder = {\n  container: BaseProps;\n  checkboxContainer: BaseProps;\n  label: LabelConfig;\n  helperText: HelperTextConfig;\n};\n\nexport const stylesBuilder = (\n  custom?: CheckboxGroupConfig,\n): CheckboxGroupStylesBuilder => {\n  const {\n    innerElements: { helperText, label, checkboxContainer },\n    ...container\n  } = mergeConfigWithCustom({ defaultConfig, custom });\n\n  return {\n    container,\n    checkboxContainer,\n    label,\n    helperText,\n  };\n};\n","import {\n  Children,\n  FC,\n  ForwardRefExoticComponent,\n  isValidElement,\n  PropsWithChildren,\n  useMemo,\n} from 'react';\n\nimport type { CheckboxGroupProps } from './CheckboxGroup.props';\nimport { stylesBuilder } from './stylesBuilder';\nimport { Checkbox, type CheckboxProps } from '../Checkbox';\nimport { HelperText } from '../HelperText';\nimport { Label } from '../Label';\n\nimport { tet } from '@/tetrisly';\nimport type { MarginProps } from '@/types';\n\ntype Props = FC<PropsWithChildren<CheckboxGroupProps & MarginProps>> & {\n  Item: ForwardRefExoticComponent<CheckboxProps & MarginProps>;\n};\n\nexport const CheckboxGroup: Props = ({\n  column = 1,\n  label,\n  helperText,\n  children,\n  custom,\n  ...restProps\n}) => {\n  const styles = useMemo(() => stylesBuilder(custom), [custom]);\n\n  Children.map(children, (child) => {\n    if (isValidElement(child) && child?.type !== CheckboxGroup.Item) {\n      console.error(\n        'You should use only CheckboxGroup.Item as a child of a CheckboxGroup component.',\n      );\n    }\n  });\n\n  return (\n    <tet.div {...styles.container} data-testid=\"checkbox-group\" {...restProps}>\n      {!!label &&\n        (typeof label === 'string' ? (\n          <Label\n            label={label}\n            custom={styles.label}\n            data-testid=\"checkbox-group-label\"\n          />\n        ) : (\n          <Label\n            {...label}\n            custom={styles.label}\n            data-testid=\"checkbox-group-label\"\n          />\n        ))}\n      <tet.div\n        {...styles.checkboxContainer}\n        gridTemplateColumns={`repeat(${column}, 1fr)`}\n        data-testid=\"checkbox-group-container\"\n      >\n        {children}\n      </tet.div>\n      {!!helperText &&\n        (typeof helperText === 'string' ? (\n          <HelperText\n            text={helperText}\n            custom={styles.helperText}\n            data-testid=\"checkbox-group-helperText\"\n          />\n        ) : (\n          <HelperText\n            {...helperText}\n            custom={styles.helperText}\n            data-testid=\"checkbox-group-helperText\"\n          />\n        ))}\n    </tet.div>\n  );\n};\n\nCheckboxGroup.Item = Checkbox;\n","import { SectionHeader } from './common/SectionHeader';\n\nimport { CheckboxGroup } from '@/components/CheckboxGroup';\nimport { tet } from '@/tetrisly';\n\nexport const CheckboxGroupDocs = () => (\n  <>\n    <tet.section display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n      <SectionHeader\n        variant=\"H1\"\n        as=\"h2\"\n        px=\"$dimension-1000\"\n        py=\"$dimension-500\"\n      >\n        Horizontal Group\n      </SectionHeader>\n      <CheckboxGroup\n        my=\"$dimension-500\"\n        mx=\"auto\"\n        label=\"Label\"\n        helperText=\"Helper text\"\n        column={4}\n      >\n        <CheckboxGroup.Item label=\"Checkbox Label 1\" />\n        <CheckboxGroup.Item label=\"Checkbox Label 2\" />\n        <CheckboxGroup.Item label=\"Checkbox Label 3\" />\n        <CheckboxGroup.Item label=\"Checkbox Label 4\" />\n        <CheckboxGroup.Item label=\"Checkbox Label 5\" />\n        <CheckboxGroup.Item label=\"Checkbox Label 6\" />\n        <CheckboxGroup.Item label=\"Checkbox Label 7\" />\n        <CheckboxGroup.Item label=\"Checkbox Label 8\" />\n      </CheckboxGroup>\n    </tet.section>\n\n    <tet.section display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n      <SectionHeader\n        variant=\"H1\"\n        as=\"h2\"\n        px=\"$dimension-1000\"\n        py=\"$dimension-500\"\n      >\n        Vertical Group\n      </SectionHeader>\n      <CheckboxGroup\n        my=\"$dimension-500\"\n        mx=\"auto\"\n        label=\"Label\"\n        helperText=\"Helper text\"\n        column={1}\n      >\n        <CheckboxGroup.Item label=\"Checkbox Label 1\" />\n        <CheckboxGroup.Item label=\"Checkbox Label 2\" />\n        <CheckboxGroup.Item label=\"Checkbox Label 3\" />\n        <CheckboxGroup.Item label=\"Checkbox Label 4\" />\n        <CheckboxGroup.Item label=\"Checkbox Label 5\" />\n        <CheckboxGroup.Item label=\"Checkbox Label 6\" />\n        <CheckboxGroup.Item label=\"Checkbox Label 7\" />\n        <CheckboxGroup.Item label=\"Checkbox Label 8\" />\n      </CheckboxGroup>\n    </tet.section>\n  </>\n);\n"],"names":["defaultConfig","stylesBuilder","custom","helperText","label","checkboxContainer","container","mergeConfigWithCustom","CheckboxGroup","column","children","restProps","styles","useMemo","Children","child","isValidElement","jsxs","tet","jsx","Label","HelperText","Checkbox","CheckboxGroupDocs","Fragment","SectionHeader"],"mappings":"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"}