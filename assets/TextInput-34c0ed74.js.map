{"version":3,"file":"TextInput-34c0ed74.js","sources":["../../src/services/extractMarginProps/extractMarginProps.ts","../../src/components/TextInput/TextInput.style.ts","../../src/components/TextInput/stylesBuilder/stylesBuilder.ts","../../src/components/TextInput/TextInput.tsx"],"sourcesContent":["/**\n * Function extracts all spacing props (ex. ''m', 'ml', 'mr' etc.), returns array  with space props and rest objects\n */\nimport {\n  MarginBottomProps,\n  MarginLeftProps,\n  MarginProps,\n  MarginRightProps,\n  MarginTopProps,\n  MarginXProps,\n  MarginYProps,\n} from '@xstyled/styled-components';\n\ninterface MarginsProps\n  extends MarginProps,\n    MarginLeftProps,\n    MarginBottomProps,\n    MarginTopProps,\n    MarginRightProps,\n    MarginXProps,\n    MarginYProps {}\n\nconst marginPropsKeys: (keyof MarginsProps)[] = [\n  'm',\n  'margin',\n  'mt',\n  'marginTop',\n  'mr',\n  'marginRight',\n  'mb',\n  'marginBottom',\n  'ml',\n  'marginLeft',\n  'mx',\n  'my',\n];\n\ntype OmitMarginProps<T> = Omit<\n  T,\n  | 'm'\n  | 'margin'\n  | 'mt'\n  | 'marginTop'\n  | 'mr'\n  | 'marginRight'\n  | 'mb'\n  | 'marginBottom'\n  | 'ml'\n  | 'marginLeft'\n  | 'mx'\n  | 'my'\n>;\n\nexport const extractMarginProps = <T extends object = object>(\n  props: T,\n): [MarginsProps, OmitMarginProps<T>] => {\n  if (!(props instanceof Object)) return [{}, {} as T];\n\n  const entries = Object.entries(props) as [keyof MarginProps, object][];\n  const [marginsProps, restProps] = entries.reduce(\n    ([margins, rest], [key, value]) => {\n      if (marginPropsKeys.includes(key)) {\n        return [{ ...margins, [key]: value }, rest];\n      }\n      return [margins, { ...rest, [key]: value }];\n    },\n    [{} as MarginProps, {} as OmitMarginProps<T>],\n  );\n\n  return [marginsProps, restProps];\n};\n","import { BaseProps } from '@/types/BaseProps';\n\nexport type TextInputConfig = {\n  innerElements?: {\n    input?: BaseProps;\n    icon?: BaseProps;\n    text?: BaseProps;\n    clearButton?: BaseProps;\n    beforeComponent?: {\n      spacing?: Partial<\n        Record<'Icon' | 'Avatar' | 'Prefix' | 'Dropdown', BaseProps>\n      >;\n    } & BaseProps;\n    afterComponent?: {\n      spacing?: Partial<\n        Record<\n          'Icon' | 'Sufix' | 'Button' | 'IconButton' | 'Dropdown',\n          BaseProps\n        >\n      >;\n    } & BaseProps;\n  };\n} & BaseProps;\n\nexport const defaultConfig = {\n  display: 'flex',\n  alignItems: 'center',\n  h: 'medium',\n  padding: 'component-padding-small component-padding-large',\n  flexShrink: 0,\n  ring: '100',\n  ringColor: {\n    _: 'interaction-border-neutral-normal',\n    hover: 'interaction-border-hover',\n    focus: 'interaction-focus-default',\n    alert: 'interaction-border-alert',\n  },\n  borderRadius: 'large',\n  opacity: {\n    disabled: 'disabled',\n  },\n  outlineStyle: {\n    focusWithin: 'solid',\n  },\n  outlineColor: {\n    focusWithin: 'interaction-focus-default',\n  },\n  outlineWidth: {\n    focusWithin: 'focus',\n  },\n  outlineOffset: {\n    alert: 'focus',\n  },\n  transition: true,\n  transitionDuration: 50,\n  cursor: 'text',\n  pointerEvents: {\n    disabled: 'none',\n  },\n  innerElements: {\n    input: {\n      w: '100%',\n      h: '100%',\n      outline: 'none',\n      text: 'body-medium',\n      color: {\n        placeholder: 'content-tertiary',\n      },\n      backgroundColor: 'interaction-background-formField',\n    },\n    icon: {\n      color: 'content-secondary',\n    },\n    text: {\n      text: 'body-medium',\n      color: 'content-secondary',\n    },\n    clearButton: {\n      marginLeft: 'component-gap-small',\n    },\n    beforeComponent: {\n      spacing: {\n        Icon: {\n          marginLeft: 'component-padding-medium',\n          marginRight: 'component-padding-small',\n        },\n        Avatar: {\n          margin: '0 component-padding-small',\n        },\n        Prefix: {\n          margin: '0 component-padding-large',\n        },\n        Dropdown: {\n          marginLeft: 'component-padding-xSmall',\n          marginRight: 'component-padding-small',\n        },\n      },\n    },\n    afterComponent: {\n      spacing: {\n        Icon: {\n          marginLeft: 'component-padding-small',\n          marginRight: 'component-padding-large',\n        },\n        Sufix: {\n          marginLeft: 'component-padding-small',\n          marginRight: 'component-padding-large',\n        },\n        Button: {\n          marginLeft: 'component-padding-small',\n          marginRight: 'component-padding-xSmall',\n        },\n        IconButton: {\n          marginLeft: 'component-padding-small',\n          marginRight: 'component-padding-xSmall',\n        },\n        Dropdown: {\n          marginLeft: 'component-padding-small',\n          marginRight: 'component-padding-xSmall',\n        },\n      },\n    },\n  },\n} satisfies TextInputConfig;\n","import { TextInputConfig, defaultConfig } from '../TextInput.style';\n\nimport { mergeConfigWithCustom } from '@/services/mergeConfigWithCustom/mergeConfigWithCutom';\nimport { BaseProps } from '@/types/BaseProps';\n\ntype TextInputStylesBuilder = {\n  container: BaseProps;\n  input: BaseProps;\n  icon: BaseProps;\n  text: BaseProps;\n  clearButton: BaseProps;\n  beforeComponent: BaseProps;\n  afterComponent: BaseProps;\n};\n\nexport const stylesBuilder = (\n  custom?: TextInputConfig,\n  beforeComponentType?: 'Icon' | 'Avatar' | 'Prefix' | 'Dropdown',\n  afterComponentType?: 'Icon' | 'Sufix' | 'Button' | 'IconButton' | 'Dropdown',\n): TextInputStylesBuilder => {\n  const {\n    innerElements: {\n      input,\n      icon,\n      text,\n      clearButton,\n      beforeComponent: {\n        spacing: beforeComponentSpacing,\n        ...beforeComponentStyles\n      },\n      afterComponent: {\n        spacing: afterComponentSpacing,\n        ...afterComponentStyles\n      },\n    },\n    ...container\n  } = mergeConfigWithCustom({\n    defaultConfig,\n    custom,\n  });\n\n  return {\n    container,\n    input,\n    icon,\n    text,\n    clearButton,\n    beforeComponent: {\n      ...beforeComponentStyles,\n      ...(beforeComponentType && beforeComponentSpacing[beforeComponentType]),\n    },\n    afterComponent: {\n      ...afterComponentStyles,\n      ...(afterComponentType && afterComponentSpacing[afterComponentType]),\n    },\n  };\n};\n","import { Icon } from '@virtuslab/tetrisly-icons';\nimport {\n  forwardRef,\n  useRef,\n  useCallback,\n  useState,\n  ChangeEventHandler,\n  MouseEventHandler,\n  ChangeEvent,\n  useMemo,\n} from 'react';\n\nimport { stylesBuilder } from './stylesBuilder';\nimport { TextInputProps } from './TextInput.props';\nimport { Avatar } from '../Avatar';\nimport { Button } from '../Button';\nimport { IconButton } from '../IconButton';\n\nimport { extractMarginProps } from '@/services/extractMarginProps';\nimport { tet } from '@/tetrisly';\nimport { MarginProps } from '@/types/MarginProps';\n\nexport const TextInput = forwardRef<\n  HTMLInputElement,\n  TextInputProps & MarginProps\n>(\n  (\n    {\n      type = 'text',\n      beforeComponent,\n      afterComponent,\n      state,\n      hasClearButton,\n      custom,\n      value,\n      onChange,\n      ...rest\n    },\n    inputRef,\n  ) => {\n    const [innerValue, setInnerValue] = useState('');\n    const styles = useMemo(\n      () => stylesBuilder(custom, beforeComponent?.type, afterComponent?.type),\n      [afterComponent?.type, beforeComponent?.type, custom],\n    );\n    const [marginProps, inputProps] = extractMarginProps<\n      TextInputProps & MarginProps\n    >(rest);\n\n    const containerRef = useRef<HTMLInputElement | null>(null);\n\n    const handleContainerClick: MouseEventHandler = useCallback(\n      (e) => {\n        if (e.target === containerRef.current) {\n          const input = containerRef.current?.querySelector('input');\n\n          if (input) input.focus();\n        }\n      },\n      [containerRef],\n    );\n\n    const handleOnChange: ChangeEventHandler<HTMLInputElement> = useCallback(\n      (e) => {\n        setInnerValue(e.target.value);\n        onChange?.(e);\n      },\n      [onChange],\n    );\n\n    const handleOnClear: MouseEventHandler<HTMLButtonElement> =\n      useCallback(() => {\n        setInnerValue('');\n        onChange?.({ target: { value: '' } } as ChangeEvent<HTMLInputElement>);\n      }, [onChange]);\n\n    return (\n      <tet.div\n        ref={containerRef}\n        onClick={handleContainerClick}\n        {...styles.container}\n        pl={!!beforeComponent && '0'}\n        pr={!!afterComponent && '0'}\n        data-testid=\"text-input\"\n        data-state={state}\n        {...marginProps}\n      >\n        {!!beforeComponent && (\n          <tet.span\n            {...styles.beforeComponent}\n            data-testid=\"text-input-before-component\"\n          >\n            {beforeComponent.type === 'Icon' && (\n              <tet.span {...styles.icon}>\n                <Icon {...beforeComponent.props} />\n              </tet.span>\n            )}\n            {beforeComponent.type === 'Prefix' && (\n              <tet.span {...styles.text}>{beforeComponent.props.text}</tet.span>\n            )}\n            {beforeComponent.type === 'Dropdown' && (\n              <Button\n                size=\"small\"\n                variant=\"ghost\"\n                label={beforeComponent.props.label}\n                dropdownIndicator\n              />\n            )}\n            {beforeComponent.type === 'Avatar' && (\n              <Avatar {...beforeComponent.props} shape=\"square\" size=\"xSmall\" />\n            )}\n          </tet.span>\n        )}\n        <tet.input\n          {...styles.input}\n          value={value || innerValue}\n          onChange={handleOnChange}\n          data-testid=\"text-input-input\"\n          {...inputProps}\n          type={type}\n          disabled={state === 'disabled'}\n          ref={inputRef}\n        />\n        {!!hasClearButton && (value || innerValue) && (\n          <IconButton\n            variant=\"bare\"\n            icon=\"20-close\"\n            onClick={handleOnClear}\n            {...styles.clearButton}\n            data-testid=\"text-input-clear-button\"\n          />\n        )}\n        {!!afterComponent && (\n          <tet.span\n            {...styles.afterComponent}\n            data-testid=\"text-input-after-component\"\n          >\n            {afterComponent.type === 'Icon' && (\n              <tet.span {...styles.icon}>\n                <Icon {...afterComponent.props} />\n              </tet.span>\n            )}\n            {afterComponent.type === 'IconButton' && (\n              <IconButton\n                variant=\"ghost\"\n                size=\"small\"\n                {...afterComponent.props}\n              />\n            )}\n            {afterComponent.type === 'Sufix' && (\n              <tet.span {...styles.text}>{afterComponent.props.text}</tet.span>\n            )}\n            {afterComponent.type === 'Button' && (\n              <Button size=\"small\" variant=\"ghost\" label=\"Label\" />\n            )}\n            {afterComponent.type === 'Dropdown' && (\n              <Button\n                size=\"small\"\n                variant=\"ghost\"\n                label={afterComponent.props.label}\n                dropdownIndicator\n              />\n            )}\n          </tet.span>\n        )}\n      </tet.div>\n    );\n  },\n);\n"],"names":["marginPropsKeys","extractMarginProps","props","entries","marginsProps","restProps","margins","rest","key","value","defaultConfig","stylesBuilder","custom","beforeComponentType","afterComponentType","input","icon","text","clearButton","beforeComponentSpacing","beforeComponentStyles","afterComponentSpacing","afterComponentStyles","container","mergeConfigWithCustom","TextInput","forwardRef","type","beforeComponent","afterComponent","state","hasClearButton","onChange","inputRef","innerValue","setInnerValue","useState","styles","useMemo","marginProps","inputProps","containerRef","useRef","handleContainerClick","useCallback","e","_a","handleOnChange","handleOnClear","jsxs","tet","jsx","Icon","Button","Avatar","IconButton"],"mappings":"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"}