{"version":3,"file":"Button-fe733cbf.js","sources":["../../src/components/Button/stylesBuilder/applyDefaults.ts","../../src/components/Button/Button.styles.ts","../../src/components/Button/stylesBuilder/stylesBuilder.ts","../../src/components/Button/Button.tsx"],"sourcesContent":["import { StylesBuilderProps } from './stylesBuilder.props';\nimport { ButtonAppearance } from '../types/ButtonAppearance.type';\nimport { ButtonIntent } from '../types/ButtonIntent.type';\nimport { ButtonSize } from '../types/ButtonSize.type';\nimport { ButtonVariant } from '../types/ButtonType.type';\n\nexport function applyDefaults<\n  TVariant extends ButtonVariant,\n  TAppearance extends ButtonAppearance<TVariant>,\n>({\n  appearance,\n  intent,\n  size,\n  variant,\n}: StylesBuilderProps<TVariant, TAppearance>): Required<\n  Omit<StylesBuilderProps<TVariant, TAppearance>, 'custom'>\n> {\n  return {\n    variant: (variant ?? 'default') as TVariant,\n    appearance: (appearance ?? 'secondary') as TAppearance,\n    intent: (intent ?? 'none') as ButtonIntent<TVariant, TAppearance>,\n    size: (size ?? 'medium') as ButtonSize<TVariant>,\n  };\n}\n","import { ButtonVariant } from './types/ButtonType.type';\nimport { VariantConfig } from './VariantConfig';\n\nimport { BaseProps } from '@/types/BaseProps';\n\nconst size = {\n  small: {\n    pl: '100',\n    pr: '150',\n    h: 'small',\n    text: 'body-medium',\n  },\n  medium: {\n    pl: '150',\n    pr: '200',\n    h: 'medium',\n    text: 'body-medium',\n  },\n  large: {\n    pl: '150',\n    pr: '200',\n    h: 'large',\n    text: 'body-large',\n  },\n} as const satisfies Record<'small' | 'medium' | 'large', BaseProps>;\n\nconst commonConfig = {\n  display: 'inline-flex',\n  gap: '100',\n  justifyContent: 'center',\n  alignItems: 'center',\n  borderRadius: 'medium',\n  textAlign: 'center',\n  whiteSpace: 'nowrap',\n  opacity: {\n    disabled: 'disabled',\n  },\n  outlineColor: {\n    focus: 'interaction-focus-default',\n  },\n  outlineWidth: {\n    focus: 'focus',\n  },\n  outlineOffset: 2,\n  pointerEvents: {\n    loading: 'none',\n    disabled: 'none',\n  },\n  transition: true,\n  transitionDuration: 200,\n} as const satisfies BaseProps;\n\nconst defaultConfig = {\n  ...commonConfig,\n  boxShadow: 'bottom-100',\n  appearance: {\n    primary: {\n      color: 'action-inverted-normal',\n      intent: {\n        none: {\n          backgroundColor: {\n            _: 'action-primary-normal',\n            hover: 'action-primary-hover',\n            active: 'action-primary-active',\n            selected: 'action-primary-selected',\n            // loading: \"action-primary-loading\",\n          },\n        },\n        success: {\n          backgroundColor: {\n            _: 'action-success-normal',\n            hover: 'action-success-hover',\n            active: 'action-success-active',\n            selected: 'action-success-selected',\n            // loading: \"action-success-loading\",\n          },\n        },\n        destructive: {\n          backgroundColor: {\n            _: 'action-destructive-normal',\n            hover: 'action-destructive-hover',\n            active: 'action-destructive-active',\n            selected: 'action-destructive-selected',\n            // loading: \"action-destructive-loading\",\n          },\n        },\n      },\n    },\n    secondary: {\n      backgroundColor: 'action-inverted-normal',\n      ringInset: true,\n      ring: '100',\n      ringColor: {\n        _: 'action-outline-normal',\n        hover: 'action-outline-hover',\n        active: 'action-outline-active',\n        selected: 'action-outline-selected',\n      },\n      intent: {\n        none: {\n          color: {\n            _: 'action-neutral-normal',\n            hover: 'action-neutral-hover',\n            active: 'action-neutral-active',\n            selected: 'action-neutral-selected',\n          },\n        },\n        success: {\n          color: {\n            _: 'action-success-normal',\n            hover: 'action-success-hover',\n            active: 'action-success-active',\n            selected: 'action-success-selected',\n          },\n        },\n        destructive: {\n          color: {\n            _: 'action-destructive-normal',\n            hover: 'action-destructive-hover',\n            active: 'action-destructive-active',\n            selected: 'action-destructive-selected',\n          },\n        },\n      },\n    },\n    inverted: {\n      intent: {\n        none: {\n          backgroundColor: {\n            _: 'action-inverted-normal',\n            hover: 'action-inverted-hover',\n            active: 'action-inverted-active',\n            selected: 'action-inverted-selected',\n            // loading: \"action-inverted-loading\",\n          },\n          color: {\n            _: 'action-neutral-normal',\n            hover: 'action-neutral-hover',\n            active: 'action-neutral-active',\n            selected: 'action-neutral-selected',\n          },\n        },\n      },\n    },\n  },\n  size,\n} as const satisfies VariantConfig<'default'>;\n\nconst ghostConfig = {\n  ...commonConfig,\n  backgroundColor: {\n    _: 'transparent',\n    hover: 'action-ghost-hover',\n    active: 'action-ghost-active',\n    selected: 'action-ghost-selected',\n  },\n  appearance: {\n    primary: {\n      intent: {\n        none: {\n          color: {\n            _: 'action-primary-normal',\n            hover: 'action-primary-hover',\n            active: 'action-primary-active',\n            selected: 'action-primary-selected',\n          },\n        },\n        success: {\n          color: {\n            _: 'action-success-normal',\n            hover: 'action-success-hover',\n            active: 'action-success-active',\n            selected: 'action-success-selected',\n          },\n        },\n        destructive: {\n          color: {\n            _: 'action-destructive-normal',\n            hover: 'action-destructive-hover',\n            active: 'action-destructive-active',\n            selected: 'action-destructive-selected',\n          },\n        },\n      },\n    },\n    secondary: {\n      intent: {\n        none: {\n          color: {\n            _: 'action-neutral-normal',\n            hover: 'action-neutral-hover',\n            active: 'action-neutral-active',\n            selected: 'action-neutral-selected',\n          },\n        },\n      },\n    },\n    inverted: {\n      intent: {\n        none: {\n          backgroundColor: {\n            _: 'action-ghost-normal',\n            hover: 'action-ghost-hover',\n            active: 'action-ghost-active',\n            selected: 'action-ghost-selected',\n          },\n          color: {\n            _: 'action-inverted-normal',\n            hover: 'action-inverted-hover',\n            active: 'action-inverted-active',\n            selected: 'action-inverted-selected',\n          },\n        },\n      },\n    },\n    reverseInverted: {\n      intent: {\n        none: {\n          color: {\n            _: 'action-reverseInverted-normal',\n            hover: 'action-reverseInverted-hover',\n            active: 'action-reverseInverted-active',\n            selected: 'action-reverseInverted-selected',\n          },\n        },\n      },\n    },\n  },\n  size,\n} as const satisfies VariantConfig<'ghost'>;\n\nconst bareConfig = {\n  ...commonConfig,\n  p: 0,\n  backgroundColor: 'transparent',\n  appearance: {\n    primary: {\n      intent: {\n        none: {\n          color: {\n            _: 'action-primary-normal',\n            hover: 'action-primary-hover',\n            active: 'action-primary-active',\n            selected: 'action-primary-selected',\n          },\n        },\n        success: {\n          color: {\n            _: 'action-success-normal',\n            hover: 'action-success-hover',\n            active: 'action-success-active',\n            selected: 'action-success-selected',\n          },\n        },\n        destructive: {\n          color: {\n            _: 'action-destructive-normal',\n            hover: 'action-destructive-hover',\n            active: 'action-destructive-active',\n            selected: 'action-destructive-selected',\n          },\n        },\n      },\n    },\n    secondary: {\n      intent: {\n        none: {\n          color: {\n            _: 'action-neutral-normal',\n            hover: 'action-neutral-hover',\n            active: 'action-neutral-active',\n            selected: 'action-neutral-selected',\n          },\n        },\n      },\n    },\n    inverted: {\n      intent: {\n        none: {\n          color: {\n            _: 'action-inverted-normal',\n            hover: 'action-inverted-hover',\n            active: 'action-inverted-active',\n            selected: 'action-inverted-selected',\n          },\n        },\n      },\n      textDecoration: 'underline',\n    },\n    reverseInverted: {\n      intent: {\n        none: {\n          color: {\n            _: 'action-reverseInverted-normal',\n            hover: 'action-reverseInverted-hover',\n            active: 'action-reverseInverted-active',\n            selected: 'action-reverseInverted-selected',\n          },\n        },\n      },\n      textDecoration: 'underline',\n    },\n  },\n  size: {\n    medium: { text: 'body-medium' },\n    large: { text: 'body-large' },\n  },\n} as const satisfies VariantConfig<'bare'>;\n\nexport const config = {\n  default: defaultConfig,\n  ghost: ghostConfig,\n  bare: bareConfig,\n} as const satisfies Record<ButtonVariant, unknown>;\n","import { SystemProps } from '@xstyled/styled-components';\nimport { merge } from 'lodash';\n\nimport { applyDefaults } from './applyDefaults';\nimport { StylesBuilderProps } from './stylesBuilder.props';\nimport { config as defaultConfig } from '../Button.styles';\nimport { ButtonAppearance } from '../types/ButtonAppearance.type';\nimport { ButtonVariant } from '../types/ButtonType.type';\nimport { VariantConfig } from '../VariantConfig';\n\nimport { isKeyOf } from '@/services';\nimport { Theme } from '@/theme';\n\nexport const stylesBuilder = <\n  TVariant extends ButtonVariant,\n  TAppearance extends ButtonAppearance<TVariant>,\n>(\n  props: StylesBuilderProps<TVariant, TAppearance>,\n): SystemProps<Theme> => {\n  const options = applyDefaults(props);\n  const config = props.custom\n    ? merge(defaultConfig, props.custom)\n    : defaultConfig;\n  const { appearance, size, ...rest } = config[\n    options.variant\n  ] as VariantConfig<TVariant>;\n\n  if (!isKeyOf(appearance, options.appearance))\n    throw new Error(\n      `${options.appearance} is not a valid appearance for ${options.variant}`,\n    );\n  const { intent: intentConfig, ...appearanceProps } =\n    appearance[options.appearance];\n\n  if (!isKeyOf(intentConfig, options.intent)) {\n    throw new Error(\n      `${options.intent} is not a valid intent for ${options.variant} ${options.appearance}`,\n    );\n  }\n\n  const intentProps = intentConfig[options.intent];\n\n  const sizes = isKeyOf(size, options.size) ? size[options.size] : {};\n\n  return {\n    ...rest,\n    ...appearanceProps,\n    ...intentProps,\n    ...sizes,\n  } as const;\n};\n","import { Icon } from '@virtuslab/tetrisly-icons';\n\nimport { ButtonProps } from './Button.props';\nimport { stylesBuilder } from './stylesBuilder/stylesBuilder';\nimport { ButtonAppearance } from './types/ButtonAppearance.type';\nimport { ButtonVariant } from './types/ButtonType.type';\nimport { tet } from '../../tetrisly';\nimport { Loader } from '../Loader';\n\nimport type { MarginProps } from '@/types';\n\nexport const Button = <\n  TVariant extends ButtonVariant = 'default',\n  TAppearance extends ButtonAppearance<TVariant> = ButtonAppearance<TVariant>,\n>({\n  label,\n  variant,\n  appearance,\n  intent,\n  state,\n  size,\n  custom,\n  dropdownIndicator: dropdown,\n  afterIcon,\n  beforeIcon,\n  ...rest\n}: ButtonProps<TVariant, TAppearance> & MarginProps) => {\n  if (dropdown && afterIcon) {\n    throw new Error('Button cannot have both dropdown indicator and afterIcon');\n  }\n  return (\n    <tet.button\n      data-testid=\"button\"\n      {...stylesBuilder({ variant, appearance, intent, size, custom })}\n      disabled={['disabled', 'loading'].includes(state ?? '')}\n      data-state={state}\n      style={{ textUnderlineOffset: '3px', textDecorationThickness: '1px' }}\n      {...rest}\n    >\n      {state === 'loading' && (\n        <Loader\n          appearance={appearance === 'inverted' ? 'white' : 'greyscale'}\n          size=\"small\"\n          shape=\"circle\"\n        />\n      )}\n      {beforeIcon && state !== 'loading' && <Icon name={beforeIcon} />}\n      {label}\n      {dropdown && <Icon name=\"20-chevron-down\" />}\n      {afterIcon && <Icon name={afterIcon} />}\n    </tet.button>\n  );\n};\n"],"names":["applyDefaults","appearance","intent","size","variant","commonConfig","defaultConfig","ghostConfig","bareConfig","config","stylesBuilder","props","options","merge","rest","isKeyOf","intentConfig","appearanceProps","intentProps","sizes","Button","label","state","custom","dropdown","afterIcon","beforeIcon","jsxs","tet","jsx","Loader","Icon"],"mappings":"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"}