{"version":3,"file":"Toast.stories-d0f1f029.js","sources":["../../src/components/Toast/Toast.styles.ts","../../src/components/Toast/stylesBuilder/stylesBuilder.ts","../../src/components/Toast/Toast.tsx"],"sourcesContent":["import type { ToastIntent } from './types';\nimport { ButtonProps } from '../Button';\n\nimport { BaseProps } from '@/types/BaseProps';\nimport { Emphasis } from '@/types/Emphasis';\n\nexport type ToastConfig = {\n  emphasis: Record<Emphasis, BaseProps>;\n  intent: Record<ToastIntent, BaseProps>;\n  closeButton: BaseProps;\n  innerElements: {\n    iconContainer: {\n      intent: Record<ToastIntent, { emphasis: Record<Emphasis, BaseProps> }>;\n    } & BaseProps;\n    actionContainer: BaseProps;\n    middleDot: {\n      emphasis: Record<Emphasis, BaseProps | Partial<ButtonProps<'bare'>>>;\n    } & BaseProps;\n    closeButton: BaseProps;\n  };\n} & BaseProps;\n\nexport const config = {\n  display: 'inline-flex',\n  alignItems: 'center',\n  p: 'component-padding-medium component-padding-large',\n  padding: 'component-padding-medium component-padding-large',\n  borderRadius: 'large',\n  emphasis: {\n    high: {},\n    low: {\n      backgroundColor: 'interaction-background-modeless',\n      color: 'content-primary',\n      ringColor: 'border-defaultA',\n      ring: 'small',\n      boxShadow: 'bottom-200',\n    },\n  },\n  intent: {\n    neutral: {\n      backgroundColor: 'background-inverted',\n      color: 'content-primary-inverted',\n    },\n    informative: {\n      backgroundColor: 'background-informative-strong',\n      color: 'content-primary-inverted',\n      pl: 'component-padding-medium',\n    },\n    success: {\n      backgroundColor: 'background-positive-strong',\n      color: 'content-primary-inverted',\n      pl: 'component-padding-medium',\n    },\n    warning: {\n      backgroundColor: 'background-warning-strong',\n      color: 'content-primary',\n      pl: 'component-padding-medium',\n    },\n    negative: {\n      backgroundColor: 'background-negative-strong',\n      color: 'content-primary-inverted',\n      pl: 'component-padding-medium',\n    },\n  },\n  closeButton: {\n    pr: 'component-padding-small',\n  },\n  innerElements: {\n    iconContainer: {\n      intent: {\n        neutral: { emphasis: { low: {}, high: {} } },\n        informative: {\n          emphasis: {\n            low: {\n              color: 'content-informative-secondary',\n            },\n            high: {\n              color: 'content-primary-inverted',\n            },\n          },\n        },\n        success: {\n          emphasis: {\n            low: {\n              color: 'content-positive-secondary',\n            },\n            high: {\n              color: 'content-primary-inverted',\n            },\n          },\n        },\n        warning: {\n          emphasis: {\n            low: {\n              color: 'content-warning-secondary',\n            },\n            high: {\n              color: 'content-primary',\n            },\n          },\n        },\n        negative: {\n          emphasis: {\n            low: {\n              color: 'content-negative-secondary',\n            },\n            high: {\n              color: 'content-primary-inverted',\n            },\n          },\n        },\n      },\n      mr: 'component-gap-small',\n    },\n    actionContainer: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      gap: 'component-gap-small',\n      ml: 'component-gap-xLarge',\n    },\n    middleDot: {\n      emphasis: {\n        high: {\n          color: 'content-secondary-inverted',\n        },\n        low: {\n          color: 'content-tertiary',\n        },\n      },\n      text: 'body-medium',\n    },\n    closeButton: {\n      ml: 'component-padding-large',\n    },\n  },\n} satisfies ToastConfig;\n","import { IconProps } from '@virtuslab/tetrisly-icons';\nimport { merge } from 'lodash';\n\nimport { ToastProps } from '../Toast.props';\nimport { config as defaultConfig } from '../Toast.styles';\nimport { ToastIntent } from '../types';\n\nimport { ButtonAppearance } from '@/components/Button/types/ButtonAppearance.type';\nimport { IconButtonProps } from '@/components/IconButton/IconButton.props';\nimport { IconButtonAppearance } from '@/components/IconButton/IconButtonAppearance.type';\nimport { BaseProps } from '@/types/BaseProps';\n\ntype StylesBuilderProps = Required<Pick<ToastProps, 'emphasis' | 'intent'>> & {\n  custom: ToastProps['custom'];\n  closeButton: boolean;\n};\n\ntype ToastStylesBuilder = {\n  actionProps: {\n    appearance: ButtonAppearance<'bare'>;\n  };\n  actionContainerStyles: BaseProps;\n  closeButtonProps: Partial<IconButtonProps<'ghost'>>;\n  closeButtonStyles: BaseProps;\n  containerStyles: BaseProps;\n  iconProps: Partial<IconProps>;\n  iconContainerStyles: BaseProps;\n  middleDotStyles: BaseProps;\n};\n\nexport const stylesBuilder = (\n  props: StylesBuilderProps,\n): ToastStylesBuilder => {\n  const config = merge(defaultConfig, props.custom);\n\n  const {\n    emphasis: emphasisContainerStyles,\n    intent: intentContainerStyles,\n    closeButton: closeButtonContainerStyles,\n    innerElements: innerElementsStyles,\n    ...restContainerStyles\n  } = config;\n\n  const containerStyles: BaseProps = {\n    ...intentContainerStyles[props.intent],\n    ...emphasisContainerStyles[props.emphasis],\n    ...restContainerStyles,\n    ...(props.closeButton && closeButtonContainerStyles),\n  };\n\n  const {\n    actionContainer: actionContainerStyles,\n    closeButton: closeButtonStyles,\n    iconContainer,\n    middleDot: middleDotStyles,\n  } = innerElementsStyles;\n\n  const buttonIntentAppearance =\n    props.intent === 'warning' ? 'reverseInverted' : 'inverted';\n  const buttonAppearance =\n    props.emphasis === 'high' ? buttonIntentAppearance : 'primary';\n\n  const actionProps = {\n    appearance: buttonAppearance as ButtonAppearance<'bare'>,\n  };\n\n  const icon: { intent: Record<ToastIntent, Partial<IconProps>> } = {\n    intent: {\n      neutral: {},\n      informative: {\n        name: '20-info-fill',\n      },\n      success: {\n        name: '20-check-circle-fill',\n      },\n      warning: {\n        name: '20-warning-fill',\n      },\n      negative: {\n        name: '20-alert-fill',\n      },\n    },\n  };\n\n  const iconProps: Partial<IconProps> = {\n    ...icon.intent[props.intent],\n  };\n\n  const { intent: intentIconContainerStyles, ...restIconContainerStyles } =\n    iconContainer;\n\n  const iconContainerStyles: BaseProps = {\n    ...intentIconContainerStyles[props.intent].emphasis[props.emphasis],\n    ...restIconContainerStyles,\n  };\n\n  const closeButtonProps: Partial<IconButtonProps<'ghost'>> = {\n    appearance: buttonAppearance as IconButtonAppearance<'ghost'>,\n  };\n\n  return {\n    actionProps,\n    actionContainerStyles,\n    closeButtonProps,\n    closeButtonStyles,\n    containerStyles,\n    iconProps,\n    iconContainerStyles,\n    middleDotStyles,\n  };\n};\n","import { Icon } from '@virtuslab/tetrisly-icons';\nimport { FC, useMemo } from 'react';\n\nimport { stylesBuilder } from './stylesBuilder';\nimport { ToastProps } from './Toast.props';\nimport { Button } from '../Button';\nimport { IconButton } from '../IconButton';\n\nimport { tet } from '@/tetrisly';\nimport { MarginProps } from '@/types';\n\ntype Props = ToastProps & MarginProps;\n\nexport const Toast: FC<Props> = ({\n  text,\n  emphasis = 'low',\n  intent = 'neutral',\n  action,\n  onCloseClick,\n  custom,\n  ...restProps\n}) => {\n  const {\n    actionProps,\n    actionContainerStyles,\n    closeButtonProps,\n    closeButtonStyles,\n    containerStyles,\n    iconProps,\n    iconContainerStyles,\n    middleDotStyles,\n  } = useMemo(\n    () =>\n      stylesBuilder({\n        custom,\n        emphasis,\n        intent,\n        closeButton: !!onCloseClick,\n      }),\n    [custom, emphasis, intent, onCloseClick],\n  );\n\n  const [firstAction, secondAction] = Array.isArray(action)\n    ? action\n    : [action, undefined];\n\n  return (\n    <tet.div {...containerStyles} {...restProps} data-testid=\"toast\">\n      {!!iconProps.name && (\n        <tet.span {...iconContainerStyles}>\n          <Icon {...iconProps} name={iconProps.name} />\n        </tet.span>\n      )}\n      {text}\n      {firstAction && (\n        <tet.div {...actionContainerStyles}>\n          <Button variant=\"bare\" {...actionProps} {...firstAction} />\n          {secondAction && (\n            <>\n              <tet.div {...middleDotStyles}>&middot;</tet.div>\n              <Button variant=\"bare\" {...actionProps} {...secondAction} />\n            </>\n          )}\n        </tet.div>\n      )}\n      {!!onCloseClick && (\n        <IconButton\n          size=\"small\"\n          variant=\"ghost\"\n          intent=\"none\"\n          icon=\"20-close\"\n          onClick={onCloseClick}\n          {...closeButtonProps}\n          {...closeButtonStyles}\n        />\n      )}\n    </tet.div>\n  );\n};\n"],"names":["config","stylesBuilder","props","merge","defaultConfig","emphasisContainerStyles","intentContainerStyles","closeButtonContainerStyles","innerElementsStyles","restContainerStyles","containerStyles","actionContainerStyles","closeButtonStyles","iconContainer","middleDotStyles","buttonIntentAppearance","buttonAppearance","actionProps","iconProps","intentIconContainerStyles","restIconContainerStyles","iconContainerStyles","Toast","text","emphasis","intent","action","onCloseClick","custom","restProps","closeButtonProps","useMemo","firstAction","secondAction","jsxs","tet","jsx","Icon","Button","Fragment","IconButton"],"mappings":"wcAsBO,MAAMA,GAAS,CACpB,QAAS,cACT,WAAY,SACZ,EAAG,mDACH,QAAS,mDACT,aAAc,QACd,SAAU,CACR,KAAM,CAAC,EACP,IAAK,CACH,gBAAiB,kCACjB,MAAO,kBACP,UAAW,kBACX,KAAM,QACN,UAAW,YACb,CACF,EACA,OAAQ,CACN,QAAS,CACP,gBAAiB,sBACjB,MAAO,0BACT,EACA,YAAa,CACX,gBAAiB,gCACjB,MAAO,2BACP,GAAI,0BACN,EACA,QAAS,CACP,gBAAiB,6BACjB,MAAO,2BACP,GAAI,0BACN,EACA,QAAS,CACP,gBAAiB,4BACjB,MAAO,kBACP,GAAI,0BACN,EACA,SAAU,CACR,gBAAiB,6BACjB,MAAO,2BACP,GAAI,0BACN,CACF,EACA,YAAa,CACX,GAAI,yBACN,EACA,cAAe,CACb,cAAe,CACb,OAAQ,CACN,QAAS,CAAE,SAAU,CAAE,IAAK,CAAA,EAAI,KAAM,CAAA,EAAK,EAC3C,YAAa,CACX,SAAU,CACR,IAAK,CACH,MAAO,+BACT,EACA,KAAM,CACJ,MAAO,0BACT,CACF,CACF,EACA,QAAS,CACP,SAAU,CACR,IAAK,CACH,MAAO,4BACT,EACA,KAAM,CACJ,MAAO,0BACT,CACF,CACF,EACA,QAAS,CACP,SAAU,CACR,IAAK,CACH,MAAO,2BACT,EACA,KAAM,CACJ,MAAO,iBACT,CACF,CACF,EACA,SAAU,CACR,SAAU,CACR,IAAK,CACH,MAAO,4BACT,EACA,KAAM,CACJ,MAAO,0BACT,CACF,CACF,CACF,EACA,GAAI,qBACN,EACA,gBAAiB,CACf,QAAS,OACT,WAAY,SACZ,eAAgB,SAChB,IAAK,sBACL,GAAI,sBACN,EACA,UAAW,CACT,SAAU,CACR,KAAM,CACJ,MAAO,4BACT,EACA,IAAK,CACH,MAAO,kBACT,CACF,EACA,KAAM,aACR,EACA,YAAa,CACX,GAAI,yBACN,CACF,CACF,EC1GaC,GACXC,GACuB,CACvB,MAAMF,EAASG,GAAA,MAAMC,GAAeF,EAAM,MAAM,EAE1C,CACJ,SAAUG,EACV,OAAQC,EACR,YAAaC,EACb,cAAeC,EACf,GAAGC,CACD,EAAAT,EAEEU,EAA6B,CACjC,GAAGJ,EAAsBJ,EAAM,MAAM,EACrC,GAAGG,EAAwBH,EAAM,QAAQ,EACzC,GAAGO,EACH,GAAIP,EAAM,aAAeK,CAAA,EAGrB,CACJ,gBAAiBI,EACjB,YAAaC,EACb,cAAAC,EACA,UAAWC,CACT,EAAAN,EAEEO,EACJb,EAAM,SAAW,UAAY,kBAAoB,WAC7Cc,EACJd,EAAM,WAAa,OAASa,EAAyB,UAEjDE,EAAc,CAClB,WAAYD,CAAA,EAqBRE,EAAgC,CACpC,GAnBgE,CAChE,OAAQ,CACN,QAAS,CAAC,EACV,YAAa,CACX,KAAM,cACR,EACA,QAAS,CACP,KAAM,sBACR,EACA,QAAS,CACP,KAAM,iBACR,EACA,SAAU,CACR,KAAM,eACR,CACF,CAAA,EAIQ,OAAOhB,EAAM,MAAM,CAAA,EAGvB,CAAE,OAAQiB,GAA2B,GAAGC,IAC5CP,EAEIQ,GAAiC,CACrC,GAAGF,GAA0BjB,EAAM,MAAM,EAAE,SAASA,EAAM,QAAQ,EAClE,GAAGkB,EAAA,EAOE,MAAA,CACL,YAAAH,EACA,sBAAAN,EACA,iBAP0D,CAC1D,WAAYK,CAAA,EAOZ,kBAAAJ,EACA,gBAAAF,EACA,UAAAQ,EACA,oBAAAG,GACA,gBAAAP,CAAA,CAEJ,ECjGOQ,EAAA,CAAA,CAA0B,KAAAC,EAC/B,SAAAC,EAAA,MACW,OAAAC,EAAA,UACF,OAAAC,EACT,aAAAC,EACA,OAAAC,EACA,GAAAC,CAEF,IAAA,CACE,KAAA,CAAM,YAAAZ,EACJ,sBAAAN,EACA,iBAAAmB,EACA,kBAAAlB,EACA,gBAAAF,EACA,UAAAQ,EACA,oBAAAG,EACA,gBAAAP,CACA,EAAAiB,GAAA,QACE,IAAA9B,GAAA,CAEc,OAAA2B,EACZ,SAAAJ,EACA,OAAAC,EACA,YAAA,CAAA,CAAAE,CACe,CAAA,EAChB,CAAAC,EAAAJ,EAAAC,EAAAE,CAAA,CACoC,EAGzC,CAAAK,EAAAC,CAAA,EAAA,MAAA,QAAAP,CAAA,EAAAA,EAAA,CAAAA,EAAA,MAAA,EAIA,OAAAQ,EAAA,KAAAC,EAAA,IAAA,CAAA,GAAAzB,EAAA,GAAAmB,EAAA,cAAA,QAAA,SAAA,CAEK,CAAA,CAAAX,EAAA,MAAAkB,EAAAA,IAAAD,EAAA,KAAA,CAAA,GAAAd,EAAA,SAAAe,EAAAA,IAAAC,GAAA,CAAA,GAAAnB,EAAA,KAAAA,EAAA,IAAA,CAAA,EAAA,EAGCK,EAEDS,GAAAE,EAAA,KAAAC,EAAA,IAAA,CAAA,GAAAxB,EAAA,SAAA,CAGGyB,EAAA,IAAAE,EAAA,CAAA,QAAA,OAAA,GAAArB,EAAA,GAAAe,EAAA,EAAyDC,GAAAC,EAAA,KAAAK,WAAA,CAAA,SAAA,CAGrDH,EAAA,IAAAD,EAAA,IAAA,CAAA,GAAArB,EAAA,SAAA,IAAA,EAAsCsB,EAAA,IAAAE,EAAA,CAAA,QAAA,OAAA,GAAArB,EAAA,GAAAgB,EAAA,CACoB,EAAA,CAC5D,EAAA,EAEJ,CAAA,CAAAN,GAAAS,EAAA,IAGAI,GAAC,CAAA,KAAA,QACM,QAAA,QACG,OAAA,OACD,KAAA,WACF,QAAAb,EACI,GAAAG,EACL,GAAAlB,CACA,CAAA,CACN,CAAA,CAAA,CAIR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}