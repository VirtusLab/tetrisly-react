{"version":3,"file":"Avatar-3f653ac5.js","sources":["../../src/components/Avatar/Avatar.styles.ts","../../src/components/Avatar/stylesBuilder/stylesBuilder.ts","../../src/components/Avatar/Avatar.tsx"],"sourcesContent":["import type { AvatarAppearance, AvatarShape } from './types';\n\nimport type { BaseProps } from '@/types/BaseProps';\nimport { Emphasis } from '@/types/Emphasis';\nimport { Size } from '@/types/Size';\n\nexport type AvatarConfig = {\n  shape?: Partial<Record<AvatarShape, BaseProps>>;\n  size?: Partial<Record<Size, BaseProps>>;\n  appearance?: Partial<\n    Record<\n      AvatarAppearance,\n      {\n        emphasis?: Partial<Record<Emphasis, BaseProps>>;\n      }\n    >\n  >;\n  innerElements?: {\n    image?: BaseProps;\n  };\n} & BaseProps;\n\nexport const defaultConfig = {\n  overflow: 'hidden',\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  shape: {\n    rounded: {\n      borderRadius: 'full',\n    },\n    square: {\n      borderRadius: 'large',\n    },\n  },\n  size: {\n    large: {\n      w: 'large',\n      h: 'large',\n      text: 'body-large',\n    },\n    medium: {\n      w: 'medium',\n      h: 'medium',\n      text: 'body-medium',\n    },\n    small: {\n      w: 'small',\n      h: 'small',\n      text: 'body-small',\n    },\n    xSmall: {\n      w: 'xSmall',\n      h: 'xSmall',\n      text: 'body-strong-xSmall',\n    },\n    '2xSmall': {\n      w: '2xSmall',\n      h: '2xSmall',\n      text: 'body-strong-xSmall',\n    },\n  },\n  appearance: {\n    image: {\n      emphasis: {\n        high: {},\n        low: {},\n      },\n    },\n    blue: {\n      emphasis: {\n        high: {\n          color: 'nonSemantic-white-content-primary',\n          backgroundColor: 'nonSemantic-blue-background-strong',\n        },\n        low: {\n          color: 'nonSemantic-blue-content-primary',\n          backgroundColor: 'nonSemantic-blue-background-muted',\n        },\n      },\n    },\n    green: {\n      emphasis: {\n        high: {\n          color: 'nonSemantic-white-content-primary',\n          backgroundColor: 'nonSemantic-green-background-strong',\n        },\n        low: {\n          color: 'nonSemantic-green-content-primary',\n          backgroundColor: 'nonSemantic-green-background-muted',\n        },\n      },\n    },\n    grey: {\n      emphasis: {\n        high: {\n          color: 'nonSemantic-white-content-primary',\n          backgroundColor: 'nonSemantic-grey-background-strong',\n        },\n        low: {\n          color: 'nonSemantic-grey-content-primary',\n          backgroundColor: 'nonSemantic-grey-background-muted',\n        },\n      },\n    },\n    red: {\n      emphasis: {\n        high: {\n          color: 'nonSemantic-white-content-primary',\n          backgroundColor: 'nonSemantic-red-background-strong',\n        },\n        low: {\n          color: 'nonSemantic-red-content-primary',\n          backgroundColor: 'nonSemantic-red-background-muted',\n        },\n      },\n    },\n    orange: {\n      emphasis: {\n        high: {\n          color: 'nonSemantic-white-content-primary',\n          backgroundColor: 'nonSemantic-orange-background-strong',\n        },\n        low: {\n          color: 'nonSemantic-orange-content-primary',\n          backgroundColor: 'nonSemantic-orange-background-muted',\n        },\n      },\n    },\n    raspberry: {\n      emphasis: {\n        high: {\n          color: 'nonSemantic-white-content-primary',\n          backgroundColor: 'nonSemantic-raspberry-background-strong',\n        },\n        low: {\n          color: 'nonSemantic-raspberry-content-primary',\n          backgroundColor: 'nonSemantic-raspberry-background-muted',\n        },\n      },\n    },\n    magenta: {\n      emphasis: {\n        high: {\n          color: 'nonSemantic-white-content-primary',\n          backgroundColor: 'nonSemantic-magenta-background-strong',\n        },\n        low: {\n          color: 'nonSemantic-magenta-content-primary',\n          backgroundColor: 'nonSemantic-magenta-background-muted',\n        },\n      },\n    },\n    purple: {\n      emphasis: {\n        high: {\n          color: 'nonSemantic-white-content-primary',\n          backgroundColor: 'nonSemantic-purple-background-strong',\n        },\n        low: {\n          color: 'nonSemantic-purple-content-primary',\n          backgroundColor: 'nonSemantic-purple-background-muted',\n        },\n      },\n    },\n    grape: {\n      emphasis: {\n        high: {\n          color: 'nonSemantic-white-content-primary',\n          backgroundColor: 'nonSemantic-grape-background-strong',\n        },\n        low: {\n          color: 'nonSemantic-grape-content-primary',\n          backgroundColor: 'nonSemantic-grape-background-muted',\n        },\n      },\n    },\n    violet: {\n      emphasis: {\n        high: {\n          color: 'nonSemantic-white-content-primary',\n          backgroundColor: 'nonSemantic-violet-background-strong',\n        },\n        low: {\n          color: 'nonSemantic-violet-content-primary',\n          backgroundColor: 'nonSemantic-violet-background-muted',\n        },\n      },\n    },\n    cyan: {\n      emphasis: {\n        high: {\n          color: 'nonSemantic-white-content-primary',\n          backgroundColor: 'nonSemantic-cyan-background-strong',\n        },\n        low: {\n          color: 'nonSemantic-cyan-content-primary',\n          backgroundColor: 'nonSemantic-cyan-background-muted',\n        },\n      },\n    },\n    teal: {\n      emphasis: {\n        high: {\n          color: 'nonSemantic-white-content-primary',\n          backgroundColor: 'nonSemantic-teal-background-strong',\n        },\n        low: {\n          color: 'nonSemantic-teal-content-primary',\n          backgroundColor: 'nonSemantic-teal-background-muted',\n        },\n      },\n    },\n    aquamarine: {\n      emphasis: {\n        high: {\n          color: 'nonSemantic-white-content-primary',\n          backgroundColor: 'nonSemantic-aquamarine-background-strong',\n        },\n        low: {\n          color: 'nonSemantic-aquamarine-content-primary',\n          backgroundColor: 'nonSemantic-aquamarine-background-muted',\n        },\n      },\n    },\n    emerald: {\n      emphasis: {\n        high: {\n          color: 'nonSemantic-white-content-primary',\n          backgroundColor: 'nonSemantic-emerald-background-strong',\n        },\n        low: {\n          color: 'nonSemantic-emerald-content-primary',\n          backgroundColor: 'nonSemantic-emerald-background-muted',\n        },\n      },\n    },\n  },\n  innerElements: {\n    image: {\n      w: '100%',\n      h: '100%',\n    },\n  },\n} satisfies AvatarConfig;\n","import type { AvatarProps } from '../Avatar.props';\nimport { defaultConfig } from '../Avatar.styles';\n\nimport { mergeConfigWithCustom } from '@/services';\nimport type { BaseProps } from '@/types/BaseProps';\n\ntype AvatarStylesBuilder = {\n  container: BaseProps;\n  image: BaseProps;\n};\n\nexport const stylesBuilder = ({\n  custom,\n  variant,\n}: {\n  custom: AvatarProps['custom'];\n  variant: Required<\n    Pick<AvatarProps, 'appearance' | 'emphasis' | 'shape' | 'size'>\n  >;\n}): AvatarStylesBuilder => {\n  const {\n    appearance: appearanceStyles,\n    shape: shapeStyles,\n    size: sizeStyles,\n    innerElements: { image },\n    ...restContainerStyles\n  } = mergeConfigWithCustom({ defaultConfig, custom });\n  const { appearance, emphasis, shape, size } = variant;\n\n  return {\n    container: {\n      ...appearanceStyles[appearance].emphasis[emphasis],\n      ...shapeStyles[shape],\n      ...sizeStyles[size],\n      ...restContainerStyles,\n    },\n    image,\n  };\n};\n","import { FC, useMemo } from 'react';\n\nimport type { AvatarProps } from './Avatar.props';\nimport { stylesBuilder } from './stylesBuilder';\n\nimport { tet } from '@/tetrisly';\nimport type { MarginProps } from '@/types/MarginProps';\n\nexport const Avatar: FC<AvatarProps & MarginProps> = ({\n  appearance = 'blue',\n  emphasis = 'low',\n  shape = 'rounded',\n  size = 'medium',\n  custom,\n  initials,\n  img,\n  ...restProps\n}) => {\n  const styles = useMemo(\n    () =>\n      stylesBuilder({\n        custom,\n        variant: { appearance, emphasis, shape, size },\n      }),\n    [custom, appearance, emphasis, shape, size],\n  );\n\n  return (\n    <tet.div {...styles.container} data-testid=\"avatar\" {...restProps}>\n      {img ? (\n        <tet.img {...styles.image} data-testid=\"avatar-image\" {...img} />\n      ) : (\n        initials\n      )}\n    </tet.div>\n  );\n};\n"],"names":["defaultConfig","stylesBuilder","custom","variant","appearanceStyles","shapeStyles","sizeStyles","image","restContainerStyles","mergeConfigWithCustom","appearance","emphasis","shape","size","Avatar","initials","img","restProps","styles","useMemo","jsx","tet"],"mappings":"4IAsBO,MAAMA,EAAgB,CAC3B,SAAU,SACV,SAAU,WACV,QAAS,OACT,WAAY,SACZ,eAAgB,SAChB,MAAO,CACL,QAAS,CACP,aAAc,MAChB,EACA,OAAQ,CACN,aAAc,OAChB,CACF,EACA,KAAM,CACJ,MAAO,CACL,EAAG,QACH,EAAG,QACH,KAAM,YACR,EACA,OAAQ,CACN,EAAG,SACH,EAAG,SACH,KAAM,aACR,EACA,MAAO,CACL,EAAG,QACH,EAAG,QACH,KAAM,YACR,EACA,OAAQ,CACN,EAAG,SACH,EAAG,SACH,KAAM,oBACR,EACA,UAAW,CACT,EAAG,UACH,EAAG,UACH,KAAM,oBACR,CACF,EACA,WAAY,CACV,MAAO,CACL,SAAU,CACR,KAAM,CAAC,EACP,IAAK,CAAC,CACR,CACF,EACA,KAAM,CACJ,SAAU,CACR,KAAM,CACJ,MAAO,oCACP,gBAAiB,oCACnB,EACA,IAAK,CACH,MAAO,mCACP,gBAAiB,mCACnB,CACF,CACF,EACA,MAAO,CACL,SAAU,CACR,KAAM,CACJ,MAAO,oCACP,gBAAiB,qCACnB,EACA,IAAK,CACH,MAAO,oCACP,gBAAiB,oCACnB,CACF,CACF,EACA,KAAM,CACJ,SAAU,CACR,KAAM,CACJ,MAAO,oCACP,gBAAiB,oCACnB,EACA,IAAK,CACH,MAAO,mCACP,gBAAiB,mCACnB,CACF,CACF,EACA,IAAK,CACH,SAAU,CACR,KAAM,CACJ,MAAO,oCACP,gBAAiB,mCACnB,EACA,IAAK,CACH,MAAO,kCACP,gBAAiB,kCACnB,CACF,CACF,EACA,OAAQ,CACN,SAAU,CACR,KAAM,CACJ,MAAO,oCACP,gBAAiB,sCACnB,EACA,IAAK,CACH,MAAO,qCACP,gBAAiB,qCACnB,CACF,CACF,EACA,UAAW,CACT,SAAU,CACR,KAAM,CACJ,MAAO,oCACP,gBAAiB,yCACnB,EACA,IAAK,CACH,MAAO,wCACP,gBAAiB,wCACnB,CACF,CACF,EACA,QAAS,CACP,SAAU,CACR,KAAM,CACJ,MAAO,oCACP,gBAAiB,uCACnB,EACA,IAAK,CACH,MAAO,sCACP,gBAAiB,sCACnB,CACF,CACF,EACA,OAAQ,CACN,SAAU,CACR,KAAM,CACJ,MAAO,oCACP,gBAAiB,sCACnB,EACA,IAAK,CACH,MAAO,qCACP,gBAAiB,qCACnB,CACF,CACF,EACA,MAAO,CACL,SAAU,CACR,KAAM,CACJ,MAAO,oCACP,gBAAiB,qCACnB,EACA,IAAK,CACH,MAAO,oCACP,gBAAiB,oCACnB,CACF,CACF,EACA,OAAQ,CACN,SAAU,CACR,KAAM,CACJ,MAAO,oCACP,gBAAiB,sCACnB,EACA,IAAK,CACH,MAAO,qCACP,gBAAiB,qCACnB,CACF,CACF,EACA,KAAM,CACJ,SAAU,CACR,KAAM,CACJ,MAAO,oCACP,gBAAiB,oCACnB,EACA,IAAK,CACH,MAAO,mCACP,gBAAiB,mCACnB,CACF,CACF,EACA,KAAM,CACJ,SAAU,CACR,KAAM,CACJ,MAAO,oCACP,gBAAiB,oCACnB,EACA,IAAK,CACH,MAAO,mCACP,gBAAiB,mCACnB,CACF,CACF,EACA,WAAY,CACV,SAAU,CACR,KAAM,CACJ,MAAO,oCACP,gBAAiB,0CACnB,EACA,IAAK,CACH,MAAO,yCACP,gBAAiB,yCACnB,CACF,CACF,EACA,QAAS,CACP,SAAU,CACR,KAAM,CACJ,MAAO,oCACP,gBAAiB,uCACnB,EACA,IAAK,CACH,MAAO,sCACP,gBAAiB,sCACnB,CACF,CACF,CACF,EACA,cAAe,CACb,MAAO,CACL,EAAG,OACH,EAAG,MACL,CACF,CACF,EC1OaC,EAAgB,CAAC,CAC5B,OAAAC,EACA,QAAAC,CACF,IAK2B,CACnB,KAAA,CACJ,WAAYC,EACZ,MAAOC,EACP,KAAMC,EACN,cAAe,CAAE,MAAAC,CAAM,EACvB,GAAGC,CACD,EAAAC,EAAsB,CAAE,cAAAT,EAAe,OAAAE,CAAQ,CAAA,EAC7C,CAAE,WAAAQ,EAAY,SAAAC,EAAU,MAAAC,EAAO,KAAAC,GAASV,EAEvC,MAAA,CACL,UAAW,CACT,GAAGC,EAAiBM,CAAU,EAAE,SAASC,CAAQ,EACjD,GAAGN,EAAYO,CAAK,EACpB,GAAGN,EAAWO,CAAI,EAClB,GAAGL,CACL,EACA,MAAAD,CAAA,CAEJ,EC9BOO,EAAA,CAAA,CAA+C,WAAAJ,EAAA,OACvC,SAAAC,EAAA,MACF,MAAAC,EAAA,UACH,KAAAC,EAAA,SACD,OAAAX,EACP,SAAAa,EACA,IAAAC,EACA,GAAAC,CAEF,IAAA,CACE,MAAAC,EAAAC,EAAA,QAAe,IAAAlB,EAAA,CAEG,OAAAC,EACZ,QAAA,CAAA,WAAAQ,EAAA,SAAAC,EAAA,MAAAC,EAAA,KAAAC,CAAA,CAC6C,CAAA,EAC9C,CAAAX,EAAAQ,EAAAC,EAAAC,EAAAC,CAAA,CACuC,EAG5C,OAAAO,MAAAC,EAAA,IAAA,CAAA,GAAAH,EAAA,UAAA,cAAA,SAAA,GAAAD,EAAA,SAAAD,EAAAI,MAAAC,EAAA,IAAA,CAAA,GAAAH,EAAA,MAAA,cAAA,eAAA,GAAAF,CAAA,CAAA,EAAAD,CAAA,CAAA,CASF"}