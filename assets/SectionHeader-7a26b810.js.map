{"version":3,"file":"SectionHeader-7a26b810.js","sources":["../../src/docs-components/common/SectionHeader.tsx"],"sourcesContent":["import { ReactNode } from 'react';\n\nimport { tet } from '@/tetrisly';\nimport { BaseProps } from '@/types';\n\ninterface SectionHeaderProps extends BaseProps {\n  variant: 'H1' | 'H2' | 'H3' | 'Hero';\n  inverted?: boolean;\n  children?: ReactNode;\n  labels?: string[];\n  as?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n}\n\nexport const SectionHeader = ({\n  inverted,\n  variant,\n  labels,\n  children,\n  ...props\n}: SectionHeaderProps) => {\n  const label = labels ? (\n    <tet.div display=\"flex\" gap=\"8px\">\n      {labels.map((l, i) =>\n        i !== 0 ? (\n          <>\n            <tet.span>Â·</tet.span>\n            <tet.span>{l}</tet.span>\n          </>\n        ) : (\n          <tet.span>{l}</tet.span>\n        ),\n      )}\n    </tet.div>\n  ) : (\n    children\n  );\n  if (variant === 'Hero') {\n    return (\n      <tet.h1\n        text=\"header-4xLarge\"\n        px=\"1000\"\n        py=\"500\"\n        color={inverted ? 'content-primary-inverted' : 'content-primary'}\n        {...(props as BaseProps)}\n      >\n        {label}\n      </tet.h1>\n    );\n  }\n  if (variant === 'H1') {\n    return (\n      <tet.div px=\"1000\">\n        <tet.h2\n          text=\"header-3xLarge\"\n          color={inverted ? 'content-primary-inverted' : 'content-primary'}\n          {...(props as BaseProps)}\n        >\n          {label}\n        </tet.h2>\n      </tet.div>\n    );\n  }\n  if (variant === 'H2') {\n    return (\n      <tet.div\n        display=\"flex\"\n        borderBottomWidth=\"1px\"\n        borderBottomColor={\n          inverted ? 'border-neutral-strong' : 'border-default'\n        }\n      >\n        <tet.h3\n          text=\"body-large\"\n          color={inverted ? 'content-secondary-inverted' : 'content-secondary'}\n          {...(props as BaseProps)}\n        >\n          {label}\n        </tet.h3>\n      </tet.div>\n    );\n  }\n  if (variant === 'H3') {\n    return (\n      <tet.h4\n        text=\"body-medium\"\n        color=\"content-secondary\"\n        {...(props as BaseProps)}\n      >\n        {label}\n      </tet.h4>\n    );\n  }\n  return null;\n};\n"],"names":["SectionHeader","inverted","variant","labels","children","props","label","jsx","tet","l","i","jsxs","Fragment"],"mappings":"0DAaO,MAAAA,EAAA,CAAA,CAAuB,SAAAC,EAC5B,QAAAC,EACA,OAAAC,EACA,SAAAC,EACA,GAAAC,CAEF,IAAA,CACE,MAAAC,EAAAH,EAAAI,MAAAC,EAAA,IAAA,CAAA,QAAA,OAAA,IAAA,MAAA,SAAAL,EAAA,IAEY,CAAAM,EAAAC,IAAAA,IAAA,EAAAC,OAAAC,EAAAA,SAAA,CAAA,SAAA,CAGFL,EAAAA,IAAAC,EAAA,KAAA,CAAA,SAAA,GAAA,CAAA,EAAWD,EAAAA,IAAAC,EAAA,KAAA,CAAA,SAAAC,CAAA,CAAA,CACE,CAAA,CAAA,EAAAF,EAAAA,IAAAC,EAAA,KAAA,CAAA,SAAAC,EAAA,CAGF,CAAA,CAAA,EAAAL,EAOrB,OAAAF,IAAA,OACEK,EAAA,IACEC,EAAA,GAAK,CAAJ,KAAA,iBACM,GAAA,OACF,GAAA,MACA,MAAAP,EAAA,2BAAA,kBAC4C,GAAAI,EAC1C,SAAAC,CAEJ,CAAA,EAIPJ,IAAA,KACEK,EAAAA,IAAAC,EAAA,IAAA,CAAA,GAAA,OAAA,SAAAD,EAAA,IAEIC,EAAA,GAAK,CAAJ,KAAA,iBACM,MAAAP,EAAA,2BAAA,kBAC0C,GAAAI,EAC1C,SAAAC,CAEJ,CAAA,CAAA,CAAA,EAKTJ,IAAA,KACEK,EAAA,IACEC,EAAA,IAAK,CAAJ,QAAA,OACS,kBAAA,MACU,kBAAAP,EAAA,wBAAA,iBAEqB,SAAAM,EAAA,IAGvCC,EAAA,GAAK,CAAJ,KAAA,aACM,MAAAP,EAAA,6BAAA,oBAC4C,GAAAI,EAC5C,SAAAC,CAEJ,CAAA,CACH,CAAA,EAINJ,IAAA,KACEK,EAAA,IACEC,EAAA,GAAK,CAAJ,KAAA,cACM,MAAA,oBACC,GAAAH,EACD,SAAAC,CAEJ,CAAA,EAIP,IACF"}