{"version":3,"file":"useTextInput-8b27a9a6.js","sources":["../../src/components/TextInput/TextInput.styles.ts","../../src/components/TextInput/stylesBuilder/stylesBuilder.ts","../../src/components/TextInput/useTextInput.ts"],"sourcesContent":["import { BaseProps } from '@/types/BaseProps';\n\nexport type TextInputConfig = {\n  innerElements?: {\n    input?: BaseProps;\n    icon?: BaseProps;\n    text?: BaseProps;\n    clearButton?: BaseProps;\n    beforeComponent?: {\n      spacing?: Partial<\n        Record<'Icon' | 'Avatar' | 'Prefix' | 'Dropdown', BaseProps>\n      >;\n    } & BaseProps;\n    afterComponent?: {\n      spacing?: Partial<\n        Record<\n          'Icon' | 'Sufix' | 'Button' | 'IconButton' | 'Dropdown',\n          BaseProps\n        >\n      >;\n    } & BaseProps;\n  };\n} & BaseProps;\n\nexport const defaultConfig = {\n  bg: '$color-interaction-background-formField',\n  display: 'flex',\n  alignItems: 'center',\n  w: '100%',\n  h: '$size-medium',\n  padding: '$space-component-padding-small $space-component-padding-large',\n  flexShrink: 0,\n  ringInset: true,\n  ring: '$border-width-small',\n  ringColor: {\n    _: '$color-interaction-border-neutral-normal',\n    hoverWithoutButton: '$color-interaction-border-hover',\n    alert: '$color-interaction-border-alert',\n  },\n  borderRadius: '$border-radius-large',\n  opacity: {\n    disabled: '$opacity-disabled',\n  },\n  outlineStyle: {\n    '&:has(input:focus)': 'solid',\n  },\n  outlineColor: {\n    focusWithin: '$color-interaction-focus-default',\n  },\n  outlineWidth: {\n    '&:has(input:focus)': '$border-width-focus',\n  },\n  outlineOffset: {\n    alert: '$border-width-focus',\n  },\n  transition: true,\n  transitionDuration: 50,\n  cursor: 'text',\n  pointerEvents: {\n    disabled: 'none',\n  },\n  innerElements: {\n    input: {\n      w: '100%',\n      h: '100%',\n      outline: 'none',\n      text: '$typo-body-medium',\n      color: {\n        placeholder: '$color-content-tertiary',\n      },\n      p: 0,\n      backgroundColor: 'transparent',\n      opacity: {\n        placeholder: 1,\n      },\n    },\n    icon: {\n      color: '$color-content-secondary',\n    },\n    text: {\n      text: '$typo-body-medium',\n      color: '$color-content-secondary',\n    },\n    clearButton: {\n      marginLeft: '$space-component-gap-small',\n    },\n    beforeComponent: {\n      spacing: {\n        Icon: {\n          marginLeft: '$space-component-padding-medium',\n          marginRight: '$space-component-padding-small',\n        },\n        Avatar: {\n          margin: '0 $space-component-padding-small',\n        },\n        Prefix: {\n          margin: '0 $space-component-padding-large',\n        },\n        Dropdown: {\n          marginLeft: '$space-component-padding-xSmall',\n          marginRight: '$space-component-padding-small',\n        },\n      },\n    },\n    afterComponent: {\n      spacing: {\n        Icon: {\n          marginLeft: '$space-component-padding-small',\n          marginRight: '$space-component-padding-large',\n        },\n        Sufix: {\n          marginLeft: '$space-component-padding-small',\n          marginRight: '$space-component-padding-large',\n        },\n        Button: {\n          marginLeft: '$space-component-padding-small',\n          marginRight: '$space-component-padding-xSmall',\n        },\n        IconButton: {\n          marginLeft: '$space-component-padding-small',\n          marginRight: '$space-component-padding-xSmall',\n        },\n        Dropdown: {\n          marginLeft: '$space-component-padding-small',\n          marginRight: '$space-component-padding-xSmall',\n        },\n      },\n    },\n  },\n} satisfies TextInputConfig;\n","import { TextInputConfig, defaultConfig } from '../TextInput.styles';\n\nimport { mergeConfigWithCustom } from '@/services/mergeConfigWithCustom/mergeConfigWithCutom';\nimport { BaseProps } from '@/types/BaseProps';\n\ntype TextInputStylesBuilder = {\n  container: BaseProps;\n  input: BaseProps;\n  icon: BaseProps;\n  text: BaseProps;\n  clearButton: BaseProps;\n  beforeComponent: BaseProps;\n  afterComponent: BaseProps;\n};\n\nexport const stylesBuilder = (\n  custom?: TextInputConfig,\n  beforeComponentType?: 'Icon' | 'Avatar' | 'Prefix' | 'Dropdown',\n  afterComponentType?: 'Icon' | 'Sufix' | 'Button' | 'IconButton' | 'Dropdown',\n): TextInputStylesBuilder => {\n  const {\n    innerElements: {\n      input,\n      icon,\n      text,\n      clearButton,\n      beforeComponent: {\n        spacing: beforeComponentSpacing,\n        ...beforeComponentStyles\n      },\n      afterComponent: {\n        spacing: afterComponentSpacing,\n        ...afterComponentStyles\n      },\n    },\n    ...container\n  } = mergeConfigWithCustom({\n    defaultConfig,\n    custom,\n  });\n\n  return {\n    container,\n    input,\n    icon,\n    text,\n    clearButton,\n    beforeComponent: {\n      ...beforeComponentStyles,\n      ...(beforeComponentType && beforeComponentSpacing[beforeComponentType]),\n    },\n    afterComponent: {\n      ...afterComponentStyles,\n      ...(afterComponentType && afterComponentSpacing[afterComponentType]),\n    },\n  };\n};\n","import {\n  ChangeEvent,\n  ChangeEventHandler,\n  MouseEventHandler,\n  useCallback,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\n\nimport { stylesBuilder } from './stylesBuilder';\nimport { TextInputProps } from './TextInput.props';\n\nimport { extractInputProps } from '@/services';\n\nexport const useTextInput = ({\n  custom,\n  beforeComponent,\n  afterComponent,\n  onChange,\n  ...restProps\n}: Omit<TextInputProps, 'type' | 'state' | 'value' | 'hasClearButton'>) => {\n  const [innerValue, setInnerValue] = useState('');\n  const styles = useMemo(\n    () => stylesBuilder(custom, beforeComponent?.type, afterComponent?.type),\n    [afterComponent?.type, beforeComponent?.type, custom],\n  );\n  const [textInputProps, containerProps] = extractInputProps(restProps);\n\n  const containerRef = useRef<HTMLInputElement | null>(null);\n\n  const handleContainerClick: MouseEventHandler = useCallback(\n    (e) => {\n      if (e.target === containerRef.current) {\n        const input = containerRef.current?.querySelector('input');\n        input?.focus();\n      }\n    },\n    [containerRef],\n  );\n\n  const handleOnChange: ChangeEventHandler<HTMLInputElement> = useCallback(\n    (e) => {\n      setInnerValue(e.target.value);\n      onChange?.(e);\n    },\n    [onChange],\n  );\n\n  const handleOnClear: MouseEventHandler<HTMLButtonElement> =\n    useCallback(() => {\n      setInnerValue('');\n      onChange?.({\n        target: { value: '' },\n      } as ChangeEvent<HTMLInputElement>);\n    }, [onChange]);\n  return {\n    innerValue,\n    styles,\n    textInputProps,\n    containerProps,\n    containerRef,\n    handleContainerClick,\n    handleOnChange,\n    handleOnClear,\n  };\n};\n"],"names":["defaultConfig","stylesBuilder","custom","beforeComponentType","afterComponentType","input","icon","text","clearButton","beforeComponentSpacing","beforeComponentStyles","afterComponentSpacing","afterComponentStyles","container","mergeConfigWithCustom","useTextInput","beforeComponent","afterComponent","onChange","restProps","innerValue","setInnerValue","useState","styles","useMemo","textInputProps","containerProps","extractInputProps","containerRef","useRef","handleContainerClick","useCallback","e","_a","handleOnChange","handleOnClear"],"mappings":"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"}