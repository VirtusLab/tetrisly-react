{"version":3,"file":"IconButton-1239ad4b.js","sources":["../../src/components/IconButton/IconButton.styles.ts","../../src/components/IconButton/IconButton.tsx"],"sourcesContent":["import { ButtonConfig } from '../Button/Button.styles';\n\nconst size = {\n  small: {\n    w: 'small',\n    h: 'small',\n    px: 'unset',\n    hasDropdownIndicator: {\n      w: 'xLarge',\n      pr: 'unset',\n    },\n    hasBeforeIcon: {\n      pl: 'unset',\n    },\n    hasAfterIcon: {\n      pr: 'unset',\n    },\n  },\n  medium: {\n    w: 'medium',\n    h: 'medium',\n    px: 'unset',\n    hasDropdownIndicator: {\n      w: '2xLarge',\n      pr: 'unset',\n    },\n    hasBeforeIcon: {\n      pl: 'unset',\n    },\n    hasAfterIcon: {\n      pr: 'unset',\n    },\n  },\n  large: {\n    w: 'large',\n    h: 'large',\n    px: 'unset',\n    hasDropdownIndicator: {\n      h: '3xLarge',\n      pr: 'unset',\n    },\n    hasBeforeIcon: {\n      pl: 'unset',\n    },\n    hasAfterIcon: {\n      pr: 'unset',\n    },\n  },\n};\n\nconst config = {\n  p: 'component-padding-null',\n  gap: 'component-gap-xSmall',\n  borderRadius: 'large',\n};\n\nexport const defaultConfig = {\n  default: {\n    ...config,\n    size,\n  },\n  ghost: {\n    ...config,\n    size,\n  },\n  bare: {\n    ...config,\n    size: {\n      medium: size.medium,\n      large: size.medium,\n    },\n  },\n} satisfies ButtonConfig;\n","import { FC } from 'react';\n\nimport { IconButtonProps } from './IconButton.props';\nimport { defaultConfig } from './IconButton.styles';\nimport { Button, ButtonProps } from '../Button';\n\nimport { mergeConfigWithCustom } from '@/services';\nimport { MarginProps } from '@/types';\n\nconst mapperIconButtonPropsToButtonProps = ({\n  children,\n  ...props\n}: IconButtonProps): ButtonProps => {\n  const appearance =\n    props.appearance === 'primary' ? 'secondary' : props.appearance;\n\n  return {\n    ...props,\n    appearance,\n    intent: props.intent,\n    beforeIcon: props.icon,\n    label: '',\n  } as ButtonProps;\n};\n\nexport const IconButton: FC<IconButtonProps & MarginProps> = (props) => {\n  const buttonProps = mapperIconButtonPropsToButtonProps(props);\n  const custom = mergeConfigWithCustom({\n    defaultConfig,\n    custom: buttonProps.custom,\n  });\n  return <Button {...buttonProps} custom={custom} />;\n};\n"],"names":["size","config","defaultConfig","mapperIconButtonPropsToButtonProps","children","props","appearance","IconButton","buttonProps","custom","mergeConfigWithCustom","jsx","Button"],"mappings":"sIAEA,MAAMA,EAAO,CACX,MAAO,CACL,EAAG,QACH,EAAG,QACH,GAAI,QACJ,qBAAsB,CACpB,EAAG,SACH,GAAI,OACN,EACA,cAAe,CACb,GAAI,OACN,EACA,aAAc,CACZ,GAAI,OACN,CACF,EACA,OAAQ,CACN,EAAG,SACH,EAAG,SACH,GAAI,QACJ,qBAAsB,CACpB,EAAG,UACH,GAAI,OACN,EACA,cAAe,CACb,GAAI,OACN,EACA,aAAc,CACZ,GAAI,OACN,CACF,EACA,MAAO,CACL,EAAG,QACH,EAAG,QACH,GAAI,QACJ,qBAAsB,CACpB,EAAG,UACH,GAAI,OACN,EACA,cAAe,CACb,GAAI,OACN,EACA,aAAc,CACZ,GAAI,OACN,CACF,CACF,EAEMC,EAAS,CACb,EAAG,yBACH,IAAK,uBACL,aAAc,OAChB,EAEaC,EAAgB,CAC3B,QAAS,CACP,GAAGD,EACH,KAAAD,CACF,EACA,MAAO,CACL,GAAGC,EACH,KAAAD,CACF,EACA,KAAM,CACJ,GAAGC,EACH,KAAM,CACJ,OAAQD,EAAK,OACb,MAAOA,EAAK,MACd,CACF,CACF,EC/DAG,EAAA,CAAA,CAA4C,SAAAC,EAC1C,GAAAC,CAEF,IAAA,CACE,MAAAC,EAAAD,EAAA,aAAA,UAAA,YAAAA,EAAA,WAGA,MAAA,CAAO,GAAAA,EACF,WAAAC,EACH,OAAAD,EAAA,OACc,WAAAA,EAAA,KACI,MAAA,EACX,CAEX,EAEOE,EAAAF,GAAA,CACL,MAAAG,EAAAL,EAAAE,CAAA,EACAI,EAAAC,EAAA,CAAqC,cAAAR,EACnC,OAAAM,EAAA,MACoB,CAAA,EAEtB,OAAAG,EAAAA,IAAAC,EAAA,CAAA,GAAAJ,EAAA,OAAAC,CAAA,CAAA,CACF"}