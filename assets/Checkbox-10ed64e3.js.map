{"version":3,"file":"Checkbox-10ed64e3.js","sources":["../../src/components/Checkbox/hooks/useIndeterminate.ts","../../src/components/Checkbox/Checkbox.styles.ts","../../src/components/Checkbox/stylesBuilder/stylesBuilder.ts","../../src/components/Checkbox/Checkbox.tsx"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\nexport const useIndeterminate = (isIndeterminate: boolean) => {\n  const checkboxRef = useRef<HTMLInputElement | null>(null);\n\n  useEffect(() => {\n    if (checkboxRef.current !== null) {\n      checkboxRef.current.indeterminate = isIndeterminate;\n    }\n  }, [checkboxRef, isIndeterminate]);\n\n  return checkboxRef;\n};\n","import { SystemProps } from '@xstyled/styled-components';\n\nimport { HelperTextConfig } from '../HelperText/HelperText.styles';\n\nimport { BaseProps } from '@/types/BaseProps';\n\nexport type CheckboxConfig = {\n  innerElements?: {\n    input?: SystemProps;\n    checkboxContainer?: BaseProps;\n    checkboxIcon?: BaseProps;\n    label?: BaseProps;\n    helperText?: HelperTextConfig;\n  };\n} & BaseProps;\n\nexport const defaultConfig = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'flex-start',\n  gap: '$space-component-gap-xSmall',\n  minWidth: '$size-3xSmall',\n  minHeight: '$size-3xSmall',\n  color: '$color-content-primary',\n  opacity: {\n    disabled: '$opacity-disabled',\n  },\n  pointerEvents: {\n    disabled: 'none',\n  },\n  innerElements: {\n    checkboxContainer: {\n      position: 'relative',\n      cursor: 'pointer',\n    },\n    input: {\n      appearance: 'none',\n      display: 'block',\n      w: '$size-3xSmall',\n      h: '$size-3xSmall',\n      pointerEvents: 'none',\n      backgroundColor: {\n        _: '$color-interaction-background-formField',\n        checked: {\n          _: '$color-interaction-default-normal',\n          hover: '$color-interaction-default-hover',\n        },\n        indeterminate: {\n          _: '$color-interaction-default-normal',\n          hover: '$color-interaction-default-hover',\n        },\n      },\n      borderRadius: '$border-radius-medium',\n      boxShadow: '0 0 #0000',\n      ring: '$border-width-focus',\n      ringInset: true,\n      ringColor: {\n        _: '$color-interaction-border-neutral-normal',\n        hover: '$color-interaction-border-hover',\n        checked: {\n          _: '$color-interaction-ghost-normal',\n          hover: '$color-interaction-ghost-normal',\n        },\n        alert: {\n          _: '$color-interaction-border-alert',\n          hover: '$color-interaction-border-alert',\n          checked: '$color-interaction-ghost-normal',\n        },\n        indeterminate: 'transparent',\n      },\n      outlineStyle: {\n        focusWithin: 'solid',\n      },\n      outlineColor: {\n        focusWithin: '$color-interaction-focus-default',\n      },\n      outlineWidth: {\n        focusWithin: '$border-width-focus',\n      },\n      outlineOffset: {\n        focusWithin: '$border-width-small',\n      },\n      transition: true,\n      transitionDuration: 200,\n    },\n    checkboxIcon: {\n      position: 'absolute',\n      color: '$color-interaction-inverted-normal',\n      w: '$size-3xSmall',\n      h: '$size-3xSmall',\n      left: 0,\n      top: 0,\n    },\n    label: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      gap: '$space-component-gap-small',\n      cursor: 'pointer',\n      color: '$color-content-primary',\n      text: '$typo-body-medium',\n    },\n    helperText: {\n      paddingLeft: '$space-component-padding-2xLarge',\n    },\n  },\n} satisfies CheckboxConfig;\n\nexport const checkboxStyles = {\n  defaultConfig,\n};\n","import { SystemProps } from '@xstyled/styled-components';\n\nimport { CheckboxConfig, defaultConfig } from '../Checkbox.styles';\n\nimport { mergeConfigWithCustom } from '@/services';\nimport { BaseProps } from '@/types/BaseProps';\n\ntype CheckboxStylesBuilder = {\n  container: BaseProps;\n  input: SystemProps;\n  checkboxContainer: BaseProps;\n  checkboxIcon: BaseProps;\n  label: BaseProps;\n  helperText: BaseProps;\n};\n\nexport const stylesBuilder = (\n  custom?: CheckboxConfig,\n): CheckboxStylesBuilder => {\n  const {\n    innerElements: {\n      input,\n      checkboxContainer,\n      checkboxIcon,\n      label,\n      helperText,\n    },\n    ...container\n  } = mergeConfigWithCustom({ defaultConfig, custom });\n\n  return {\n    container,\n    input,\n    checkboxContainer,\n    checkboxIcon,\n    label,\n    helperText,\n  };\n};\n","import { Icon } from '@virtuslab/tetrisly-icons';\nimport styled from '@xstyled/styled-components';\nimport { forwardRef, useCallback, useId, useMemo } from 'react';\n\nimport type { CheckboxProps } from './Checkbox.props';\nimport { useIndeterminate } from './hooks';\nimport { stylesBuilder } from './stylesBuilder';\nimport { HelperText } from '../HelperText';\n\nimport { extractInputProps } from '@/services';\nimport { tet } from '@/tetrisly';\nimport { MarginProps } from '@/types/MarginProps';\n\nexport const CheckboxContainer = styled(tet.div)`\n  input + div > #checkmark {\n    display: none;\n    pointer-events: none;\n  }\n\n  input:checked + div > #checkmark {\n    display: block;\n  }\n`;\n\nexport const Checkbox = forwardRef<\n  HTMLInputElement,\n  CheckboxProps & MarginProps\n>(\n  (\n    {\n      isChecked,\n      isIndeterminate = false,\n      state,\n      label,\n      helperText,\n      custom,\n      onChange,\n      ...restProps\n    },\n    checkboxForwardRef,\n  ) => {\n    const styles = useMemo(() => stylesBuilder(custom), [custom]);\n    const checkboxId = useId();\n    const checkboxInternalRef = useIndeterminate(isIndeterminate);\n\n    const [checkboxProps, containerProps] = extractInputProps(restProps);\n\n    const checkboxRef = useCallback(\n      (instance: HTMLInputElement | null) => {\n        checkboxInternalRef.current = instance;\n        if (typeof checkboxForwardRef === 'function') {\n          checkboxForwardRef(instance);\n        } else if (checkboxForwardRef) {\n          // eslint-disable-next-line no-param-reassign\n          checkboxForwardRef.current = instance;\n        }\n      },\n      [checkboxForwardRef, checkboxInternalRef],\n    );\n\n    const handleInputChange = useCallback(() => {\n      if (!label) {\n        checkboxInternalRef.current?.click();\n        checkboxInternalRef.current?.focus();\n      }\n    }, [checkboxInternalRef, label]);\n\n    if (\n      (onChange === undefined && isChecked !== undefined) ||\n      (onChange !== undefined && isChecked === undefined)\n    ) {\n      console.warn(\n        'Checkbox: onChange and isChecked have to be either both provided or both not provided',\n      );\n    }\n\n    const input = (\n      <CheckboxContainer\n        {...styles.checkboxContainer}\n        data-testid=\"checkbox-checkboxContainer\"\n      >\n        <tet.input\n          {...styles.input}\n          type=\"checkbox\"\n          ref={checkboxRef}\n          checked={isChecked && !isIndeterminate}\n          onChange={onChange}\n          disabled={state === 'disabled'}\n          data-state={state}\n          id={checkboxId}\n          data-testid=\"checkbox-input\"\n          {...checkboxProps}\n        />\n        <tet.div\n          {...styles.checkboxIcon}\n          onClick={handleInputChange}\n          data-testid=\"checkbox-checkboxIcon\"\n        >\n          {isIndeterminate && <Icon name=\"16-minus\" />}\n          <Icon name=\"16-check\" id=\"checkmark\" />\n        </tet.div>\n      </CheckboxContainer>\n    );\n\n    return (\n      <tet.div\n        {...styles.container}\n        data-state={state}\n        data-testid=\"checkbox\"\n        {...containerProps}\n      >\n        {label ? (\n          <tet.label\n            {...styles.label}\n            htmlFor={checkboxId}\n            data-testid=\"checkbox-label\"\n          >\n            {input}\n            {label}\n          </tet.label>\n        ) : (\n          input\n        )}\n        {!!helperText && (\n          <HelperText\n            custom={styles.helperText}\n            intent={state === 'alert' ? 'alert' : 'none'}\n            {...helperText}\n            data-testid=\"checkbox-helperText\"\n          />\n        )}\n      </tet.div>\n    );\n  },\n);\n"],"names":["useIndeterminate","isIndeterminate","checkboxRef","useRef","useEffect","defaultConfig","stylesBuilder","custom","input","checkboxContainer","checkboxIcon","label","helperText","container","mergeConfigWithCustom","CheckboxContainer","styled","tet","Checkbox","forwardRef","isChecked","state","onChange","restProps","checkboxForwardRef","styles","useMemo","checkboxId","useId","checkboxInternalRef","checkboxProps","containerProps","extractInputProps","useCallback","instance","handleInputChange","_a","_b","jsxs","jsx","Icon","HelperText"],"mappings":"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"}