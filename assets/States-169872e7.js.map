{"version":3,"file":"States-169872e7.js","sources":["../../src/docs-components/common/States.tsx"],"sourcesContent":["import type {\n  FlexBasisProps,\n  GapProps,\n  WidthProps,\n} from '@xstyled/styled-components';\nimport type { FC } from 'react';\n\nimport { tet } from '@/tetrisly';\n\ntype StatesProps = {\n  states: string[] | readonly string[];\n  gap?: GapProps['gap'];\n  itemWidth?: WidthProps['w'];\n  flexBasis?: FlexBasisProps['flexBasis'];\n};\n\nexport const State: FC<\n  Pick<StatesProps, 'itemWidth' | 'flexBasis'> & { state: string }\n> = ({ state, itemWidth, flexBasis }) => (\n  <tet.div w={itemWidth} flexShrink=\"0\" flexBasis={flexBasis} flexGrow=\"1\">\n    <tet.span text=\"$typo-body-medium\">\n      <tet.mark\n        borderRadius=\"$border-radius-small\"\n        bg=\"$color-nonSemantic-orange-background-onSubtle\"\n        px=\"$space-component-padding-2xSmall\"\n        color=\"$color-content-primary\"\n      >\n        {state}\n      </tet.mark>\n    </tet.span>\n  </tet.div>\n);\n\nexport const States: FC<StatesProps> = ({\n  states,\n  gap,\n  itemWidth,\n  flexBasis,\n}) => (\n  <tet.div display=\"flex\" gap={gap} py=\"$dimension-300\">\n    {states.map((state) => (\n      <State\n        key={state}\n        state={state}\n        itemWidth={itemWidth}\n        flexBasis={flexBasis}\n      />\n    ))}\n  </tet.div>\n);\n"],"names":["State","state","itemWidth","flexBasis","jsx","tet","States","states","gap"],"mappings":"iGAgBO,MAAAA,EAAA,CAAA,CAAA,MAAAC,EAAA,UAAAC,EAAA,UAAAC,CAAA,IAAAC,EAAA,IAAAC,EAAA,IAAA,CAAA,EAAAH,EAAA,WAAA,IAAA,UAAAC,EAAA,SAAA,IAAA,SAAAC,EAAA,IAAAC,EAAA,KAAA,CAAA,KAAA,oBAAA,SAAAD,EAAA,IAKDC,EAAA,KAAK,CAAJ,aAAA,uBACc,GAAA,gDACV,GAAA,mCACA,MAAA,yBACG,SAAAJ,CAEL,CACH,CAAA,CAAA,CAAA,CAAA,EAKCK,EAAA,CAAA,CAAiC,OAAAC,EACtC,IAAAC,EACA,UAAAN,EACA,UAAAC,CAEF,IAAAC,EAAA,IAAAC,EAAA,IAAA,CAAA,QAAA,OAAA,IAAAG,EAAA,GAAA,iBAAA,SAAAD,EAAA,IAAAN,GAAAG,EAAA,IAGMJ,EAAC,CAAA,MAAAC,EAEC,UAAAC,EACA,UAAAC,CACA,EAAAF,CACF,CAAA,EAAA"}