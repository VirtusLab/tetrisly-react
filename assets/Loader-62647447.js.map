{"version":3,"file":"Loader-62647447.js","sources":["../../src/components/Loader/AnimatedProgress.tsx","../../src/components/Loader/Loader.styles.ts","../../src/components/Loader/stylesBuilder/stylesBuilder.ts","../../src/components/Loader/Loader.tsx"],"sourcesContent":["import styled, { keyframes } from '@xstyled/styled-components';\n\nimport { tet } from '@/tetrisly';\n\nconst animationCircle = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst animationBar = keyframes`\n  0% {\n    transform: translate(-50%, 0px);\n  }\n  100% {\n    transform: translate(150%, 0px);\n  }\n`;\n\nexport const AnimatedProgress = styled(tet.path)<{\n  shape: string;\n}>`\n  aspect-ratio: 1;\n  transform-origin: center center;\n  animation: ${({ shape }) =>\n      shape === 'circle' ? animationCircle : animationBar}\n    1.4s infinite linear;\n`;\n","import { ThemeColor } from '@xstyled/styled-components';\nimport type { Property } from 'csstype';\n\nimport type { LoaderAppearance, LoaderShape, LoaderSize } from './types';\n\nimport { Theme } from '@/theme';\nimport { BaseProps } from '@/types/BaseProps';\n\nexport type SVGProps = Omit<\n  BaseProps,\n  | 'opacity'\n  | 'display'\n  | 'order'\n  | 'cursor'\n  | 'pointerEvents'\n  | 'overflow'\n  | 'visibility'\n  | 'fill'\n  | 'transform'\n  | 'rotate'\n  | 'scale'\n  | 'stroke'\n  | 'fontFamily'\n  | 'fontSize'\n  | 'fontStyle'\n  | 'fontStyle'\n  | 'fontVariant'\n  | 'fontWeight'\n  | 'letterSpacing'\n  | 'textDecoration'\n> & {\n  fill?: ThemeColor<Theme> | Property.Fill;\n  strokeWidth?: Property.StrokeWidth<string | number>;\n  strokeLinecap?: 'inherit' | 'round' | 'butt' | 'square';\n};\n\nexport type LoaderConfig = {\n  shape?: Partial<\n    Record<LoaderShape, { size?: Partial<Record<LoaderSize, SVGProps>> }>\n  >;\n  innerElements?: {\n    base?: {\n      appearance?: Partial<Record<LoaderAppearance, BaseProps>>;\n    } & SVGProps;\n    progress?: {\n      appearance?: Partial<Record<LoaderAppearance, BaseProps>>;\n    } & SVGProps;\n  };\n} & BaseProps;\n\nexport const defaultConfig = {\n  fill: 'none',\n  borderRadius: 'large',\n  shape: {\n    circle: {\n      size: {\n        large: {\n          w: 48,\n          h: 48,\n          strokeWidth: '2',\n        },\n        medium: {\n          w: 32,\n          h: 32,\n          strokeWidth: '2',\n        },\n        small: {\n          w: 20,\n          h: 20,\n          strokeWidth: '2',\n        },\n      },\n    },\n    bar: {\n      size: {\n        large: {\n          w: 128,\n          h: 8,\n          strokeWidth: '8',\n        },\n        medium: {\n          w: 128,\n          h: 6,\n          strokeWidth: '6',\n        },\n        small: {\n          w: 128,\n          h: 4,\n          strokeWidth: '4',\n        },\n      },\n    },\n  },\n  innerElements: {\n    base: {\n      appearance: {\n        primary: {\n          stroke: 'interaction-neutral-subtle-normal',\n        },\n        inverted: {\n          stroke: 'interaction-inverted-normal',\n        },\n        white: {\n          stroke: 'interaction-inverted-normal',\n          opacity: 0.4,\n        },\n        greyscale: {\n          stroke: 'interaction-neutral-subtle-normal',\n        },\n      },\n    },\n    progress: {\n      strokeLinecap: 'round',\n      appearance: {\n        primary: {\n          stroke: 'interaction-default-normal',\n        },\n        inverted: {\n          stroke: 'interaction-default-normal',\n        },\n        white: {\n          stroke: 'interaction-inverted-normal',\n        },\n        greyscale: {\n          stroke: 'interaction-neutral-normal',\n        },\n      },\n    },\n  },\n} satisfies LoaderConfig;\n","import { LoaderProps } from '../Loader.props';\nimport { defaultConfig, SVGProps } from '../Loader.styles';\n\nimport { mergeConfigWithCustom } from '@/services';\n\ntype StylesBuilderProps = Omit<Required<LoaderProps>, 'custom' | 'progress'> & {\n  custom: LoaderProps['custom'];\n  progress: LoaderProps['progress'];\n};\n\ntype LoaderStylesBuilder = {\n  container: SVGProps;\n  base: SVGProps;\n  progress: SVGProps;\n};\n\nconst ANIMATED_PROGRESS_VALUE = 0.4;\n\nconst polarToCartesian = (\n  centerX: number,\n  centerY: number,\n  radius: number,\n  angleInDegrees: number,\n) => {\n  const angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0;\n\n  return {\n    x: centerX + radius * Math.cos(angleInRadians),\n    y: centerY + radius * Math.sin(angleInRadians),\n  };\n};\n\nconst describeArc = (\n  x: number,\n  y: number,\n  radius: number,\n  startAngle: number,\n  endAngle: number,\n) => {\n  const start = polarToCartesian(x, y, radius, endAngle);\n  const end = polarToCartesian(x, y, radius, startAngle);\n  const largeArcFlag = endAngle - startAngle <= 180 ? '0' : '1';\n\n  const d = [\n    'M',\n    start.x,\n    start.y,\n    'A',\n    radius,\n    radius,\n    0,\n    largeArcFlag,\n    0,\n    end.x,\n    end.y,\n  ].join(' ');\n\n  return d;\n};\n\nexport const stylesBuilder = ({\n  custom,\n  ...props\n}: StylesBuilderProps): LoaderStylesBuilder => {\n  const config = mergeConfigWithCustom({ defaultConfig, custom });\n\n  const {\n    shape,\n    innerElements: { base, progress },\n    ...restContainerStyles\n  } = config;\n\n  const sizeStyles = shape[props.shape].size[props.size];\n  const { w, h, ...restSizeStyles } = sizeStyles;\n  const containerSizeStyles = {\n    ...sizeStyles,\n    viewBox: `0 0 ${w} ${h}`,\n  };\n\n  const progressValue = Math.min(\n    Math.max(props.progress ?? ANIMATED_PROGRESS_VALUE, 0),\n    1,\n  );\n\n  const basePathStyles = {\n    d:\n      props.shape === 'circle'\n        ? describeArc(w / 2, w / 2, w / 2 - 3, 0, 359.99)\n        : `M 0 ${h / 2} H ${w}`,\n  };\n\n  const progressPathStyles = {\n    d:\n      props.shape === 'circle'\n        ? describeArc(w / 2, w / 2, w / 2 - 3, 0, 359.99 * progressValue)\n        : `M 0 ${h / 2} H ${progressValue * w}`,\n  };\n\n  const { appearance: baseAppearanceStyles, ...restBaseStyles } = base;\n\n  const { appearance: progressAppearanceStyles, ...restProgressStyles } =\n    progress;\n\n  return {\n    container: {\n      ...containerSizeStyles,\n      ...restContainerStyles,\n    },\n    base: {\n      ...basePathStyles,\n      ...restSizeStyles,\n      ...baseAppearanceStyles[props.appearance],\n      ...restBaseStyles,\n    },\n    progress: {\n      ...progressPathStyles,\n      ...restSizeStyles,\n      ...progressAppearanceStyles[props.appearance],\n      ...restProgressStyles,\n    },\n  };\n};\n","import { FC, useMemo } from 'react';\n\nimport { AnimatedProgress } from './AnimatedProgress';\nimport { LoaderProps } from './Loader.props';\nimport { stylesBuilder } from './stylesBuilder';\n\nimport { tet } from '@/tetrisly';\nimport { MarginProps } from '@/types';\n\nexport const Loader: FC<LoaderProps & MarginProps> = ({\n  appearance = 'primary',\n  progress,\n  shape,\n  size = 'medium',\n  custom,\n  ...restProps\n}) => {\n  const styles = useMemo(\n    () =>\n      stylesBuilder({\n        appearance,\n        progress,\n        shape,\n        size,\n        custom,\n      }),\n    [appearance, progress, shape, size, custom],\n  );\n\n  return (\n    <tet.svg\n      {...styles.container}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      data-testid=\"loader\"\n      {...restProps}\n    >\n      <tet.path {...styles.base} data-testid=\"loader-base\" />\n      {progress === undefined ? (\n        <AnimatedProgress\n          shape={shape}\n          {...styles.progress}\n          data-testid=\"loader-progress\"\n        />\n      ) : (\n        <tet.path {...styles.progress} data-testid=\"loader-progress\" />\n      )}\n    </tet.svg>\n  );\n};\n"],"names":["animationCircle","keyframes","animationBar","AnimatedProgress","styled","tet","shape","defaultConfig","ANIMATED_PROGRESS_VALUE","polarToCartesian","centerX","centerY","radius","angleInDegrees","angleInRadians","describeArc","x","y","startAngle","endAngle","start","end","largeArcFlag","stylesBuilder","custom","props","config","mergeConfigWithCustom","base","progress","restContainerStyles","sizeStyles","w","h","restSizeStyles","containerSizeStyles","progressValue","basePathStyles","progressPathStyles","baseAppearanceStyles","restBaseStyles","progressAppearanceStyles","restProgressStyles","Loader","appearance","size","restProps","styles","useMemo","jsxs","jsx"],"mappings":"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"}