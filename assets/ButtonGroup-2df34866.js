import{j as l}from"./jsx-runtime-ffb262ed.js";import{r as o}from"./index-76fb7be0.js";import{m}from"./mergeConfigWithCustom-aec35d44.js";import{B as c}from"./Button-62f4c63b.js";import{t as p}from"./TetrislyProvider-679426f7.js";const d={display:"inline-flex",justifyContent:"center",alignItems:"center",button:{color:{_:"$color-action-neutral-normal",hover:"$color-action-neutral-hover"},backgroundColor:{_:"$color-action-inverted-normal",active:"$color-action-ghost-active",hover:"$color-action-ghost-hover",selected:"$color-action-ghost-selected"},ringColor:"$color-action-outline-normal",size:{medium:{h:"$size-medium",px:"$space-component-padding-large"},small:{h:"$size-small",px:"$space-component-padding-medium"}},borderRadius:{first:"$border-radius-large 0px 0px $border-radius-large",last:"0px $border-radius-large $border-radius-large 0px"},transition:!0,transitionDuration:200}},f=({size:t,custom:n})=>{const{button:r,...s}=m({defaultConfig:d,custom:n}),a={...r,...r.size[t]};return{container:s,button:a}},i=({size:t="medium",children:n,custom:r,...s})=>{const a=o.useMemo(()=>f({size:t,custom:r}),[r,t]);o.Children.forEach(n,e=>{o.isValidElement(e)&&(e==null?void 0:e.type)!==i.Item&&console.error("You should use only ButtonGroup.Item as a child of a CheckboxGroup component.")});const u=o.Children.map(n,e=>o.isValidElement(e)?o.cloneElement(e,{...a.button}):e);return l.jsx(p.span,{"data-testid":"button-group",...a.container,...s,children:u})};i.Item=c;try{i.displayName="ButtonGroup",i.__docgenInfo={description:"",displayName:"ButtonGroup",props:{size:{defaultValue:{value:"medium"},description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"medium"'},{value:'"small"'}]}},custom:{defaultValue:null,description:"",name:"custom",required:!1,type:{name:"ButtonGroupConfig"}}}}}catch{}export{i as B};
