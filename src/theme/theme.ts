import { th } from "@xstyled/system";

import { Theme } from "./Theme.interface";

const tempTheme: Omit<Theme, "ringWidths"> = {
  colors: {
    "coolGrey--4": "hsla(208, 24%, 14%, 1)",
    "coolGrey--3": "hsla(208, 15%, 18%, 1)",
    "coolGrey--2": "hsla(210, 12%, 26%, 1)",
    "coolGrey--1": "hsla(210, 12%, 33%, 1)",
    "coolGrey-0": "hsla(215, 12%, 38%, 1)",
    "coolGrey-+1": "hsla(211, 12%, 55%, 1)",
    "coolGrey-+2": "hsla(211, 12%, 66%, 1)",
    "coolGrey-+3": "hsla(210, 17%, 84%, 1)",
    "coolGrey-+4": "hsla(207, 16%, 89%, 1)",
    "coolGrey-+5": "hsla(210, 16%, 93%, 1)",
    "coolGrey-+6": "hsla(204, 20%, 95%, 1)",
    "coolGrey-+7": "hsla(210, 25%, 97%, 1)",
    "coolGrey-+8": "hsla(210, 33%, 99%, 1)",
    "coolGreyA--4": "hsla(207, 47%, 7%, 0.93)",
    "coolGreyA--3": "hsla(208, 43%, 7%, 0.88)",
    "coolGreyA--2": "hsla(212, 27%, 14%, 0.86)",
    "coolGreyA--1": "hsla(211, 30%, 16%, 0.8)",
    "coolGreyA-0": "hsla(215, 40%, 16%, 0.74)",
    "coolGreyA-+1": "hsla(210, 50%, 19%, 0.56)",
    "coolGreyA-+2": "hsla(211, 66%, 15%, 0.4)",
    "coolGreyA-+3": "hsla(212, 68%, 20%, 0.2)",
    "coolGreyA-+4": "hsla(205, 89%, 14%, 0.13)",
    "coolGreyA-+5": "hsla(214, 64%, 17%, 0.09)",
    "coolGreyA-+6": "hsla(206, 95%, 16%, 0.06)",
    "coolGreyA-+7": "hsla(213, 100%, 18%, 0.04)",
    "coolGreyA-+8": "hsla(216, 67%, 37%, 0.02)",
    "neutralGrey--4": "hsla(0, 0%, 13%, 1)",
    "neutralGrey--3": "hsla(0, 0%, 18%, 1)",
    "neutralGrey--2": "hsla(0, 0%, 25%, 1)",
    "neutralGrey--1": "hsla(0, 0%, 32%, 1)",
    "neutralGrey-0": "hsla(0, 0%, 37%, 1)",
    "neutralGrey-+1": "hsla(0, 0%, 54%, 1)",
    "neutralGrey-+2": "hsla(0, 0%, 65%, 1)",
    "neutralGrey-+3": "hsla(0, 0%, 84%, 1)",
    "neutralGrey-+4": "hsla(0, 0%, 89%, 1)",
    "neutralGrey-+5": "hsla(0, 0%, 92%, 1)",
    "neutralGrey-+6": "hsla(0, 0%, 95%, 1)",
    "neutralGrey-+7": "hsla(0, 0%, 97%, 1)",
    "neutralGrey-+8": "hsla(0, 0%, 99%, 1)",
    "neutralGreyA--4": "hsla(0, 0%, 7%, 0.93)",
    "neutralGreyA--3": "hsla(0, 0%, 6%, 0.88)",
    "neutralGreyA--2": "hsla(0, 0%, 13%, 0.86)",
    "neutralGreyA--1": "hsla(0, 0%, 15%, 0.8)",
    "neutralGreyA-0": "hsla(240, 1%, 15%, 0.74)",
    "neutralGreyA-+1": "hsla(0, 0%, 17%, 0.56)",
    "neutralGreyA-+2": "hsla(0, 0%, 13%, 0.4)",
    "neutralGreyA-+3": "hsla(0, 0%, 18%, 0.2)",
    "neutralGreyA-+4": "hsla(0, 0%, 12%, 0.13)",
    "neutralGreyA-+5": "hsla(0, 0%, 11%, 0.09)",
    "neutralGreyA-+6": "hsla(0, 0%, 13%, 0.06)",
    "neutralGreyA-+7": "hsla(0, 0%, 18%, 0.04)",
    "neutralGreyA-+8": "hsla(0, 0%, 32%, 0.02)",
    "warmGrey--4": "hsla(60, 4%, 13%, 1)",
    "warmGrey--3": "hsla(60, 4%, 18%, 1)",
    "warmGrey--2": "hsla(60, 5%, 24%, 1)",
    "warmGrey--1": "hsla(60, 4%, 31%, 1)",
    "warmGrey-0": "hsla(60, 4%, 36%, 1)",
    "warmGrey-+1": "hsla(60, 3%, 53%, 1)",
    "warmGrey-+2": "hsla(60, 5%, 64%, 1)",
    "warmGrey-+3": "hsla(60, 8%, 84%, 1)",
    "warmGrey-+4": "hsla(60, 8%, 89%, 1)",
    "warmGrey-+5": "hsla(60, 9%, 91%, 1)",
    "warmGrey-+6": "hsla(60, 6%, 95%, 1)",
    "warmGrey-+7": "hsla(60, 6%, 97%, 1)",
    "warmGrey-+8": "hsla(60, 4%, 99%, 1)",
    "warmGreyA--4": "hsla(60, 6%, 7%, 0.93)",
    "warmGreyA--3": "hsla(60, 15%, 6%, 0.88)",
    "warmGreyA--2": "hsla(60, 12%, 12%, 0.86)",
    "warmGreyA--1": "hsla(60, 10%, 14%, 0.8)",
    "warmGreyA-0": "hsla(60, 15%, 13%, 0.74)",
    "warmGreyA-+1": "hsla(60, 15%, 16%, 0.56)",
    "warmGreyA-+2": "hsla(60, 41%, 11%, 0.4)",
    "warmGreyA-+3": "hsla(60, 36%, 18%, 0.2)",
    "warmGreyA-+4": "hsla(60, 43%, 14%, 0.13)",
    "warmGreyA-+5": "hsla(60, 89%, 7%, 0.09)",
    "warmGreyA-+6": "hsla(60, 54%, 12%, 0.06)",
    "warmGreyA-+7": "hsla(60, 3%, 18%, 0.04)",
    "warmGreyA-+8": "hsla(0, 0%, 32%, 0.02)",
    "whiteA--12": "hsla(0, 0%, 100%, 0.02)",
    "whiteA--11": "hsla(0, 0%, 100%, 0.03)",
    "whiteA--10": "hsla(0, 0%, 100%, 0.05)",
    "whiteA--9": "hsla(0, 0%, 100%, 0.08)",
    "whiteA--8": "hsla(0, 0%, 100%, 0.1)",
    "whiteA--7": "hsla(0, 0%, 100%, 0.12)",
    "whiteA--6": "hsla(0, 0%, 100%, 0.24)",
    "whiteA--5": "hsla(0, 0%, 100%, 0.4)",
    "whiteA--4": "hsla(0, 0%, 100%, 0.64)",
    "whiteA--3": "hsla(0, 0%, 100%, 0.68)",
    "whiteA--2": "hsla(0, 0%, 100%, 0.72)",
    "whiteA--1": "hsla(0, 0%, 100%, 0.82)",
    "whiteA-0": "hsla(0, 0%, 100%, 1)",
    "red--4": "hsla(0, 70%, 17%, 1)",
    "red--3": "hsla(0, 55%, 28%, 1)",
    "red--2": "hsla(0, 54%, 38%, 1)",
    "red--1": "hsla(0, 50%, 42%, 1)",
    "red-0": "hsla(0, 58%, 49%, 1)",
    "red-+1": "hsla(0, 85%, 67%, 1)",
    "red-+2": "hsla(0, 82%, 76%, 1)",
    "red-+3": "hsla(0, 88%, 90%, 1)",
    "red-+4": "hsla(0, 85%, 92%, 1)",
    "red-+5": "hsla(0, 92%, 95%, 1)",
    "red-+6": "hsla(0, 100%, 96%, 1)",
    "red-+7": "hsla(0, 88%, 98%, 1)",
    "red-+8": "hsla(0, 100%, 99%, 1)",
    "raspberry--4": "hsla(340, 70%, 16%, 1)",
    "raspberry--3": "hsla(340, 55%, 26%, 1)",
    "raspberry--2": "hsla(340, 54%, 37%, 1)",
    "raspberry--1": "hsla(340, 50%, 41%, 1)",
    "raspberry-0": "hsla(340, 60%, 47%, 1)",
    "raspberry-+1": "hsla(340, 71%, 64%, 1)",
    "raspberry-+2": "hsla(340, 71%, 74%, 1)",
    "raspberry-+3": "hsla(340, 75%, 89%, 1)",
    "raspberry-+4": "hsla(339, 83%, 91%, 1)",
    "raspberry-+5": "hsla(342, 87%, 94%, 1)",
    "raspberry-+6": "hsla(341, 80%, 96%, 1)",
    "raspberry-+7": "hsla(340, 82%, 98%, 1)",
    "raspberry-+8": "hsla(336, 100%, 99%, 1)",
    "magenta--4": "hsla(320, 71%, 15%, 1)",
    "magenta--3": "hsla(321, 55%, 26%, 1)",
    "magenta--2": "hsla(320, 54%, 35%, 1)",
    "magenta--1": "hsla(320, 50%, 39%, 1)",
    "magenta-0": "hsla(320, 58%, 44%, 1)",
    "magenta-+1": "hsla(320, 66%, 62%, 1)",
    "magenta-+2": "hsla(320, 72%, 73%, 1)",
    "magenta-+3": "hsla(320, 74%, 88%, 1)",
    "magenta-+4": "hsla(321, 83%, 91%, 1)",
    "magenta-+5": "hsla(321, 87%, 94%, 1)",
    "magenta-+6": "hsla(319, 80%, 96%, 1)",
    "magenta-+7": "hsla(320, 82%, 98%, 1)",
    "magenta-+8": "hsla(324, 100%, 99%, 1)",
    "purple--4": "hsla(320, 71%, 15%, 1)",
    "purple--3": "hsla(290, 55%, 26%, 1)",
    "purple--2": "hsla(290, 54%, 35%, 1)",
    "purple--1": "hsla(290, 50%, 39%, 1)",
    "purple-0": "hsla(290, 50%, 45%, 1)",
    "purple-+1": "hsla(288, 62%, 63%, 1)",
    "purple-+2": "hsla(288, 71%, 74%, 1)",
    "purple-+3": "hsla(296, 74%, 88%, 1)",
    "purple-+4": "hsla(291, 83%, 91%, 1)",
    "purple-+5": "hsla(288, 87%, 94%, 1)",
    "purple-+6": "hsla(289, 80%, 96%, 1)",
    "purple-+7": "hsla(288, 100%, 98%, 1)",
    "purple-+8": "hsla(288, 100%, 99%, 1)",
    "grape--4": "hsla(270, 70%, 18%, 1)",
    "grape--3": "hsla(270, 56%, 30%, 1)",
    "grape--2": "hsla(270, 54%, 40%, 1)",
    "grape--1": "hsla(270, 50%, 45%, 1)",
    "grape-0": "hsla(270, 50%, 50%, 1)",
    "grape-+1": "hsla(270, 74%, 68%, 1)",
    "grape-+2": "hsla(270, 81%, 77%, 1)",
    "grape-+3": "hsla(269, 84%, 90%, 1)",
    "grape-+4": "hsla(270, 100%, 93%, 1)",
    "grape-+5": "hsla(270, 100%, 95%, 1)",
    "grape-+6": "hsla(264, 100%, 97%, 1)",
    "grape-+7": "hsla(270, 100%, 98%, 1)",
    "grape-+8": "hsla(264, 100%, 99%, 1)",
    "violet--4": "hsla(250, 69%, 23%, 1)",
    "violet--3": "hsla(250, 55%, 35%, 1)",
    "violet--2": "hsla(250, 54%, 48%, 1)",
    "violet--1": "hsla(250, 60%, 53%, 1)",
    "violet-0": "hsla(250, 54%, 55%, 1)",
    "violet-+1": "hsla(250, 80%, 72%, 1)",
    "violet-+2": "hsla(246, 92%, 81%, 1)",
    "violet-+3": "hsla(249, 100%, 92%, 1)",
    "violet-+4": "hsla(246, 100%, 94%, 1)",
    "violet-+5": "hsla(249, 100%, 96%, 1)",
    "violet-+6": "hsla(252, 100%, 97%, 1)",
    "violet-+7": "hsla(252, 100%, 98%, 1)",
    "violet-+8": "hsla(252, 100%, 99%, 1)",
    "blue--4": "hsla(222, 91%, 19%, 1)",
    "blue--3": "hsla(222, 80%, 33%, 1)",
    "blue--2": "hsla(222, 73%, 44%, 1)",
    "blue--1": "hsla(222, 68%, 48%, 1)",
    "blue-0": "hsla(222, 66%, 51%, 1)",
    "blue-+1": "hsla(222, 87%, 68%, 1)",
    "blue-+2": "hsla(221, 93%, 77%, 1)",
    "blue-+3": "hsla(221, 100%, 90%, 1)",
    "blue-+4": "hsla(221, 100%, 92%, 1)",
    "blue-+5": "hsla(220, 100%, 95%, 1)",
    "blue-+6": "hsla(223, 100%, 96%, 1)",
    "blue-+7": "hsla(223, 100%, 98%, 1)",
    "blue-+8": "hsla(227, 100%, 99%, 1)",
    "cyan--4": "hsla(205, 100%, 13%, 1)",
    "cyan--3": "hsla(205, 80%, 24%, 1)",
    "cyan--2": "hsla(205, 73%, 32%, 1)",
    "cyan--1": "hsla(205, 71%, 36%, 1)",
    "cyan-0": "hsla(205, 92%, 38%, 1)",
    "cyan-+1": "hsla(210, 66%, 60%, 1)",
    "cyan-+2": "hsla(208, 87%, 72%, 1)",
    "cyan-+3": "hsla(208, 100%, 88%, 1)",
    "cyan-+4": "hsla(208, 100%, 90%, 1)",
    "cyan-+5": "hsla(207, 100%, 94%, 1)",
    "cyan-+6": "hsla(210, 100%, 96%, 1)",
    "cyan-+7": "hsla(204, 100%, 97%, 1)",
    "cyan-+8": "hsla(204, 100%, 99%, 1)",
    "teal--4": "hsla(194, 96%, 11%, 1)",
    "teal--3": "hsla(194, 80%, 20%, 1)",
    "teal--2": "hsla(194, 65%, 28%, 1)",
    "teal--1": "hsla(194, 68%, 31%, 1)",
    "teal-0": "hsla(194, 91%, 31%, 1)",
    "teal-+1": "hsla(196, 44%, 52%, 1)",
    "teal-+2": "hsla(197, 58%, 67%, 1)",
    "teal-+3": "hsla(193, 75%, 84%, 1)",
    "teal-+4": "hsla(193, 76%, 87%, 1)",
    "teal-+5": "hsla(196, 72%, 93%, 1)",
    "teal-+6": "hsla(195, 77%, 95%, 1)",
    "teal-+7": "hsla(196, 100%, 97%, 1)",
    "teal-+8": "hsla(192, 100%, 99%, 1)",
    "aquamarine--4": "hsla(170, 96%, 9%, 1)",
    "aquamarine--3": "hsla(172, 70%, 17%, 1)",
    "aquamarine--2": "hsla(172, 66%, 24%, 1)",
    "aquamarine--1": "hsla(170, 62%, 27%, 1)",
    "aquamarine-0": "hsla(170, 86%, 26%, 1)",
    "aquamarine-+1": "hsla(172, 46%, 44%, 1)",
    "aquamarine-+2": "hsla(173, 46%, 61%, 1)",
    "aquamarine-+3": "hsla(173, 49%, 83%, 1)",
    "aquamarine-+4": "hsla(172, 63%, 86%, 1)",
    "aquamarine-+5": "hsla(174, 61%, 91%, 1)",
    "aquamarine-+6": "hsla(172, 61%, 93%, 1)",
    "aquamarine-+7": "hsla(174, 50%, 96%, 1)",
    "aquamarine-+8": "hsla(180, 60%, 99%, 1)",
    "green--4": "hsla(152, 76%, 10%, 1)",
    "green--3": "hsla(152, 70%, 18%, 1)",
    "green--2": "hsla(152, 61%, 25%, 1)",
    "green--1": "hsla(152, 58%, 28%, 1)",
    "green-0": "hsla(150, 62%, 30%, 1)",
    "green-+1": "hsla(150, 38%, 47%, 1)",
    "green-+2": "hsla(148, 46%, 63%, 1)",
    "green-+3": "hsla(148, 51%, 84%, 1)",
    "green-+4": "hsla(148, 61%, 86%, 1)",
    "green-+5": "hsla(148, 70%, 91%, 1)",
    "green-+6": "hsla(148, 61%, 94%, 1)",
    "green-+7": "hsla(146, 47%, 97%, 1)",
    "green-+8": "hsla(140, 60%, 99%, 1)",
    "emerald--4": "hsla(122, 64%, 11%, 1)",
    "emerald--3": "hsla(122, 63%, 20%, 1)",
    "emerald--2": "hsla(122, 48%, 27%, 1)",
    "emerald--1": "hsla(120, 41%, 31%, 1)",
    "emerald-0": "hsla(120, 38%, 33%, 1)",
    "emerald-+1": "hsla(120, 32%, 49%, 1)",
    "emerald-+2": "hsla(120, 38%, 66%, 1)",
    "emerald-+3": "hsla(120, 50%, 85%, 1)",
    "emerald-+4": "hsla(120, 57%, 88%, 1)",
    "emerald-+5": "hsla(120, 56%, 92%, 1)",
    "emerald-+6": "hsla(120, 61%, 94%, 1)",
    "emerald-+7": "hsla(120, 47%, 97%, 1)",
    "emerald-+8": "hsla(120, 60%, 99%, 1)",
    "orange--4": "hsla(30, 78%, 16%, 1)",
    "orange--3": "hsla(30, 77%, 27%, 1)",
    "orange--2": "hsla(29, 70%, 37%, 1)",
    "orange--1": "hsla(30, 86%, 38%, 1)",
    "orange-0": "hsla(30, 90%, 59%, 1)",
    "orange-+1": "hsla(30, 90%, 64%, 1)",
    "orange-+2": "hsla(30, 99%, 72%, 1)",
    "orange-+3": "hsla(30, 100%, 83%, 1)",
    "orange-+4": "hsla(30, 91%, 87%, 1)",
    "orange-+5": "hsla(30, 100%, 91%, 1)",
    "orange-+6": "hsla(31, 100%, 94%, 1)",
    "orange-+7": "hsla(30, 100%, 96%, 1)",
    "orange-+8": "hsla(24, 100%, 99%, 1)",
    transparent: "hsla(0, 0%, 100%, 0)",
    "semantic-brand--4": th.color("blue--4"),
    "semantic-brand--3": th.color("blue--3"),
    "semantic-brand--2": th.color("blue--2"),
    "semantic-brand--1": th.color("blue--1"),
    "semantic-brand-0": th.color("blue-0"),
    "semantic-brand-+1": th.color("blue-+1"),
    "semantic-brand-+2": th.color("blue-+2"),
    "semantic-brand-+3": th.color("blue-+3"),
    "semantic-brand-+4": th.color("blue-+4"),
    "semantic-brand-+5": th.color("blue-+5"),
    "semantic-brand-+6": th.color("blue-+6"),
    "semantic-brand-+7": th.color("blue-+7"),
    "semantic-brand-+8": th.color("blue-+8"),
    "semantic-informative--4": th.color("blue--4"),
    "semantic-informative--3": th.color("blue--3"),
    "semantic-informative--2": th.color("blue--2"),
    "semantic-informative--1": th.color("blue--1"),
    "semantic-informative-0": th.color("blue-0"),
    "semantic-informative-+1": th.color("blue-+1"),
    "semantic-informative-+2": th.color("blue-+2"),
    "semantic-informative-+3": th.color("blue-+3"),
    "semantic-informative-+4": th.color("blue-+4"),
    "semantic-informative-+5": th.color("blue-+5"),
    "semantic-informative-+6": th.color("blue-+6"),
    "semantic-informative-+7": th.color("blue-+7"),
    "semantic-informative-+8": th.color("blue-+8"),
    "semantic-neutral--4": th.color("coolGrey--4"),
    "semantic-neutral--3": th.color("coolGrey--3"),
    "semantic-neutral--2": th.color("coolGrey--2"),
    "semantic-neutral--1": th.color("coolGrey--1"),
    "semantic-neutral-0": th.color("coolGrey-0"),
    "semantic-neutral-+1": th.color("coolGrey-+1"),
    "semantic-neutral-+2": th.color("coolGrey-+2"),
    "semantic-neutral-+3": th.color("coolGrey-+3"),
    "semantic-neutral-+4": th.color("coolGrey-+4"),
    "semantic-neutral-+5": th.color("coolGrey-+5"),
    "semantic-neutral-+6": th.color("coolGrey-+6"),
    "semantic-neutral-+7": th.color("coolGrey-+7"),
    "semantic-neutral-+8": th.color("coolGrey-+8"),
    "semantic-neutralA--4": th.color("coolGreyA--4"),
    "semantic-neutralA--3": th.color("coolGreyA--3"),
    "semantic-neutralA--2": th.color("coolGreyA--2"),
    "semantic-neutralA--1": th.color("coolGreyA--1"),
    "semantic-neutralA-0": th.color("coolGreyA-0"),
    "semantic-neutralA-+1": th.color("coolGreyA-+1"),
    "semantic-neutralA-+2": th.color("coolGreyA-+2"),
    "semantic-neutralA-+3": th.color("coolGreyA-+3"),
    "semantic-neutralA-+4": th.color("coolGreyA-+4"),
    "semantic-neutralA-+5": th.color("coolGreyA-+5"),
    "semantic-neutralA-+6": th.color("coolGreyA-+6"),
    "semantic-neutralA-+7": th.color("coolGreyA-+7"),
    "semantic-neutralA-+8": th.color("coolGreyA-+8"),
    "semantic-positive--4": th.color("green--4"),
    "semantic-positive--3": th.color("green--3"),
    "semantic-positive--2": th.color("green--2"),
    "semantic-positive--1": th.color("green--1"),
    "semantic-positive-0": th.color("green-0"),
    "semantic-positive-+1": th.color("green-+1"),
    "semantic-positive-+2": th.color("green-+2"),
    "semantic-positive-+3": th.color("green-+3"),
    "semantic-positive-+4": th.color("green-+4"),
    "semantic-positive-+5": th.color("green-+5"),
    "semantic-positive-+6": th.color("green-+6"),
    "semantic-positive-+7": th.color("green-+7"),
    "semantic-positive-+8": th.color("green-+8"),
    "semantic-warning--4": th.color("orange--4"),
    "semantic-warning--3": th.color("orange--3"),
    "semantic-warning--2": th.color("orange--2"),
    "semantic-warning--1": th.color("orange--1"),
    "semantic-warning-0": th.color("orange-0"),
    "semantic-warning-+1": th.color("orange-+1"),
    "semantic-warning-+2": th.color("orange-+2"),
    "semantic-warning-+3": th.color("orange-+3"),
    "semantic-warning-+4": th.color("orange-+4"),
    "semantic-warning-+5": th.color("orange-+5"),
    "semantic-warning-+6": th.color("orange-+6"),
    "semantic-warning-+7": th.color("orange-+7"),
    "semantic-warning-+8": th.color("orange-+8"),
    "semantic-negative--4": th.color("red--4"),
    "semantic-negative--3": th.color("red--3"),
    "semantic-negative--2": th.color("red--2"),
    "semantic-negative--1": th.color("red--1"),
    "semantic-negative-0": th.color("red-0"),
    "semantic-negative-+1": th.color("red-+1"),
    "semantic-negative-+2": th.color("red-+2"),
    "semantic-negative-+3": th.color("red-+3"),
    "semantic-negative-+4": th.color("red-+4"),
    "semantic-negative-+5": th.color("red-+5"),
    "semantic-negative-+6": th.color("red-+6"),
    "semantic-negative-+7": th.color("red-+7"),
    "semantic-negative-+8": th.color("red-+8"),
    "content-primary": th.color("semantic-neutral--3"),
    "content-secondary": th.color("semantic-neutral-0"),
    "content-tertiary": th.color("semantic-neutral-+1"),
    "content-disabled": th.color("semantic-neutral-+2"),
    "content-primary-inverted": th.color("whiteA-0"),
    "content-secondary-inverted": th.color("whiteA--4"),
    "content-tertiary-inverted": th.color("whiteA--5"),
    "content-disabled-inverted": th.color("whiteA--6"),
    "content-informative-secondary": th.color("semantic-informative-0"),
    "content-positive-secondary": th.color("semantic-positive-0"),
    "content-warning-secondary": th.color("semantic-warning-0"),
    "content-negative-secondary": th.color("semantic-negative-0"),
    "content-brand-secondary": th.color("semantic-brand-0"),
    "border-neutral-strong": th.color("semantic-neutral-0"),
    "border-informative-strong": th.color("semantic-informative-0"),
    "border-positive-strong": th.color("semantic-positive-0"),
    "border-warning-strong": th.color("semantic-warning-0"),
    "border-negative-strong": th.color("semantic-negative-0"),
    "border-brand-strong": th.color("semantic-brand-0"),
    "border-neutral-subtle": th.color("semantic-neutral-+3"),
    "border-informative-subtle": th.color("semantic-informative-+3"),
    "border-positive-subtle": th.color("semantic-positive-+3"),
    "border-warning-subtle": th.color("semantic-warning-+3"),
    "border-negative-subtle": th.color("semantic-negative-+3"),
    "border-brand-subtle": th.color("semantic-brand-+3"),
    "border-inverted": th.color("whiteA-0"),
    "border-default": th.color("semantic-neutral-+5"),
    "background-default": th.color("whiteA-0"),
    "background-inverted": th.color("semantic-neutral--3"),
    "background-neutral-strong": th.color("semantic-neutral-0"),
    "background-informative-strong": th.color("semantic-informative-0"),
    "background-positive-strong": th.color("semantic-positive-0"),
    "background-warning-strong": th.color("semantic-warning-0"),
    "background-negative-strong": th.color("semantic-negative-0"),
    "background-brand-strong": th.color("semantic-brand-0"),
    "background-neutral-subtle": th.color("semantic-neutral-+7"),
    "background-informative-subtle": th.color("semantic-informative-+7"),
    "background-positive-subtle": th.color("semantic-positive-+7"),
    "background-warning-subtle": th.color("semantic-warning-+7"),
    "background-negative-subtle": th.color("semantic-negative-+7"),
    "background-brand-subtle": th.color("semantic-brand-+7"),
    "background-neutral-surface": th.color("semantic-neutral-+8"),
    "background-informative-surface": th.color("semantic-informative-+8"),
    "background-positive-surface": th.color("semantic-positive-+8"),
    "background-warning-surface": th.color("semantic-warning-+8"),
    "background-negative-surface": th.color("semantic-negative-+8"),
    "background-brand-surface": th.color("semantic-brand-+8"),
    "interaction-background-dimmer": th.color("semantic-neutralA-0"),
    "action-primary-normal": th.color("semantic-brand-0"),
    "action-primary-hover": th.color("semantic-brand--2"),
    "action-primary-active": th.color("semantic-brand--3"),
    "action-primary-selected": th.color("semantic-brand--2"),
    "action-primary-subtle-normal": th.color("semantic-brand-+6"),
    "action-primary-subtle-hover": th.color("semantic-brand-+5"),
    "action-primary-subtle-active": th.color("semantic-brand-+3"),
    "action-primary-subtle-selected": th.color("semantic-brand-+5"),
    "action-neutral-normal": th.color("semantic-neutral--1"),
    "action-neutral-hover": th.color("semantic-neutral--2"),
    "action-neutral-active": th.color("semantic-neutral--3"),
    "action-neutral-selected": th.color("semantic-neutral--2"),
    "action-neutral-subtle-normal": th.color("semantic-neutral-+6"),
    "action-neutral-subtle-hover": th.color("semantic-neutral-+5"),
    "action-neutral-subtle-active": th.color("semantic-neutral-+3"),
    "action-neutral-subtle-selected": th.color("semantic-neutral-+5"),
    "action-success-normal": th.color("semantic-positive-0"),
    "action-success-hover": th.color("semantic-positive--2"),
    "action-success-active": th.color("semantic-positive--3"),
    "action-success-selected": th.color("semantic-positive--2"),
    "action-success-subtle-normal": th.color("semantic-positive-+6"),
    "action-success-subtle-hover": th.color("semantic-positive-+5"),
    "action-success-subtle-active": th.color("semantic-positive-+3"),
    "action-success-subtle-selected": th.color("semantic-positive-+5"),
    "action-destructive-normal": th.color("semantic-negative-0"),
    "action-destructive-hover": th.color("semantic-negative--2"),
    "action-destructive-active": th.color("semantic-negative--3"),
    "action-destructive-selected": th.color("semantic-negative--2"),
    "action-destructive-subtle-normal": th.color("semantic-negative-+6"),
    "action-destructive-subtle-hover": th.color("semantic-negative-+5"),
    "action-destructive-subtle-active": th.color("semantic-negative-+3"),
    "action-destructive-subtle-selected": th.color("semantic-negative-+5"),
    "action-ghost-normal": th.color("transparent"),
    "action-ghost-hover": th.color("semantic-neutralA-+6"),
    "action-ghost-active": th.color("semantic-neutralA-+5"),
    "action-ghost-selected": th.color("semantic-neutralA-+6"),
    "action-ghost-inverted-hover": th.color("whiteA--8"),
    "action-ghost-inverted-active": th.color("whiteA--7"),
    "action-ghost-inverted-selected": th.color("whiteA--8"),
    "action-ghost-destructive-hover": th.color("semantic-negative-+6"),
    "action-ghost-destructive-active": th.color("semantic-negative-+5"),
    "action-ghost-destructive-selected": th.color("semantic-negative-+6"),
    "action-outline-normal": th.color("semantic-neutral-+3"),
    "action-outline-hover": th.color("semantic-neutral-+2"),
    "action-outline-active": th.color("semantic-neutral-+1"),
    "action-outline-selected": th.color("semantic-neutral-+2"),
    "action-inverted-normal": th.color("whiteA-0"),
    "action-inverted-hover": th.color("whiteA--1"),
    "action-inverted-active": th.color("whiteA--2"),
    "action-inverted-selected": th.color("whiteA--1"),
    "action-reverseInverted-normal": th.color("semantic-neutralA--3"),
    "action-reverseInverted-hover": th.color("semantic-neutralA--1"),
    "action-reverseInverted-active": th.color("semantic-neutralA-0"),
    "action-reverseInverted-selected": th.color("semantic-neutralA--1"),
    "interaction-default-normal": th.color("blue-0"),
    "interaction-default-hover": th.color("blue--2"),
    "interaction-default-active": th.color("blue--3"),
    "interaction-default-selected": th.color("blue--2"),
    "interaction-default-subtle-normal": th.color("blue-+6"),
    "interaction-default-subtle-hover": th.color("blue-+5"),
    "interaction-default-subtle-active": th.color("blue-+3"),
    "interaction-default-subtle-selected": th.color("blue-+5"),
    "interaction-neutral-normal": th.color("semantic-neutral--1"),
    "interaction-neutral-hover": th.color("semantic-neutral--2"),
    "interaction-neutral-active": th.color("semantic-neutral--3"),
    "interaction-neutral-selected": th.color("semantic-neutral--2"),
    "interaction-neutral-subtle-normal": th.color("semantic-neutral-+6"),
    "interaction-neutral-subtle-hover": th.color("semantic-neutral-+5"),
    "interaction-neutral-subtle-active": th.color("semantic-neutral-+3"),
    "interaction-neutral-subtle-selected": th.color("semantic-neutral-+5"),
    "interaction-alert-normal": th.color("semantic-negative-0"),
    "interaction-alert-hover": th.color("semantic-negative--2"),
    "interaction-alert-active": th.color("semantic-negative--3"),
    "interaction-alert-selected": th.color("semantic-negative--2"),
    "interaction-alert-subtle-normal": th.color("semantic-negative-+6"),
    "interaction-alert-subtle-hover": th.color("semantic-negative-+5"),
    "interaction-alert-subtle-active": th.color("semantic-negative-+3"),
    "interaction-alert-subtle-selected": th.color("semantic-negative-+5"),
    "interaction-ghost-normal": th.color("transparent"),
    "interaction-ghost-hover": th.color("semantic-neutralA-+6"),
    "interaction-ghost-active": th.color("semantic-neutralA-+5"),
    "interaction-ghost-selected": th.color("semantic-neutralA-+6"),
    "interaction-ghost-inverted-hover": th.color("whiteA--8"),
    "interaction-ghost-inverted-normal": th.color("whiteA--7"),
    "interaction-ghost-inverted-selected": th.color("whiteA--8"),
    "interaction-ghost-destructive-hover": th.color("semantic-negative-+6"),
    "interaction-ghost-destructive-normal": th.color("semantic-negative-+5"),
    "interaction-ghost-destructive-selected": th.color("semantic-negative-+6"),
    "interaction-disabled-normal": th.color("semantic-neutral-+2"),
    "interaction-disabled-hover": th.color("semantic-neutral-+1"),
    "interaction-disabled-active": th.color("semantic-neutral-0"),
    "interaction-disabled-subtle-normal": th.color("semantic-neutral-+5"),
    "interaction-disabled-subtle-hover": th.color("semantic-neutral-+4"),
    "interaction-disabled-subtle-active": th.color("semantic-neutral-+3"),
    "interaction-border-normal": th.color("blue-+2"),
    "interaction-border-hover": th.color("blue-+1"),
    "interaction-border-active": th.color("blue--1"),
    "interaction-border-selected": th.color("blue-0"),
    "interaction-border-neutral-normal": th.color("semantic-neutral-+3"),
    "interaction-border-neutral-hover": th.color("semantic-neutral-+2"),
    "interaction-border-neutral-active": th.color("semantic-neutral-+1"),
    "interaction-border-neutral-selected": th.color("semantic-neutral-+2"),
    "interaction-border-alert": th.color("semantic-negative-+1"),
    "interaction-background-modal": th.color("background-default"),
    "interaction-background-modeless": th.color("background-default"),
    "interaction-background-modeless-inverted": th.color("background-inverted"),
    "interaction-background-sidepanel": th.color("background-default"),
    "interaction-background-formField": th.color("background-default"),
    "interaction-inverted-normal": th.color("whiteA-0"),
    "interaction-inverted-hover": th.color("whiteA--1"),
    "interaction-inverted-active": th.color("whiteA--2"),
    "interaction-inverted-selected": th.color("whiteA--1"),
    "interaction-focus-default": th.color("blue-+1"),
    "nonSemantic-grey-content-primary": th.color("semantic-neutral--3"),
    "nonSemantic-grey-background-strong": th.color("semantic-neutral-0"),
    "nonSemantic-grey-background-muted": th.color("semantic-neutral-+4"),
    "nonSemantic-grey-background-onSubtle": th.color("semantic-neutral-+5"),
    "nonSemantic-grey-background-surface": th.color("semantic-neutral-+8"),
    "nonSemantic-red-content-primary": th.color("red--3"),
    "nonSemantic-red-background-strong": th.color("red-0"),
    "nonSemantic-red-background-muted": th.color("red-+4"),
    "nonSemantic-red-background-onSubtle": th.color("red-+5"),
    "nonSemantic-red-background-surface": th.color("red-+8"),
    "nonSemantic-raspberry-content-primary": th.color("raspberry--3"),
    "nonSemantic-raspberry-background-strong": th.color("raspberry-0"),
    "nonSemantic-raspberry-background-muted": th.color("raspberry-+4"),
    "nonSemantic-raspberry-background-onSubtle": th.color("raspberry-+5"),
    "nonSemantic-raspberry-background-surface": th.color("raspberry-+8"),
    "nonSemantic-magenta-content-primary": th.color("magenta--3"),
    "nonSemantic-magenta-background-strong": th.color("magenta-0"),
    "nonSemantic-magenta-background-muted": th.color("magenta-+4"),
    "nonSemantic-magenta-background-onSubtle": th.color("magenta-+5"),
    "nonSemantic-magenta-background-surface": th.color("magenta-+8"),
    "nonSemantic-purple-content-primary": th.color("purple--3"),
    "nonSemantic-purple-background-strong": th.color("purple-0"),
    "nonSemantic-purple-background-muted": th.color("purple-+4"),
    "nonSemantic-purple-background-onSubtle": th.color("purple-+5"),
    "nonSemantic-purple-background-surface": th.color("purple-+8"),
    "nonSemantic-grape-content-primary": th.color("grape--3"),
    "nonSemantic-grape-background-strong": th.color("grape-0"),
    "nonSemantic-grape-background-muted": th.color("grape-+4"),
    "nonSemantic-grape-background-onSubtle": th.color("grape-+5"),
    "nonSemantic-grape-background-surface": th.color("grape-+8"),
    "nonSemantic-violet-content-primary": th.color("violet--3"),
    "nonSemantic-violet-background-strong": th.color("violet-0"),
    "nonSemantic-violet-background-muted": th.color("violet-+4"),
    "nonSemantic-violet-background-onSubtle": th.color("violet-+5"),
    "nonSemantic-violet-background-surface": th.color("violet-+8"),
    "nonSemantic-blue-content-primary": th.color("blue--3"),
    "nonSemantic-blue-background-strong": th.color("blue-0"),
    "nonSemantic-blue-background-muted": th.color("blue-+4"),
    "nonSemantic-blue-background-onSubtle": th.color("blue-+5"),
    "nonSemantic-blue-background-surface": th.color("blue-+8"),
    "nonSemantic-cyan-content-primary": th.color("cyan--3"),
    "nonSemantic-cyan-background-strong": th.color("cyan-0"),
    "nonSemantic-cyan-background-muted": th.color("cyan-+4"),
    "nonSemantic-cyan-background-onSubtle": th.color("cyan-+5"),
    "nonSemantic-cyan-background-surface": th.color("cyan-+8"),
    "nonSemantic-teal-content-primary": th.color("teal--3"),
    "nonSemantic-teal-background-strong": th.color("teal-0"),
    "nonSemantic-teal-background-muted": th.color("teal-+4"),
    "nonSemantic-teal-background-onSubtle": th.color("teal-+5"),
    "nonSemantic-teal-background-surface": th.color("teal-+8"),
    "nonSemantic-aquamarine-content-primary": th.color("aquamarine--3"),
    "nonSemantic-aquamarine-background-strong": th.color("aquamarine-0"),
    "nonSemantic-aquamarine-background-muted": th.color("aquamarine-+4"),
    "nonSemantic-aquamarine-background-onSubtle": th.color("aquamarine-+5"),
    "nonSemantic-aquamarine-background-surface": th.color("aquamarine-+8"),
    "nonSemantic-green-content-primary": th.color("green--3"),
    "nonSemantic-green-background-strong": th.color("green-0"),
    "nonSemantic-green-background-muted": th.color("green-+4"),
    "nonSemantic-green-background-onSubtle": th.color("green-+5"),
    "nonSemantic-green-background-surface": th.color("green-+8"),
    "nonSemantic-emerald-content-primary": th.color("emerald--3"),
    "nonSemantic-emerald-background-strong": th.color("emerald-0"),
    "nonSemantic-emerald-background-muted": th.color("emerald-+4"),
    "nonSemantic-emerald-background-onSubtle": th.color("emerald-+5"),
    "nonSemantic-emerald-background-surface": th.color("emerald-+8"),
    "border-defaultA": th.color("semantic-neutralA-+5"),
    "nonSemantic-orange-content-primary": th.color("orange--3"),
    "nonSemantic-orange-background-strong": th.color("orange-0"),
    "nonSemantic-orange-background-muted": th.color("orange-+4"),
    "nonSemantic-orange-background-onSubtle": th.color("orange-+5"),
    "nonSemantic-orange-background-surface": th.color("orange-+8"),
    "content-informative-primary": th.color("semantic-informative--3"),
    "content-positive-primary": th.color("semantic-positive--3"),
    "content-warning-primary": th.color("semantic-warning--3"),
    "content-negative-primary": th.color("semantic-negative--3"),
    "content-brand-primary": th.color("semantic-brand--3"),
    "background-neutral-muted": th.color("semantic-neutral-+4"),
    "background-neutral-onSubtle": th.color("semantic-neutral-+5"),
    "background-informative-muted": th.color("semantic-informative-+4"),
    "background-informative-onSubtle": th.color("semantic-informative-+5"),
    "background-positive-muted": th.color("semantic-positive-+4"),
    "background-positive-onSubtle": th.color("semantic-positive-+5"),
    "background-warning-muted": th.color("semantic-warning-+4"),
    "background-warning-onSubtle": th.color("semantic-warning-+5"),
    "background-negative-muted": th.color("semantic-negative-+4"),
    "background-negative-onSubtle": th.color("semantic-negative-+5"),
    "background-brand-muted": th.color("semantic-brand-+4"),
    "background-brand-onSubtle": th.color("semantic-brand-+5"),
    "nonSemantic-grey-content-secondary": th.color("semantic-neutral-0"),
    "nonSemantic-red-content-secondary": th.color("red-0"),
    "nonSemantic-raspberry-content-secondary": th.color("raspberry-0"),
    "nonSemantic-magenta-content-secondary": th.color("magenta-0"),
    "nonSemantic-purple-content-secondary": th.color("purple-0"),
    "nonSemantic-grape-content-secondary": th.color("grape-0"),
    "nonSemantic-violet-content-secondary": th.color("violet-0"),
    "nonSemantic-blue-content-secondary": th.color("blue-0"),
    "nonSemantic-cyan-content-secondary": th.color("cyan-0"),
    "nonSemantic-teal-content-secondary": th.color("teal-0"),
    "nonSemantic-aquamarine-content-secondary": th.color("aquamarine-0"),
    "nonSemantic-green-content-secondary": th.color("green-0"),
    "nonSemantic-emerald-content-secondary": th.color("emerald-0"),
    "nonSemantic-orange-content-secondary": th.color("orange-0"),
    "nonSemantic-grey-background-subtle": th.color("semantic-neutral-+7"),
    "nonSemantic-red-background-subtle": th.color("red-+7"),
    "nonSemantic-raspberry-background-subtle": th.color("raspberry-+7"),
    "nonSemantic-magenta-background-subtle": th.color("magenta-+7"),
    "nonSemantic-purple-background-subtle": th.color("purple-+7"),
    "nonSemantic-grape-background-subtle": th.color("grape-+7"),
    "nonSemantic-violet-background-subtle": th.color("violet-+7"),
    "nonSemantic-blue-background-subtle": th.color("blue-+7"),
    "nonSemantic-cyan-background-subtle": th.color("cyan-+7"),
    "nonSemantic-teal-background-subtle": th.color("teal-+7"),
    "nonSemantic-aquamarine-background-subtle": th.color("aquamarine-+7"),
    "nonSemantic-green-background-subtle": th.color("green-+7"),
    "nonSemantic-emerald-background-subtle": th.color("emerald-+7"),
    "nonSemantic-orange-background-subtle": th.color("orange-+7"),
    "nonSemantic-grey-border-default": th.color("semantic-neutral-+5"),
    "nonSemantic-grey-border-strong": th.color("semantic-neutral-0"),
    "nonSemantic-grey-border-subtle": th.color("semantic-neutral-+3"),
    "nonSemantic-red-border-default": th.color("red-+5"),
    "nonSemantic-red-border-strong": th.color("red-0"),
    "nonSemantic-red-border-subtle": th.color("red-+3"),
    "nonSemantic-raspberry-border-default": th.color("raspberry-+5"),
    "nonSemantic-raspberry-border-strong": th.color("raspberry-0"),
    "nonSemantic-raspberry-border-subtle": th.color("raspberry-+3"),
    "nonSemantic-magenta-border-default": th.color("magenta-+5"),
    "nonSemantic-magenta-border-strong": th.color("magenta-0"),
    "nonSemantic-magenta-border-subtle": th.color("magenta-+3"),
    "nonSemantic-purple-border-default": th.color("purple-+5"),
    "nonSemantic-purple-border-strong": th.color("purple-0"),
    "nonSemantic-purple-border-subtle": th.color("purple-+3"),
    "nonSemantic-grape-border-default": th.color("grape-+5"),
    "nonSemantic-grape-border-strong": th.color("grape-0"),
    "nonSemantic-grape-border-subtle": th.color("grape-+3"),
    "nonSemantic-violet-border-default": th.color("violet-+5"),
    "nonSemantic-violet-border-strong": th.color("violet-0"),
    "nonSemantic-violet-border-subtle": th.color("violet-+3"),
    "nonSemantic-blue-border-default": th.color("blue-+5"),
    "nonSemantic-blue-border-strong": th.color("blue-0"),
    "nonSemantic-blue-border-subtle": th.color("blue-+3"),
    "nonSemantic-cyan-border-default": th.color("cyan-+5"),
    "nonSemantic-cyan-border-strong": th.color("cyan-0"),
    "nonSemantic-cyan-border-subtle": th.color("cyan-+3"),
    "nonSemantic-teal-border-default": th.color("teal-+5"),
    "nonSemantic-teal-border-strong": th.color("teal-0"),
    "nonSemantic-teal-border-subtle": th.color("teal-+3"),
    "nonSemantic-aquamarine-border-default": th.color("aquamarine-+5"),
    "nonSemantic-aquamarine-border-strong": th.color("aquamarine-0"),
    "nonSemantic-aquamarine-border-subtle": th.color("aquamarine-+3"),
    "nonSemantic-green-border-default": th.color("green-+5"),
    "nonSemantic-green-border-strong": th.color("green-0"),
    "nonSemantic-green-border-subtle": th.color("green-+3"),
    "nonSemantic-emerald-border-default": th.color("emerald-+5"),
    "nonSemantic-emerald-border-strong": th.color("emerald-0"),
    "nonSemantic-emerald-border-subtle": th.color("emerald-+3"),
    "nonSemantic-orange-border-default": th.color("orange-+5"),
    "nonSemantic-orange-border-strong": th.color("orange-0"),
    "nonSemantic-orange-border-subtle": th.color("orange-+3"),
    "nonSemantic-white-content-primary": th.color("whiteA-0"),
    "nonSemantic-white-content-secondary": th.color("whiteA--4"),
    "nonSemantic-white-border-default": th.color("whiteA--5"),
    "nonSemantic-white-border-strong": th.color("whiteA-0"),
    "nonSemantic-white-border-subtle": th.color("whiteA--3"),
    "nonSemantic-white-background-strong": th.color("whiteA-0"),
    "nonSemantic-white-background-muted": th.color("whiteA--4"),
    "nonSemantic-white-background-onSubtle": th.color("whiteA--5"),
    "nonSemantic-white-background-subtle": th.color("whiteA--7"),
    "nonSemantic-white-background-surface": th.color("whiteA--8"),
  },
  radii: {
    "0": "0px",
    "25": "2px",
    "50": "4px",
    "100": "8px",
    "999": "50%",
    "150": "12px",
    small: th.radius("25"),
    medium: th.radius("50"),
    large: th.radius("100"),
    xLarge: th.radius("150"),
    full: th.radius("999"),
  },
  borderWidths: {
    "0": "0px",
    "100": "1px",
    "200": "2px",
    small: th.borderWidth("100"),
    focus: th.borderWidth("200"),
    medium: th.borderWidth("200"),
  },
  borderStyles: {
    none: "none",
    solid: "solid",
    dashed: "dashed solid",
  },
  sizes: {
    xLarge: th.space("800"),
    large: th.space("600"),
    medium: th.space("500"),
    small: th.space("400"),
    xSmall: th.space("300"),
    "2xSmall": th.space("250"),
    "3xSmall": th.space("200"),
  },
  space: {
    "0": "0px",
    "25": "2px",
    "50": "4px",
    "100": "8px",
    "150": "12px",
    "200": "16px",
    "300": "24px",
    "400": "32px",
    "600": "48px",
    "500": "40px",
    "250": "20px",
    "700": "56px",
    "800": "64px",
    "1000": "80px",
    "1200": "96px",
    "1500": "120px",
    "1600": "128px",
    "550": "44px",
    "component-gap-2xSmall": th.space("25"),
    "component-gap-xSmall": th.space("50"),
    "component-gap-small": th.space("100"),
    "component-gap-large": th.space("200"),
    "component-gap-2xLarge": th.space("400"),
    "component-padding-xSmall": th.space("50"),
    "component-padding-small": th.space("100"),
    "component-padding-medium": th.space("150"),
    "component-padding-large": th.space("200"),
    "component-padding-2xLarge": th.space("300"),
    "component-gap-medium": th.space("150"),
    "component-gap-null": th.space("0"),
    "component-gap-xLarge": th.space("300"),
    "component-padding-3xLarge": th.space("400"),
    "component-padding-4xLarge": th.space("500"),
    "component-padding-6xLarge": th.space("800"),
    "component-padding-2xSmall": th.space("25"),
    "component-padding-xLarge": th.space("250"),
    "component-padding-5xLarge": th.space("550"),
    "component-gap-3xLarge": th.space("550"),
    "component-padding-null": th.space("0"),
  },
  fonts: { primary: "Inter" },
  fontSizes: {
    "125": "10px",
    "150": "12px",
    "175": "14px",
    "200": "16px",
    "225": "18px",
    "300": "24px",
    "400": "32px",
    "500": "40px",
    "600": "48px",
  },
  fontWeights: {
    "400": "400",
    "450": "450",
    "600": "600",
  },
  letterSpacings: {
    "0": "0px",
    "100": "0.1px",
    "200": "0.2px",
  },
  lineHeights: {
    "scale-100": "1",
    "scale-150": "1.5",
    "scale-166": "1.66",
    "scale-200": "2",
    "value-200": "16px",
    "value-250": "20px",
    "value-300": "24px",
    "value-350": "28px",
    "value-400": "32px",
    "value-450": "36px",
    "value-550": "44px",
    "value-700": "56px",
    "value-800": "64px",
  },
  texts: {
    "normal-125": {
      fontFamily: "primary",
      fontSize: "125",
      lineHeight: "value-200",
      fontWeight: "400",
      letterSpacing: "200",
    },
    "normal-150": {
      fontFamily: "primary",
      fontSize: "150",
      lineHeight: "value-250",
      fontWeight: "400",
      letterSpacing: "200",
    },
    "normal-175": {
      fontFamily: "primary",
      fontSize: "175",
      lineHeight: "value-300",
      fontWeight: "400",
      letterSpacing: "200",
    },
    "normal-200": {
      fontFamily: "primary",
      fontSize: "200",
      lineHeight: "value-350",
      fontWeight: "400",
      letterSpacing: "200",
    },
    "normal-225": {
      fontFamily: "primary",
      fontSize: "225",
      lineHeight: "value-400",
      fontWeight: "400",
      letterSpacing: "200",
    },
    "normal-300": {
      fontFamily: "primary",
      fontSize: "300",
      lineHeight: "value-450",
      fontWeight: "400",
      letterSpacing: "200",
    },
    "normal-400": {
      fontFamily: "primary",
      fontSize: "400",
      lineHeight: "value-550",
      fontWeight: "400",
      letterSpacing: "200",
    },
    "normal-500": {
      fontFamily: "primary",
      fontSize: "500",
      lineHeight: "value-700",
      fontWeight: "400",
      letterSpacing: "200",
    },
    "normal-600": {
      fontFamily: "primary",
      fontSize: "600",
      lineHeight: "value-800",
      fontWeight: "400",
      letterSpacing: "200",
    },
    "medium-125": {
      fontFamily: "primary",
      fontSize: "125",
      lineHeight: "value-200",
      fontWeight: "450",
      letterSpacing: "200",
    },
    "medium-150": {
      fontFamily: "primary",
      fontSize: "150",
      lineHeight: "value-250",
      fontWeight: "450",
      letterSpacing: "200",
    },
    "medium-175": {
      fontFamily: "primary",
      fontSize: "175",
      lineHeight: "value-300",
      fontWeight: "450",
      letterSpacing: "200",
    },
    "medium-200": {
      fontFamily: "primary",
      fontSize: "200",
      lineHeight: "value-350",
      fontWeight: "450",
      letterSpacing: "200",
    },
    "medium-225": {
      fontFamily: "primary",
      fontSize: "225",
      lineHeight: "value-400",
      fontWeight: "450",
      letterSpacing: "200",
    },
    "medium-300": {
      fontFamily: "primary",
      fontSize: "300",
      lineHeight: "value-450",
      fontWeight: "450",
      letterSpacing: "200",
    },
    "medium-400": {
      fontFamily: "primary",
      fontSize: "400",
      lineHeight: "value-550",
      fontWeight: "450",
      letterSpacing: "200",
    },
    "medium-500": {
      fontFamily: "primary",
      fontSize: "500",
      lineHeight: "value-700",
      fontWeight: "450",
      letterSpacing: "200",
    },
    "medium-600": {
      fontFamily: "primary",
      fontSize: "600",
      lineHeight: "value-800",
      fontWeight: "450",
      letterSpacing: "200",
    },
    "strong-125": {
      fontFamily: "primary",
      fontSize: "125",
      lineHeight: "value-200",
      fontWeight: "600",
      letterSpacing: "100",
    },
    "strong-150": {
      fontFamily: "primary",
      fontSize: "150",
      lineHeight: "value-250",
      fontWeight: "600",
      letterSpacing: "100",
    },
    "strong-175": {
      fontFamily: "primary",
      fontSize: "175",
      lineHeight: "value-300",
      fontWeight: "600",
      letterSpacing: "100",
    },
    "strong-200": {
      fontFamily: "primary",
      fontSize: "200",
      lineHeight: "value-350",
      fontWeight: "600",
      letterSpacing: "100",
    },
    "strong-225": {
      fontFamily: "primary",
      fontSize: "225",
      lineHeight: "value-400",
      fontWeight: "600",
      letterSpacing: "100",
    },
    "strong-300": {
      fontFamily: "primary",
      fontSize: "300",
      lineHeight: "value-450",
      fontWeight: "600",
      letterSpacing: "100",
    },
    "strong-400": {
      fontFamily: "primary",
      fontSize: "400",
      lineHeight: "value-550",
      fontWeight: "600",
      letterSpacing: "100",
    },
    "strong-500": {
      fontFamily: "primary",
      fontSize: "500",
      lineHeight: "value-700",
      fontWeight: "600",
      letterSpacing: "100",
    },
    "strong-600": {
      fontFamily: "primary",
      fontSize: "600",
      lineHeight: "value-800",
      fontWeight: "600",
      letterSpacing: "100",
    },
    "body-large": {
      fontFamily: "primary",
      fontSize: "200",
      lineHeight: "value-350",
      fontWeight: "450",
      letterSpacing: "200",
    },
    "body-medium": {
      fontFamily: "primary",
      fontSize: "175",
      lineHeight: "value-300",
      fontWeight: "450",
      letterSpacing: "200",
    },
    "body-small": {
      fontFamily: "primary",
      fontSize: "150",
      lineHeight: "value-250",
      fontWeight: "450",
      letterSpacing: "200",
    },
    "body-xSmall": {
      fontFamily: "primary",
      fontSize: "125",
      lineHeight: "value-200",
      fontWeight: "450",
      letterSpacing: "200",
    },
    "body-strong-large": {
      fontFamily: "primary",
      fontSize: "200",
      lineHeight: "value-350",
      fontWeight: "600",
      letterSpacing: "100",
    },
    "body-strong-medium": {
      fontFamily: "primary",
      fontSize: "175",
      lineHeight: "value-300",
      fontWeight: "600",
      letterSpacing: "100",
    },
    "body-strong-small": {
      fontFamily: "primary",
      fontSize: "150",
      lineHeight: "value-250",
      fontWeight: "600",
      letterSpacing: "100",
    },
    "body-strong-xSmall": {
      fontFamily: "primary",
      fontSize: "125",
      lineHeight: "value-200",
      fontWeight: "600",
      letterSpacing: "100",
    },
    "hero-large": {
      fontFamily: "primary",
      fontSize: "500",
      lineHeight: "value-700",
      fontWeight: "600",
      letterSpacing: "100",
    },
    "hero-medium": {
      fontFamily: "primary",
      fontSize: "600",
      lineHeight: "value-800",
      fontWeight: "600",
      letterSpacing: "100",
    },
    "header-4xLarge": {
      fontFamily: "primary",
      fontSize: "400",
      lineHeight: "value-550",
      fontWeight: "600",
      letterSpacing: "100",
    },
    "header-3xLarge": {
      fontFamily: "primary",
      fontSize: "300",
      lineHeight: "value-450",
      fontWeight: "600",
      letterSpacing: "100",
    },
    "header-xLarge": {
      fontFamily: "primary",
      fontSize: "225",
      lineHeight: "value-400",
      fontWeight: "600",
      letterSpacing: "100",
    },
    "header-large": {
      fontFamily: "primary",
      fontSize: "200",
      lineHeight: "value-350",
      fontWeight: "600",
      letterSpacing: "100",
    },
    "header-medium": {
      fontFamily: "primary",
      fontSize: "175",
      lineHeight: "value-300",
      fontWeight: "600",
      letterSpacing: "100",
    },
    "header-small": {
      fontFamily: "primary",
      fontSize: "150",
      lineHeight: "value-250",
      fontWeight: "600",
      letterSpacing: "100",
    },
  },
  // TO DO: utility for xstyled to gather color of shadow and generate rgba based on opacity
  shadows: {
    "bottom-100": "0px 1px 2px 0px rgba(27, 36, 44, 0.12)",
    "bottom-200":
      "0px 2px 2px -1px rgba(27, 36, 44, 0.04), 0px 2px 8px -1px rgba(27, 36, 44, 0.08)",
    "bottom-300":
      "0px 2px 2px -1px rgba(27, 36, 44, 0.04), 0px 8px 16px -2px rgba(27, 36, 44, 0.12)",
    "bottom-400":
      "0px 2px 2px -1px rgba(27, 36, 44, 0.04), 0px 16px 24px -6px rgba(27, 36, 44, 0.16)",
    "top-100": "0px -1px 2px 0px rgba(27, 36, 44, 0.12)",
    "top-200":
      "0px -2px 2px -1px rgba(27, 36, 44, 0.04), 0px -2px 8px -1px rgba(27, 36, 44, 0.08)",
    "top-300":
      "0px -2px 2px -1px rgba(27, 36, 44, 0.04), 0px -8px 16px -2px rgba(27, 36, 44, 0.12)",
    "top-400":
      "0px -2px 2px -1px rgba(27, 36, 44, 0.04), 0px -16px 24px -6px rgba(27, 36, 44, 0.16)",
  },
  opacity: {
    "0": "0",
    "50": "0.5",
    "100": "1",
    disabled: "0.5",
  },
  screens: {
    _: 0,
    xs: 0,
    sm: 640,
    md: 768,
    lg: 1024,
    xl: 1280,
    "2xl": 1536,
  },
  states: {
    _: null,
    motionSafe: "@media (prefers-reduced-motion: no-preference)",
    motionReduce: "@media (prefers-reduced-motion: reduce)",
    first: "&:first-child",
    last: "&:last-child",
    odd: "&:odd",
    even: "&:even",
    visited: "&:visited",
    checked: "&:checked",
    focusWithin: "&:focus-within",
    hover: "&:hover",
    focus: "&:focus",
    focusVisible: "&:focus-visible",
    active: "&:active",
    placeholder: "&::placeholder",
    disabled: '&:disabled, &[aria-disabled=true], &[data-state="disabled"]',
    selected: '&[data-state="selected"]',
    loading: '&[data-state="loading"]',
    alert: '&:invalid, &[data-state="alert"]',
  },
};

export const theme: Theme = {
  ...tempTheme,
  ringWidths: tempTheme.borderWidths,
};
